"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[8748],{8493:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var t=s(4246),i=s(1670);const l={id:"jest-platform",title:"Plateforme Jest"},r=void 0,o={unversionedId:"jest-platform",id:"version-29.4/jest-platform",title:"Plateforme Jest",description:"Vous pouvez s\xe9lectionner des fonctionnalit\xe9s sp\xe9cifiques de Jest et les utiliser comme des paquets autonomes. Voici une liste des paquets disponibles :",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-29.4/JestPlatform.md",sourceDirName:".",slug:"/jest-platform",permalink:"/fr/docs/29.4/jest-platform",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/jest-v2/fr",tags:[],version:"29.4",frontMatter:{id:"jest-platform",title:"Plateforme Jest"},sidebar:"docs",previous:{title:"Fonctions simul\xe9es",permalink:"/fr/docs/29.4/mock-functions"},next:{title:"Jest Community",permalink:"/fr/docs/29.4/jest-community"}},a={},c=[{value:"jest-changed-files",id:"jest-changed-files",level:2},{value:"Exemple",id:"exemple",level:3},{value:"jest-diff",id:"jest-diff",level:2},{value:"Exemple",id:"exemple-1",level:3},{value:"jest-docblock",id:"jest-docblock",level:2},{value:"Exemple",id:"exemple-2",level:3},{value:"jest-get-type",id:"jest-get-type",level:2},{value:"Exemple",id:"exemple-3",level:3},{value:"jest-validate",id:"jest-validate",level:2},{value:"Exemple",id:"exemple-4",level:3},{value:"jest-worker",id:"jest-worker",level:2},{value:"Exemple",id:"exemple-5",level:3},{value:"pretty-format",id:"pretty-format",level:2},{value:"Exemple",id:"exemple-6",level:3}];function d(e){const n=Object.assign({p:"p",h2:"h2",ul:"ul",li:"li",code:"code",h3:"h3",pre:"pre",a:"a"},(0,i.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Vous pouvez s\xe9lectionner des fonctionnalit\xe9s sp\xe9cifiques de Jest et les utiliser comme des paquets autonomes. Voici une liste des paquets disponibles :"}),"\n",(0,t.jsx)(n.h2,{id:"jest-changed-files",children:"jest-changed-files"}),"\n",(0,t.jsx)(n.p,{children:"Outil pour identifier les fichiers modifi\xe9s dans un d\xe9p\xf4t git/hg. Exporte deux fonctions :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"getChangedFilesForRoots"})," retourne une promesse qui se r\xe9sout en un objet avec les fichiers et les d\xe9p\xf4ts modifi\xe9s."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"findRepos"})," retourne une promesse qui se r\xe9sout en un ensemble de d\xe9p\xf4ts contenus dans le chemin sp\xe9cifi\xe9."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"exemple",children:"Exemple"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const {getChangedFilesForRoots} = require('jest-changed-files');\n\n// affiche l'ensemble des fichiers modifi\xe9s depuis le dernier commit dans le d\xe9p\xf4t courant\ngetChangedFilesForRoots(['./'], {\n  lastCommit: true,\n}).then(result => console.log(result.changedFiles));\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can read more about ",(0,t.jsx)(n.code,{children:"jest-changed-files"})," in the ",(0,t.jsx)(n.a,{href:"https://github.com/jestjs/jest/blob/main/packages/jest-changed-files/README.md",children:"readme file"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"jest-diff",children:"jest-diff"}),"\n",(0,t.jsx)(n.p,{children:"Outil pour visualiser les changements dans les donn\xe9es. Exporte une fonction qui compare deux valeurs de n'importe quel type et renvoie une cha\xeene \xab\xa0joliment format\xe9e\xa0\xbb illustrant la diff\xe9rence entre les deux arguments."}),"\n",(0,t.jsx)(n.h3,{id:"exemple-1",children:"Exemple"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const {diff} = require('jest-diff');\n\nconst a = {a: {b: {c: 5}}};\nconst b = {a: {b: {c: 6}}};\n\nconst result = diff(a, b);\n\n// affiche les diff\xe9rences\nconsole.log(result);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"jest-docblock",children:"jest-docblock"}),"\n",(0,t.jsx)(n.p,{children:"Outil pour extraire et analyser les commentaires en haut d'un fichier JavaScript. Exporte diverses fonctions pour manipuler les donn\xe9es \xe0 l'int\xe9rieur du bloc de commentaires."}),"\n",(0,t.jsx)(n.h3,{id:"exemple-2",children:"Exemple"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const {parseWithComments} = require('jest-docblock');\n\nconst code = `\n/**\n * C'est un exemple\n *\n * @flow\n */\n\n console.log('Hello World!');\n`;\n\nconst parsed = parseWithComments(code);\n\n// imprime un objet avec deux attributs : comments et pragmas.\nconsole.log(parsed);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can read more about ",(0,t.jsx)(n.code,{children:"jest-docblock"})," in the ",(0,t.jsx)(n.a,{href:"https://github.com/jestjs/jest/blob/main/packages/jest-docblock/README.md",children:"readme file"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"jest-get-type",children:"jest-get-type"}),"\n",(0,t.jsx)(n.p,{children:"Module qui identifie le type primitif de n'importe quelle valeur JavaScript. Exporte une fonction qui retourne une cha\xeene de caract\xe8res avec le type de la valeur pass\xe9e en argument."}),"\n",(0,t.jsx)(n.h3,{id:"exemple-3",children:"Exemple"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const {getType} = require('jest-get-type');\n\nconst array = [1, 2, 3];\nconst nullValue = null;\nconst undefinedValue = undefined;\n\n// affiche 'array'\nconsole.log(getType(array));\n// affiche 'null'\nconsole.log(getType(nullValue));\n// affiche 'undefined'\nconsole.log(getType(undefinedValue));\n"})}),"\n",(0,t.jsx)(n.h2,{id:"jest-validate",children:"jest-validate"}),"\n",(0,t.jsx)(n.p,{children:"Outil de validation des configurations transmises par les utilisateurs. Exporte une fonction qui prend deux arguments : la configuration de l'utilisateur et un objet contenant un exemple de configuration et d'autres options. La valeur retourn\xe9e est un objet avec deux attributs :"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"hasDeprecationWarnings"}),", un bool\xe9en indiquant si la configuration transmise a des avertissements de d\xe9pr\xe9ciation,"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"isValid"}),", un bool\xe9en indiquant si la configuration est correcte ou non."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"exemple-4",children:"Exemple"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const {validate} = require('jest-validate');\n\nconst configByUser = {\n  transform: '<rootDir>/node_modules/my-custom-transform',\n};\n\nconst result = validate(configByUser, {\n  comment: '  Documentation: http://custom-docs.com',\n  exampleConfig: {transform: '<rootDir>/node_modules/babel-jest'},\n});\n\nconsole.log(result);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can read more about ",(0,t.jsx)(n.code,{children:"jest-validate"})," in the ",(0,t.jsx)(n.a,{href:"https://github.com/jestjs/jest/blob/main/packages/jest-validate/README.md",children:"readme file"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"jest-worker",children:"jest-worker"}),"\n",(0,t.jsxs)(n.p,{children:["Module utilis\xe9 pour la parall\xe9lisation des t\xe2ches. Exporte une classe ",(0,t.jsx)(n.code,{children:"JestWorker"})," qui prend le chemin du module Node.js et vous permet d'appeler les m\xe9thodes export\xe9es du module comme s'il s'agissait de m\xe9thodes de classe, en renvoyant une promesse qui se r\xe9sout lorsque la m\xe9thode sp\xe9cifi\xe9e termine son ex\xe9cution dans un processus d\xe9riv\xe9."]}),"\n",(0,t.jsx)(n.h3,{id:"exemple-5",children:"Exemple"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",metastring:'title="heavy-task.js"',children:"module.exports = {\n  myHeavyTask: args => {\n    // une t\xe2che longue et intensive pour le CPU.\n  },\n};\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",metastring:'title="main.js"',children:"async function main() {\n  const worker = new Worker(require.resolve('./heavy-task.js'));\n\n  // ex\xe9cute 2 t\xe2ches en parall\xe8le avec des arguments diff\xe9rents\n  const results = await Promise.all([\n    worker.myHeavyTask({foo: 'bar'}),\n    worker.myHeavyTask({bar: 'foo'}),\n  ]);\n\n  console.log(results);\n}\n\nmain();\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can read more about ",(0,t.jsx)(n.code,{children:"jest-worker"})," in the ",(0,t.jsx)(n.a,{href:"https://github.com/jestjs/jest/blob/main/packages/jest-worker/README.md",children:"readme file"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"pretty-format",children:"pretty-format"}),"\n",(0,t.jsx)(n.p,{children:"Exporte une fonction qui convertit n'importe quelle valeur JavaScript en une cha\xeene lisible par l'homme. Prend en charge tous les types de JavaScript int\xe9gr\xe9s et permet d'\xe9tendre les types sp\xe9cifiques aux applications via des plugins d\xe9finis par l'utilisateur."}),"\n",(0,t.jsx)(n.h3,{id:"exemple-6",children:"Exemple"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const {format: prettyFormat} = require('pretty-format');\n\nconst val = {object: {}};\nval.circularReference = val;\nval[Symbol('foo')] = 'foo';\nval.map = new Map([['prop', 'value']]);\nval.array = [-0, Infinity, NaN];\n\nconsole.log(prettyFormat(val));\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can read more about ",(0,t.jsx)(n.code,{children:"pretty-format"})," in the ",(0,t.jsx)(n.a,{href:"https://github.com/jestjs/jest/blob/main/packages/pretty-format/README.md",children:"readme file"}),"."]})]})}const u=function(e={}){const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(d,e)})):d(e)}},1670:(e,n,s)=>{s.d(n,{Zo:()=>o,ah:()=>l});var t=s(7378);const i=t.createContext({});function l(e){const n=t.useContext(i);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const r={};function o({components:e,children:n,disableParentContext:s}){let o;return o=s?"function"==typeof e?e({}):e||r:l(e),t.createElement(i.Provider,{value:o},n)}}}]);