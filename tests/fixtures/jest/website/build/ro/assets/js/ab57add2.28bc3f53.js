"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[58],{1245:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>j,frontMatter:()=>l,metadata:()=>a,toc:()=>u});var n=s(4246),i=s(1670),r=s(8447),c=s(2599),o=s(6294);const l={id:"cli",title:"Op\u021biuni Jest pentru linia de comand\u0103"},d=void 0,a={unversionedId:"cli",id:"version-29.6/cli",title:"Op\u021biuni Jest pentru linia de comand\u0103",description:"Comanda jest are mai multe op\u0163iuni utile. Pute\u0163i executa jest --help pentru a vizualiza toate op\u0163iunile disponibile. De asemenea, multe dintre op\u0163iunile de mai jos pot fi folosite \xeempreun\u0103, pentru a rula testele exact a\u015fa cum dori\u0163i. Fiecare dintre op\u0163iunile de  configurare Jest pot fi specificate, de asemenea, prin intermediul CLI.",source:"@site/i18n/ro/docusaurus-plugin-content-docs/version-29.6/CLI.md",sourceDirName:".",slug:"/cli",permalink:"/ro/docs/cli",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/jest-v2/ro",tags:[],version:"29.6",frontMatter:{id:"cli",title:"Op\u021biuni Jest pentru linia de comand\u0103"},sidebar:"api",previous:{title:"Configuring Jest",permalink:"/ro/docs/configuration"},next:{title:"Environment Variables",permalink:"/ro/docs/environment-variables"}},h={},u=[{value:"Rularea din linia de comand\u0103",id:"rularea-din-linia-de-comand\u0103",level:2},{value:"Using with package manager",id:"using-with-package-manager",level:2},{value:"Camelcase &amp; dashed args support",id:"camelcase--dashed-args-support",level:2},{value:"Options",id:"options",level:2},{value:"Reference",id:"reference",level:2},{value:"<code>jest &lt;regexForTestFiles&gt;</code>",id:"jest-regexfortestfiles",level:3},{value:"<code>--bail[=&lt;n&gt;]</code>",id:"--bailn",level:3},{value:"<code>--cache</code>",id:"--cache",level:3},{value:"<code>--changedFilesWithAncestor</code>",id:"--changedfileswithancestor",level:3},{value:"<code>--changedSince</code>",id:"--changedsince",level:3},{value:"<code>--ci</code>",id:"--ci",level:3},{value:"<code>--clearCache</code>",id:"--clearcache",level:3},{value:"<code>--clearMocks</code>",id:"--clearmocks",level:3},{value:"<code>--collectCoverageFrom=&lt;glob&gt;</code>",id:"--collectcoveragefromglob",level:3},{value:"<code>--colors</code>",id:"--colors",level:3},{value:"<code>--config=&lt;path&gt;</code>",id:"--configpath",level:3},{value:"<code>--coverage[=&lt;boolean&gt;]</code>",id:"--coverageboolean",level:3},{value:"<code>--coverageDirectory=&lt;path&gt;</code>",id:"--coveragedirectorypath",level:3},{value:"<code>--coverageProvider=&lt;provider&gt;</code>",id:"--coverageproviderprovider",level:3},{value:"<code>--debug</code>",id:"--debug",level:3},{value:"<code>--detectOpenHandles</code>",id:"--detectopenhandles",level:3},{value:"<code>--env=&lt;environment&gt;</code>",id:"--envenvironment",level:3},{value:"<code>--errorOnDeprecated</code>",id:"--errorondeprecated",level:3},{value:"<code>--expand</code>",id:"--expand",level:3},{value:"<code>--filter=&lt;file&gt;</code>",id:"--filterfile",level:3},{value:"<code>--findRelatedTests &lt;spaceSeparatedListOfSourceFiles&gt;</code>",id:"--findrelatedtests-spaceseparatedlistofsourcefiles",level:3},{value:"<code>--forceExit</code>",id:"--forceexit",level:3},{value:"<code>--help</code>",id:"--help",level:3},{value:"<code>--ignoreProjects &lt;project1&gt; ... &lt;projectN&gt;</code>",id:"--ignoreprojects-project1--projectn",level:3},{value:"<code>--init</code>",id:"--init",level:3},{value:"<code>--injectGlobals</code>",id:"--injectglobals",level:3},{value:"<code>--json</code>",id:"--json",level:3},{value:"<code>--lastCommit</code>",id:"--lastcommit",level:3},{value:"<code>--listTests</code>",id:"--listtests",level:3},{value:"<code>--logHeapUsage</code>",id:"--logheapusage",level:3},{value:"<code>--maxConcurrency=&lt;num&gt;</code>",id:"--maxconcurrencynum",level:3},{value:"<code>--maxWorkers=&lt;num&gt;|&lt;string&gt;</code>",id:"--maxworkersnumstring",level:3},{value:"<code>--noStackTrace</code>",id:"--nostacktrace",level:3},{value:"<code>--notify</code>",id:"--notify",level:3},{value:"<code>--onlyChanged</code>",id:"--onlychanged",level:3},{value:"<code>--openHandlesTimeout=&lt;milliseconds&gt;</code>",id:"--openhandlestimeoutmilliseconds",level:3},{value:"<code>--outputFile=&lt;filename&gt;</code>",id:"--outputfilefilename",level:3},{value:"<code>--passWithNoTests</code>",id:"--passwithnotests",level:3},{value:"<code>--projects &lt;path1&gt; ... &lt;pathN&gt;</code>",id:"--projects-path1--pathn",level:3},{value:"<code>--randomize</code>",id:"--randomize",level:3},{value:"<code>--reporters</code>",id:"--reporters",level:3},{value:"<code>--resetMocks</code>",id:"--resetmocks",level:3},{value:"<code>--restoreMocks</code>",id:"--restoremocks",level:3},{value:"<code>--roots</code>",id:"--roots",level:3},{value:"<code>--runInBand</code>",id:"--runinband",level:3},{value:"<code>--runTestsByPath</code>",id:"--runtestsbypath",level:3},{value:"<code>--seed=&lt;num&gt;</code>",id:"--seednum",level:3},{value:"<code>--selectProjects &lt;project1&gt; ... &lt;projectN&gt;</code>",id:"--selectprojects-project1--projectn",level:3},{value:"<code>--setupFilesAfterEnv &lt;path1&gt; ... &lt;pathN&gt;</code>",id:"--setupfilesafterenv-path1--pathn",level:3},{value:"<code>--shard</code>",id:"--shard",level:3},{value:"<code>--showConfig</code>",id:"--showconfig",level:3},{value:"<code>--showSeed</code>",id:"--showseed",level:3},{value:"<code>--silent</code>",id:"--silent",level:3},{value:"<code>--testEnvironmentOptions=&lt;json string&gt;</code>",id:"--testenvironmentoptionsjson-string",level:3},{value:"<code>--testLocationInResults</code>",id:"--testlocationinresults",level:3},{value:"<code>--testMatch glob1 ... globN</code>",id:"--testmatch-glob1--globn",level:3},{value:"<code>--testNamePattern=&lt;regex&gt;</code>",id:"--testnamepatternregex",level:3},{value:"<code>--testPathIgnorePatterns=&lt;regex&gt;|[array]</code>",id:"--testpathignorepatternsregexarray",level:3},{value:"<code>--testPathPattern=&lt;regex&gt;</code>",id:"--testpathpatternregex",level:3},{value:"<code>--testRunner=&lt;path&gt;</code>",id:"--testrunnerpath",level:3},{value:"<code>--testSequencer=&lt;path&gt;</code>",id:"--testsequencerpath",level:3},{value:"<code>--testTimeout=&lt;number&gt;</code>",id:"--testtimeoutnumber",level:3},{value:"<code>--updateSnapshot</code>",id:"--updatesnapshot",level:3},{value:"<code>--useStderr</code>",id:"--usestderr",level:3},{value:"<code>--verbose</code>",id:"--verbose",level:3},{value:"<code>--version</code>",id:"--version",level:3},{value:"<code>--watch</code>",id:"--watch",level:3},{value:"<code>--watchAll</code>",id:"--watchall",level:3},{value:"<code>--watchman</code>",id:"--watchman",level:3},{value:"<code>--workerThreads</code>",id:"--workerthreads",level:3}];function p(e){const t=Object.assign({p:"p",code:"code",a:"a",h2:"h2",pre:"pre",admonition:"admonition",hr:"hr",h3:"h3",em:"em",strong:"strong"},(0,i.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Comanda ",(0,n.jsx)(t.code,{children:"jest"})," are mai multe op\u0163iuni utile. Pute\u0163i executa ",(0,n.jsx)(t.code,{children:"jest --help"})," pentru a vizualiza toate op\u0163iunile disponibile. De asemenea, multe dintre op\u0163iunile de mai jos pot fi folosite \xeempreun\u0103, pentru a rula testele exact a\u015fa cum dori\u0163i. Fiecare dintre op\u0163iunile de ",(0,n.jsx)(t.a,{href:"/ro/docs/configuration",children:" configurare"})," Jest pot fi specificate, de asemenea, prin intermediul CLI."]}),"\n",(0,n.jsx)(t.p,{children:"Aici este o scurt\u0103 prezentare:"}),"\n",(0,n.jsx)(t.h2,{id:"rularea-din-linia-de-comand\u0103",children:"Rularea din linia de comand\u0103"}),"\n",(0,n.jsx)(t.p,{children:"Execut\u0103 toate testele (implicit):"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"jest\n"})}),"\n",(0,n.jsx)(t.p,{children:"Execut\u0103 doar testele care s-au specificat cu un model sau cu un nume de fi\u015fier:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"jest my-test #or\njest path/to/my-test.js\n"})}),"\n",(0,n.jsx)(t.p,{children:"Execut\u0103 testele legate de fi\u015fierele modificate \xeen hg/git (fi\u015fiere pentru care nu s-a facut commit):"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"jest -o\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Execut\u0103 testele legate de fi\u0219ierele ",(0,n.jsx)(t.code,{children:"path/to/fileA.js"})," \u015fi ",(0,n.jsx)(t.code,{children:"path/to/fileB.js"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"jest --findRelatedTests path/to/fileA.js path/to/fileB.js\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Execut\u0103 teste care se potrivesc cu acest nume (caut\u0103 \xeen textele din blocurile ",(0,n.jsx)(t.code,{children:"describe"})," sau ",(0,n.jsx)(t.code,{children:"test"}),")."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"jest -t name-of-spec\n"})}),"\n",(0,n.jsx)(t.p,{children:"Execut\u0103 \xeen mod de veghe:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"jest --watch #runs jest -o by default\njest --watchAll #runs all tests\n"})}),"\n",(0,n.jsx)(t.p,{children:"Modul de veghe permite s\u0103 specifica\u0163i numele sau calea c\u0103tre un fi\u0219ier pentru a v\u0103 concentra pe un anumit set de teste."}),"\n",(0,n.jsx)(t.h2,{id:"using-with-package-manager",children:"Using with package manager"}),"\n",(0,n.jsx)(t.p,{children:"If you run Jest via your package manager, you can still pass the command line arguments directly as Jest arguments."}),"\n",(0,n.jsx)(t.p,{children:"Instead of:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'jest -u -t="ColorPicker"\n'})}),"\n",(0,n.jsx)(t.p,{children:"pute\u0163i scrie:"}),"\n",(0,n.jsxs)(r.Z,{groupId:"npm2yarn",children:[(0,n.jsx)(c.Z,{value:"npm",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'npm test -- -u -t="ColorPicker"\n'})})}),(0,n.jsx)(c.Z,{value:"yarn",label:"Yarn",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'yarn test -u -t="ColorPicker"\n'})})}),(0,n.jsx)(c.Z,{value:"pnpm",label:"pnpm",children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'pnpm test -- -u -t="ColorPicker"\n'})})})]}),"\n",(0,n.jsx)(t.h2,{id:"camelcase--dashed-args-support",children:"Camelcase & dashed args support"}),"\n",(0,n.jsx)(t.p,{children:"Jest supports both camelcase and dashed arg formats. The following examples will have an equal result:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"jest --collect-coverage\njest --collectCoverage\n"})}),"\n",(0,n.jsx)(t.p,{children:"Arguments can also be mixed:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"jest --update-snapshot --detectOpenHandles\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["CLI options take precedence over values from the ",(0,n.jsx)(t.a,{href:"/ro/docs/configuration",children:"Configuration"}),"."]})}),"\n","\n","\n",(0,n.jsx)(o.Z,{toc:u.slice(2)}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"reference",children:"Reference"}),"\n",(0,n.jsx)(t.h3,{id:"jest-regexfortestfiles",children:(0,n.jsx)(t.code,{children:"jest <regexForTestFiles>"})}),"\n",(0,n.jsxs)(t.p,{children:["C\xe2nd executa\u0163i ",(0,n.jsx)(t.code,{children:"jest"})," cu un argument, el este tratat ca o expresie regulat\u0103 pentru a c\u0103uta fi\u0219ierele din proiect. Este posibil\u0103 rularea testelor prin furnizarea unui tipar. Numai fi\u015fierele care se potrivesc tiparului vor fi preluate \u015fi executate. Depending on your terminal, you may need to quote this argument: ",(0,n.jsx)(t.code,{children:'jest "my.*(complex)?pattern"'}),". On Windows, you will need to use ",(0,n.jsx)(t.code,{children:"/"})," as a path separator or escape ",(0,n.jsx)(t.code,{children:"\\"})," as ",(0,n.jsx)(t.code,{children:"\\\\"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--bailn",children:(0,n.jsx)(t.code,{children:"--bail[=<n>]"})}),"\n",(0,n.jsxs)(t.p,{children:["Alias: ",(0,n.jsx)(t.code,{children:"-b"}),". Exit the test suite immediately upon ",(0,n.jsx)(t.code,{children:"n"})," number of failing test suite. Defaults to ",(0,n.jsx)(t.code,{children:"1"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--cache",children:(0,n.jsx)(t.code,{children:"--cache"})}),"\n",(0,n.jsxs)(t.p,{children:["Dac\u0103 se utilizeaz\u0103 memoria cache. Setarea implicit\u0103 este true. Se poate dezactiva cache-ul folosind ",(0,n.jsx)(t.code,{children:"--no-cache"}),"."]}),"\n",(0,n.jsx)(t.admonition,{type:"caution",children:(0,n.jsx)(t.p,{children:"The cache should only be disabled if you are experiencing caching related problems. On average, disabling the cache makes Jest at least two times slower."})}),"\n",(0,n.jsxs)(t.p,{children:["If you want to inspect the cache, use ",(0,n.jsx)(t.code,{children:"--showConfig"})," and look at the ",(0,n.jsx)(t.code,{children:"cacheDirectory"})," value. If you need to clear the cache, use ",(0,n.jsx)(t.code,{children:"--clearCache"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--changedfileswithancestor",children:(0,n.jsx)(t.code,{children:"--changedFilesWithAncestor"})}),"\n",(0,n.jsxs)(t.p,{children:["Runs tests related to the current changes and the changes made in the last commit. Behaves similarly to ",(0,n.jsx)(t.code,{children:"--onlyChanged"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--changedsince",children:(0,n.jsx)(t.code,{children:"--changedSince"})}),"\n",(0,n.jsxs)(t.p,{children:["Runs tests related to the changes since the provided branch or commit hash. If the current branch has diverged from the given branch, then only changes made locally will be tested. Behaves similarly to ",(0,n.jsx)(t.code,{children:"--onlyChanged"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--ci",children:(0,n.jsx)(t.code,{children:"--ci"})}),"\n",(0,n.jsxs)(t.p,{children:["C\xe2nd aceast\u0103 op\u0163iune este folosit\u0103, Jest va presupune c\u0103 se execut\u0103 \xeentr-un mediu de CI. Acest lucru schimb\u0103 comportamentul atunci c\xe2nd un nou\u0103 imagine instantaneu este \xeent\xe2lnit\u0103. \xcen locul comportamentului normal de a stoca automat un nou instantaneu, acesta va e\u015fua testul \u015fi va cere ca Jest s\u0103 fie executat cu ",(0,n.jsx)(t.code,{children:"--updateSnapshot"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--clearcache",children:(0,n.jsx)(t.code,{children:"--clearCache"})}),"\n",(0,n.jsxs)(t.p,{children:["Deletes the Jest cache directory and then exits without running tests. Will delete ",(0,n.jsx)(t.code,{children:"cacheDirectory"})," if the option is passed, or Jest's default cache directory. The default cache directory can be found by calling ",(0,n.jsx)(t.code,{children:"jest --showConfig"}),"."]}),"\n",(0,n.jsx)(t.admonition,{type:"caution",children:(0,n.jsx)(t.p,{children:"Clearing the cache will reduce performance."})}),"\n",(0,n.jsx)(t.h3,{id:"--clearmocks",children:(0,n.jsx)(t.code,{children:"--clearMocks"})}),"\n",(0,n.jsxs)(t.p,{children:["Automatically clear mock calls, instances, contexts and results before every test. Equivalent to calling ",(0,n.jsx)(t.a,{href:"/ro/docs/jest-object#jestclearallmocks",children:(0,n.jsx)(t.code,{children:"jest.clearAllMocks()"})})," before each test. This does not remove any mock implementation that may have been provided."]}),"\n",(0,n.jsx)(t.h3,{id:"--collectcoveragefromglob",children:(0,n.jsx)(t.code,{children:"--collectCoverageFrom=<glob>"})}),"\n",(0,n.jsxs)(t.p,{children:["A glob pattern relative to ",(0,n.jsx)(t.code,{children:"rootDir"})," matching the files that coverage info needs to be collected from."]}),"\n",(0,n.jsx)(t.h3,{id:"--colors",children:(0,n.jsx)(t.code,{children:"--colors"})}),"\n",(0,n.jsx)(t.p,{children:"For\u0163eaz\u0103 afi\u0219area rezultatelor testelor s\u0103 fie colorate chiar dac\u0103 stdout nu este un TTY."}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["Alternatively you can set the environment variable ",(0,n.jsx)(t.code,{children:"FORCE_COLOR=true"})," to forcefully enable or ",(0,n.jsx)(t.code,{children:"FORCE_COLOR=false"})," to disable colorized output. The use of ",(0,n.jsx)(t.code,{children:"FORCE_COLOR"})," overrides all other color support checks."]})}),"\n",(0,n.jsx)(t.h3,{id:"--configpath",children:(0,n.jsx)(t.code,{children:"--config=<path>"})}),"\n",(0,n.jsxs)(t.p,{children:["Alias: ",(0,n.jsx)(t.code,{children:"-c"}),". The path to a Jest config file specifying how to find and execute tests. If no ",(0,n.jsx)(t.code,{children:"rootDir"})," is set in the config, the directory containing the config file is assumed to be the ",(0,n.jsx)(t.code,{children:"rootDir"})," for the project. Acest lucru poate fi, de asemenea, o valoare codificat\u0103 JSON pe care Jest o va folosi pe post de configurare."]}),"\n",(0,n.jsx)(t.h3,{id:"--coverageboolean",children:(0,n.jsx)(t.code,{children:"--coverage[=<boolean>]"})}),"\n",(0,n.jsxs)(t.p,{children:["Alias: ",(0,n.jsx)(t.code,{children:"--collectCoverage"}),". Indic\u0103 faptul c\u0103 informa\u0163iile de acoperire a codului vor fi colectate \u0219i afi\u0219ate. Optionally pass ",(0,n.jsx)(t.code,{children:"<boolean>"})," to override option set in configuration."]}),"\n",(0,n.jsx)(t.h3,{id:"--coveragedirectorypath",children:(0,n.jsx)(t.code,{children:"--coverageDirectory=<path>"})}),"\n",(0,n.jsx)(t.p,{children:"The directory where Jest should output its coverage files."}),"\n",(0,n.jsx)(t.h3,{id:"--coverageproviderprovider",children:(0,n.jsx)(t.code,{children:"--coverageProvider=<provider>"})}),"\n",(0,n.jsxs)(t.p,{children:["Indicates which provider should be used to instrument code for coverage. Allowed values are ",(0,n.jsx)(t.code,{children:"babel"})," (default) or ",(0,n.jsx)(t.code,{children:"v8"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--debug",children:(0,n.jsx)(t.code,{children:"--debug"})}),"\n",(0,n.jsx)(t.p,{children:"Print debugging info about your Jest config."}),"\n",(0,n.jsx)(t.h3,{id:"--detectopenhandles",children:(0,n.jsx)(t.code,{children:"--detectOpenHandles"})}),"\n",(0,n.jsxs)(t.p,{children:["Attempt to collect and print open handles preventing Jest from exiting cleanly. Use this in cases where you need to use ",(0,n.jsx)(t.code,{children:"--forceExit"})," in order for Jest to exit to potentially track down the reason. This implies ",(0,n.jsx)(t.code,{children:"--runInBand"}),", making tests run serially. Implemented using ",(0,n.jsx)(t.a,{href:"https://nodejs.org/api/async_hooks.html",children:(0,n.jsx)(t.code,{children:"async_hooks"})}),". This option has a significant performance penalty and should only be used for debugging."]}),"\n",(0,n.jsx)(t.h3,{id:"--envenvironment",children:(0,n.jsx)(t.code,{children:"--env=<environment>"})}),"\n",(0,n.jsxs)(t.p,{children:["The test environment used for all tests. This can point to any file or node module. Examples: ",(0,n.jsx)(t.code,{children:"jsdom"}),", ",(0,n.jsx)(t.code,{children:"node"})," or ",(0,n.jsx)(t.code,{children:"path/to/my-environment.js"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--errorondeprecated",children:(0,n.jsx)(t.code,{children:"--errorOnDeprecated"})}),"\n",(0,n.jsx)(t.p,{children:"Make calling deprecated APIs throw helpful error messages. Useful for easing the upgrade process."}),"\n",(0,n.jsx)(t.h3,{id:"--expand",children:(0,n.jsx)(t.code,{children:"--expand"})}),"\n",(0,n.jsxs)(t.p,{children:["Alias: ",(0,n.jsx)(t.code,{children:"-e"}),". Use this flag to show full diffs and errors instead of a patch."]}),"\n",(0,n.jsx)(t.h3,{id:"--filterfile",children:(0,n.jsx)(t.code,{children:"--filter=<file>"})}),"\n",(0,n.jsxs)(t.p,{children:["Path to a module exporting a filtering function. This asynchronous function receives a list of test paths which can be manipulated to exclude tests from running by returning an object with shape ",(0,n.jsx)(t.code,{children:"{ filtered: Array<{ test: string }> }"}),". Especially useful when used in conjunction with a testing infrastructure to filter known broken tests, e.g."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",metastring:'title="my-filter.js"',children:'module.exports = testPaths => {\n  const allowedPaths = testPaths\n    .filter(filteringFunction)\n    .map(test => ({test})); // [{ test: "path1.spec.js" }, { test: "path2.spec.js" }, etc]\n\n  return {\n    filtered: allowedPaths,\n  };\n};\n'})}),"\n",(0,n.jsx)(t.h3,{id:"--findrelatedtests-spaceseparatedlistofsourcefiles",children:(0,n.jsx)(t.code,{children:"--findRelatedTests <spaceSeparatedListOfSourceFiles>"})}),"\n",(0,n.jsxs)(t.p,{children:["Find and run the tests that cover a space separated list of source files that were passed in as arguments. Useful for pre-commit hook integration to run the minimal amount of tests necessary. Can be used together with ",(0,n.jsx)(t.code,{children:"--coverage"})," to include a test coverage for the source files, no duplicate ",(0,n.jsx)(t.code,{children:"--collectCoverageFrom"})," arguments needed."]}),"\n",(0,n.jsx)(t.h3,{id:"--forceexit",children:(0,n.jsx)(t.code,{children:"--forceExit"})}),"\n",(0,n.jsx)(t.p,{children:"For\u0163eaz\u0103 ie\u0219irea din Jest dup\u0103 ce toate testele \u0219i-au finalizat rularea. Acest lucru este util atunci c\xe2nd resursele setate din codul de test nu pot fi cur\u0103\u0163ate \xeen mod adecvat."}),"\n",(0,n.jsx)(t.admonition,{type:"caution",children:(0,n.jsxs)(t.p,{children:["This feature is an escape-hatch. Dac\u0103 Jest nu returneaz\u0103 la sf\xe2r\u015fitul rul\u0103rii unui test, \xeenseamn\u0103 c\u0103 resurse externe sunt \xeenc\u0103 \xeen execu\u021bie sau cronometrele sunt \xeenc\u0103 \xeen a\u015fteptare \xeen codul rulat. Este recomandat s\u0103 cur\u0103\u021ba\u021bi resursele externe, dup\u0103 fiecare test pentru a v\u0103 asigura c\u0103 Jest \xee\u0219i poate \xeencheia rularea \xeen mod curat. You can use ",(0,n.jsx)(t.code,{children:"--detectOpenHandles"})," to help track it down."]})}),"\n",(0,n.jsx)(t.h3,{id:"--help",children:(0,n.jsx)(t.code,{children:"--help"})}),"\n",(0,n.jsx)(t.p,{children:"Afi\u0219eaz\u0103 informa\u0163ii ajut\u0103toare, similar cu aceast\u0103 pagin\u0103."}),"\n",(0,n.jsx)(t.h3,{id:"--ignoreprojects-project1--projectn",children:(0,n.jsx)(t.code,{children:"--ignoreProjects <project1> ... <projectN>"})}),"\n",(0,n.jsxs)(t.p,{children:["Ignore the tests of the specified projects. Jest uses the attribute ",(0,n.jsx)(t.code,{children:"displayName"})," in the configuration to identify each project. If you use this option, you should provide a ",(0,n.jsx)(t.code,{children:"displayName"})," to all your projects."]}),"\n",(0,n.jsx)(t.h3,{id:"--init",children:(0,n.jsx)(t.code,{children:"--init"})}),"\n",(0,n.jsxs)(t.p,{children:["Generate a basic configuration file. Based on your project, Jest will ask you a few questions that will help to generate a ",(0,n.jsx)(t.code,{children:"jest.config.js"})," file with a short description for each option."]}),"\n",(0,n.jsx)(t.h3,{id:"--injectglobals",children:(0,n.jsx)(t.code,{children:"--injectGlobals"})}),"\n",(0,n.jsxs)(t.p,{children:["Insert Jest's globals (",(0,n.jsx)(t.code,{children:"expect"}),", ",(0,n.jsx)(t.code,{children:"test"}),", ",(0,n.jsx)(t.code,{children:"describe"}),", ",(0,n.jsx)(t.code,{children:"beforeEach"})," etc.) into the global environment. If you set this to ",(0,n.jsx)(t.code,{children:"false"}),", you should import from ",(0,n.jsx)(t.code,{children:"@jest/globals"}),", e.g."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"import {expect, jest, test} from '@jest/globals';\n\njest.useFakeTimers();\n\ntest('some test', () => {\n  expect(Date.now()).toBe(0);\n});\n"})}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["This option is only supported using the default ",(0,n.jsx)(t.code,{children:"jest-circus"})," test runner."]})}),"\n",(0,n.jsx)(t.h3,{id:"--json",children:(0,n.jsx)(t.code,{children:"--json"})}),"\n",(0,n.jsx)(t.p,{children:"Prints the test results in JSON. This mode will send all other test output and user messages to stderr."}),"\n",(0,n.jsx)(t.h3,{id:"--lastcommit",children:(0,n.jsx)(t.code,{children:"--lastCommit"})}),"\n",(0,n.jsxs)(t.p,{children:["Run all tests affected by file changes in the last commit made. Behaves similarly to ",(0,n.jsx)(t.code,{children:"--onlyChanged"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--listtests",children:(0,n.jsx)(t.code,{children:"--listTests"})}),"\n",(0,n.jsx)(t.p,{children:"Lists all test files that Jest will run given the arguments, and exits."}),"\n",(0,n.jsx)(t.h3,{id:"--logheapusage",children:(0,n.jsx)(t.code,{children:"--logHeapUsage"})}),"\n",(0,n.jsxs)(t.p,{children:["Logs the heap usage after every test. Useful to debug memory leaks. Use together with ",(0,n.jsx)(t.code,{children:"--runInBand"})," and ",(0,n.jsx)(t.code,{children:"--expose-gc"})," in node."]}),"\n",(0,n.jsx)(t.h3,{id:"--maxconcurrencynum",children:(0,n.jsx)(t.code,{children:"--maxConcurrency=<num>"})}),"\n",(0,n.jsxs)(t.p,{children:["Prevents Jest from executing more than the specified amount of tests at the same time. Only affects tests that use ",(0,n.jsx)(t.code,{children:"test.concurrent"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--maxworkersnumstring",children:(0,n.jsx)(t.code,{children:"--maxWorkers=<num>|<string>"})}),"\n",(0,n.jsxs)(t.p,{children:["Alias: ",(0,n.jsx)(t.code,{children:"-w"}),". Specific\u0103 num\u0103rul maxim de workeri ce vor fi instan\u021bia\u021bi pentru teste. In single run mode, this defaults to the number of the cores available on your machine minus one for the main thread. In watch mode, this defaults to half of the available cores on your machine to ensure Jest is unobtrusive and does not grind your machine to a halt. It may be useful to adjust this in resource limited environments like CIs but the defaults should be adequate for most use-cases."]}),"\n",(0,n.jsxs)(t.p,{children:["For environments with variable CPUs available, you can use percentage based configuration: ",(0,n.jsx)(t.code,{children:"--maxWorkers=50%"})]}),"\n",(0,n.jsx)(t.h3,{id:"--nostacktrace",children:(0,n.jsx)(t.code,{children:"--noStackTrace"})}),"\n",(0,n.jsx)(t.p,{children:"Dezactiveaz\u0103 urm\u0103rirea stivei de execu\u021bie \xeen afi\u0219area rezultatelor testelor."}),"\n",(0,n.jsx)(t.h3,{id:"--notify",children:(0,n.jsx)(t.code,{children:"--notify"})}),"\n",(0,n.jsx)(t.p,{children:"Activates notifications for test results. Good for when you don't want your consciousness to be able to focus on anything except JavaScript testing."}),"\n",(0,n.jsx)(t.h3,{id:"--onlychanged",children:(0,n.jsx)(t.code,{children:"--onlyChanged"})}),"\n",(0,n.jsxs)(t.p,{children:["Alias: ",(0,n.jsx)(t.code,{children:"-o"}),". \xcencearc\u0103 s\u0103 identifice care teste trebuie rulate pe baza fi\u015fierelor care s-au modificat \xeen proiectul curent. Only works if you're running tests in a git/hg repository at the moment and requires a static dependency graph (ie. no dynamic requires)."]}),"\n",(0,n.jsx)(t.h3,{id:"--openhandlestimeoutmilliseconds",children:(0,n.jsx)(t.code,{children:"--openHandlesTimeout=<milliseconds>"})}),"\n",(0,n.jsxs)(t.p,{children:["When ",(0,n.jsx)(t.code,{children:"--detectOpenHandles"})," and ",(0,n.jsx)(t.code,{children:"--forceExit"})," are ",(0,n.jsx)(t.em,{children:"disabled"}),", Jest will print a warning if the process has not exited cleanly after this number of milliseconds. A value of ",(0,n.jsx)(t.code,{children:"0"})," disables the warning. Defaults to ",(0,n.jsx)(t.code,{children:"1000"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--outputfilefilename",children:(0,n.jsx)(t.code,{children:"--outputFile=<filename>"})}),"\n",(0,n.jsxs)(t.p,{children:["Scrie rezultatele testelor \xeentr-un fi\u0219ier atunci c\xe2nd este specificat\u0103 \u0219i op\u0163iunea ",(0,n.jsx)(t.code,{children:"--json"}),". The returned JSON structure is documented in ",(0,n.jsx)(t.a,{href:"/ro/docs/configuration#testresultsprocessor-string",children:"testResultsProcessor"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--passwithnotests",children:(0,n.jsx)(t.code,{children:"--passWithNoTests"})}),"\n",(0,n.jsx)(t.p,{children:"Allows the test suite to pass when no files are found."}),"\n",(0,n.jsx)(t.h3,{id:"--projects-path1--pathn",children:(0,n.jsx)(t.code,{children:"--projects <path1> ... <pathN>"})}),"\n",(0,n.jsxs)(t.p,{children:["Run tests from one or more projects, found in the specified paths; also takes path globs. This option is the CLI equivalent of the ",(0,n.jsx)(t.a,{href:"configuration#projects-arraystring--projectconfig",children:(0,n.jsx)(t.code,{children:"projects"})})," configuration option."]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["If configuration files are found in the specified paths, ",(0,n.jsx)(t.em,{children:"all"})," projects specified within those configuration files will be run."]})}),"\n",(0,n.jsx)(t.h3,{id:"--randomize",children:(0,n.jsx)(t.code,{children:"--randomize"})}),"\n",(0,n.jsxs)(t.p,{children:["Shuffle the order of the tests within a file. The shuffling is based on the seed. See ",(0,n.jsx)(t.a,{href:"#--seednum",children:(0,n.jsx)(t.code,{children:"--seed=<num>"})})," for more info."]}),"\n",(0,n.jsxs)(t.p,{children:["Seed value is displayed when this option is set. Equivalent to setting the CLI option ",(0,n.jsx)(t.a,{href:"#--showseed",children:(0,n.jsx)(t.code,{children:"--showSeed"})}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"jest --randomize --seed 1234\n"})}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["This option is only supported using the default ",(0,n.jsx)(t.code,{children:"jest-circus"})," test runner."]})}),"\n",(0,n.jsx)(t.h3,{id:"--reporters",children:(0,n.jsx)(t.code,{children:"--reporters"})}),"\n",(0,n.jsxs)(t.p,{children:["Run tests with specified reporters. ",(0,n.jsx)(t.a,{href:"configuration#reporters-arraymodulename--modulename-options",children:"Reporter options"})," are not available via CLI. Example with multiple reporters:"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:'jest --reporters="default" --reporters="jest-junit"'})}),"\n",(0,n.jsx)(t.h3,{id:"--resetmocks",children:(0,n.jsx)(t.code,{children:"--resetMocks"})}),"\n",(0,n.jsxs)(t.p,{children:["Automatically reset mock state before every test. Equivalent to calling ",(0,n.jsx)(t.a,{href:"/ro/docs/jest-object#jestresetallmocks",children:(0,n.jsx)(t.code,{children:"jest.resetAllMocks()"})})," before each test. This will lead to any mocks having their fake implementations removed but does not restore their initial implementation."]}),"\n",(0,n.jsx)(t.h3,{id:"--restoremocks",children:(0,n.jsx)(t.code,{children:"--restoreMocks"})}),"\n",(0,n.jsxs)(t.p,{children:["Automatically restore mock state and implementation before every test. Equivalent to calling ",(0,n.jsx)(t.a,{href:"/ro/docs/jest-object#jestrestoreallmocks",children:(0,n.jsx)(t.code,{children:"jest.restoreAllMocks()"})})," before each test. This will lead to any mocks having their fake implementations removed and restores their initial implementation."]}),"\n",(0,n.jsx)(t.h3,{id:"--roots",children:(0,n.jsx)(t.code,{children:"--roots"})}),"\n",(0,n.jsx)(t.p,{children:"A list of paths to directories that Jest should use to search for files in."}),"\n",(0,n.jsx)(t.h3,{id:"--runinband",children:(0,n.jsx)(t.code,{children:"--runInBand"})}),"\n",(0,n.jsxs)(t.p,{children:["Alias: ",(0,n.jsx)(t.code,{children:"-i"}),". Run all tests serially in the current process, rather than creating a worker pool of child processes that run tests. This can be useful for debugging."]}),"\n",(0,n.jsx)(t.h3,{id:"--runtestsbypath",children:(0,n.jsx)(t.code,{children:"--runTestsByPath"})}),"\n",(0,n.jsx)(t.p,{children:"Run only the tests that were specified with their exact paths. This avoids converting them into a regular expression and matching it against every single file."}),"\n",(0,n.jsx)(t.p,{children:"For example, given the following file structure:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"__tests__\n\u2514\u2500\u2500 t1.test.js # test\n\u2514\u2500\u2500 t2.test.js # test\n"})}),"\n",(0,n.jsx)(t.p,{children:"When ran with a pattern, no test is found:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"jest --runTestsByPath __tests__/t\n"})}),"\n",(0,n.jsx)(t.p,{children:"Output:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"No tests found\n"})}),"\n",(0,n.jsx)(t.p,{children:"However, passing an exact path will execute only the given test:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"jest --runTestsByPath __tests__/t1.test.js\n"})}),"\n",(0,n.jsx)(t.p,{children:"Output:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"PASS __tests__/t1.test.js\n"})}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsx)(t.p,{children:"The default regex matching works fine on small runs, but becomes slow if provided with multiple patterns and/or against a lot of tests. This option replaces the regex matching logic and by that optimizes the time it takes Jest to filter specific test files."})}),"\n",(0,n.jsx)(t.h3,{id:"--seednum",children:(0,n.jsx)(t.code,{children:"--seed=<num>"})}),"\n",(0,n.jsxs)(t.p,{children:["Sets a seed value that can be retrieved in a test file via ",(0,n.jsx)(t.a,{href:"/ro/docs/jest-object#jestgetseed",children:(0,n.jsx)(t.code,{children:"jest.getSeed()"})}),". The seed value must be between ",(0,n.jsx)(t.code,{children:"-0x80000000"})," and ",(0,n.jsx)(t.code,{children:"0x7fffffff"})," inclusive (",(0,n.jsx)(t.code,{children:"-2147483648"})," (",(0,n.jsx)(t.code,{children:"-(2 ** 31)"}),") and ",(0,n.jsx)(t.code,{children:"2147483647"})," (",(0,n.jsx)(t.code,{children:"2 ** 31 - 1"}),") in decimal)."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"jest --seed=1324\n"})}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsxs)(t.p,{children:["If this option is not specified Jest will randomly generate the value. You can use the ",(0,n.jsx)(t.a,{href:"#--showseed",children:(0,n.jsx)(t.code,{children:"--showSeed"})})," flag to print the seed in the test report summary."]})}),"\n",(0,n.jsx)(t.h3,{id:"--selectprojects-project1--projectn",children:(0,n.jsx)(t.code,{children:"--selectProjects <project1> ... <projectN>"})}),"\n",(0,n.jsxs)(t.p,{children:["Run the tests of the specified projects. Jest uses the attribute ",(0,n.jsx)(t.code,{children:"displayName"})," in the configuration to identify each project. If you use this option, you should provide a ",(0,n.jsx)(t.code,{children:"displayName"})," to all your projects."]}),"\n",(0,n.jsx)(t.h3,{id:"--setupfilesafterenv-path1--pathn",children:(0,n.jsx)(t.code,{children:"--setupFilesAfterEnv <path1> ... <pathN>"})}),"\n",(0,n.jsx)(t.p,{children:"A list of paths to modules that run some code to configure or to set up the testing framework before each test. Beware that files imported by the setup scripts will not be mocked during testing."}),"\n",(0,n.jsx)(t.h3,{id:"--shard",children:(0,n.jsx)(t.code,{children:"--shard"})}),"\n",(0,n.jsxs)(t.p,{children:["The test suite shard to execute in a format of ",(0,n.jsx)(t.code,{children:"(?<shardIndex>\\d+)/(?<shardCount>\\d+)"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"shardIndex"})," describes which shard to select while ",(0,n.jsx)(t.code,{children:"shardCount"})," controls the number of shards the suite should be split into."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"shardIndex"})," and ",(0,n.jsx)(t.code,{children:"shardCount"})," have to be 1-based, positive numbers, and ",(0,n.jsx)(t.code,{children:"shardIndex"})," has to be lower than or equal to ",(0,n.jsx)(t.code,{children:"shardCount"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["When ",(0,n.jsx)(t.code,{children:"shard"})," is specified the configured ",(0,n.jsx)(t.a,{href:"/ro/docs/configuration#testsequencer-string",children:(0,n.jsx)(t.code,{children:"testSequencer"})})," has to implement a ",(0,n.jsx)(t.code,{children:"shard"})," method."]}),"\n",(0,n.jsx)(t.p,{children:"For example, to split the suite into three shards, each running one third of the tests:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"jest --shard=1/3\njest --shard=2/3\njest --shard=3/3\n"})}),"\n",(0,n.jsx)(t.h3,{id:"--showconfig",children:(0,n.jsx)(t.code,{children:"--showConfig"})}),"\n",(0,n.jsx)(t.p,{children:"\xcempiedic\u0103 afi\u0219area mesajelor prin consol\u0103."}),"\n",(0,n.jsx)(t.h3,{id:"--showseed",children:(0,n.jsx)(t.code,{children:"--showSeed"})}),"\n",(0,n.jsxs)(t.p,{children:["Prints the seed value in the test report summary. See ",(0,n.jsx)(t.a,{href:"#--seednum",children:(0,n.jsx)(t.code,{children:"--seed=<num>"})})," for the details."]}),"\n",(0,n.jsxs)(t.p,{children:["Can also be set in configuration. See ",(0,n.jsx)(t.a,{href:"/ro/docs/configuration#showseed-boolean",children:(0,n.jsx)(t.code,{children:"showSeed"})}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--silent",children:(0,n.jsx)(t.code,{children:"--silent"})}),"\n",(0,n.jsx)(t.p,{children:"\xcempiedic\u0103 afi\u0219area mesajelor prin consol\u0103."}),"\n",(0,n.jsx)(t.h3,{id:"--testenvironmentoptionsjson-string",children:(0,n.jsx)(t.code,{children:"--testEnvironmentOptions=<json string>"})}),"\n",(0,n.jsxs)(t.p,{children:["A JSON string with options that will be passed to the ",(0,n.jsx)(t.code,{children:"testEnvironment"}),". The relevant options depend on the environment."]}),"\n",(0,n.jsx)(t.h3,{id:"--testlocationinresults",children:(0,n.jsx)(t.code,{children:"--testLocationInResults"})}),"\n",(0,n.jsxs)(t.p,{children:["Adds a ",(0,n.jsx)(t.code,{children:"location"})," field to test results. Useful if you want to report the location of a test in a reporter."]}),"\n",(0,n.jsxs)(t.admonition,{type:"note",children:[(0,n.jsxs)(t.p,{children:["In the resulting object ",(0,n.jsx)(t.code,{children:"column"})," is 0-indexed while ",(0,n.jsx)(t.code,{children:"line"})," is not."]}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n  "column": 4,\n  "line": 5\n}\n'})})]}),"\n",(0,n.jsx)(t.h3,{id:"--testmatch-glob1--globn",children:(0,n.jsx)(t.code,{children:"--testMatch glob1 ... globN"})}),"\n",(0,n.jsxs)(t.p,{children:["The glob patterns Jest uses to detect test files. Please refer to the ",(0,n.jsxs)(t.a,{href:"/ro/docs/configuration#testmatch-arraystring",children:[(0,n.jsx)(t.code,{children:"testMatch"})," configuration"]})," for details."]}),"\n",(0,n.jsx)(t.h3,{id:"--testnamepatternregex",children:(0,n.jsx)(t.code,{children:"--testNamePattern=<regex>"})}),"\n",(0,n.jsxs)(t.p,{children:["Alias: ",(0,n.jsx)(t.code,{children:"-t"}),". Run only tests with a name that matches the regex. For example, suppose you want to run only tests related to authorization which will have names like ",(0,n.jsx)(t.code,{children:"'GET /api/posts with auth'"}),", then you can use ",(0,n.jsx)(t.code,{children:"jest -t=auth"}),"."]}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsx)(t.p,{children:"The regex is matched against the full name, which is a combination of the test name and all its surrounding describe blocks."})}),"\n",(0,n.jsx)(t.h3,{id:"--testpathignorepatternsregexarray",children:(0,n.jsx)(t.code,{children:"--testPathIgnorePatterns=<regex>|[array]"})}),"\n",(0,n.jsxs)(t.p,{children:["A single or array of regexp pattern strings that are tested against all tests paths before executing the test. Contrary to ",(0,n.jsx)(t.code,{children:"--testPathPattern"}),", it will only run those tests with a path that does not match with the provided regexp expressions."]}),"\n",(0,n.jsxs)(t.p,{children:["To pass as an array use escaped parentheses and space delimited regexps such as ",(0,n.jsx)(t.code,{children:"\\(/node_modules/ /tests/e2e/\\)"}),". Alternatively, you can omit parentheses by combining regexps into a single regexp like ",(0,n.jsx)(t.code,{children:"/node_modules/|/tests/e2e/"}),". These two examples are equivalent."]}),"\n",(0,n.jsx)(t.h3,{id:"--testpathpatternregex",children:(0,n.jsx)(t.code,{children:"--testPathPattern=<regex>"})}),"\n",(0,n.jsxs)(t.p,{children:["Execut\u0103 doar testele al din fi\u0219ierele al caror cale se potrive\u015fte cu expresia regulat\u0103 specificat\u0103. On Windows, you will need to use ",(0,n.jsx)(t.code,{children:"/"})," as a path separator or escape ",(0,n.jsx)(t.code,{children:"\\"})," as ",(0,n.jsx)(t.code,{children:"\\\\"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--testrunnerpath",children:(0,n.jsx)(t.code,{children:"--testRunner=<path>"})}),"\n",(0,n.jsx)(t.p,{children:"V\u0103 permite s\u0103 specifica\u0163i un framework de testare personalizat."}),"\n",(0,n.jsx)(t.h3,{id:"--testsequencerpath",children:(0,n.jsx)(t.code,{children:"--testSequencer=<path>"})}),"\n",(0,n.jsxs)(t.p,{children:["Lets you specify a custom test sequencer. Please refer to the ",(0,n.jsxs)(t.a,{href:"/ro/docs/configuration#testsequencer-string",children:[(0,n.jsx)(t.code,{children:"testSequencer"})," configuration"]})," for details."]}),"\n",(0,n.jsx)(t.h3,{id:"--testtimeoutnumber",children:(0,n.jsx)(t.code,{children:"--testTimeout=<number>"})}),"\n",(0,n.jsx)(t.p,{children:"Default timeout of a test in milliseconds. Default value: 5000."}),"\n",(0,n.jsx)(t.h3,{id:"--updatesnapshot",children:(0,n.jsx)(t.code,{children:"--updateSnapshot"})}),"\n",(0,n.jsxs)(t.p,{children:["Alias: ",(0,n.jsx)(t.code,{children:"-u"}),". Folosi\u0163i aceast\u0103 op\u021biune pentru re-\xeenregistrarea fiec\u0103rei imagini instantaneu care e\u0219ueaz\u0103 \xeen timpul rul\u0103rii. Poate fi utilizat \xeempreun\u0103 cu un tipar de suite de teste sau cu ",(0,n.jsx)(t.code,{children:"--testNamePattern"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--usestderr",children:(0,n.jsx)(t.code,{children:"--useStderr"})}),"\n",(0,n.jsx)(t.p,{children:"Afi\u015feaz\u0103 rezultatele testelor individuale cu ierarhia suitei de teste."}),"\n",(0,n.jsx)(t.h3,{id:"--verbose",children:(0,n.jsx)(t.code,{children:"--verbose"})}),"\n",(0,n.jsx)(t.p,{children:"Afi\u015feaz\u0103 rezultatele testelor individuale cu ierarhia suitei de teste."}),"\n",(0,n.jsx)(t.h3,{id:"--version",children:(0,n.jsx)(t.code,{children:"--version"})}),"\n",(0,n.jsxs)(t.p,{children:["Alias: ",(0,n.jsx)(t.code,{children:"-v"}),". Print the version and exit."]}),"\n",(0,n.jsx)(t.h3,{id:"--watch",children:(0,n.jsx)(t.code,{children:"--watch"})}),"\n",(0,n.jsxs)(t.p,{children:["Watch files for changes and rerun tests related to changed files. If you want to re-run all tests when a file has changed, use the ",(0,n.jsx)(t.code,{children:"--watchAll"})," option instead."]}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsxs)(t.p,{children:["Use ",(0,n.jsx)(t.code,{children:"--no-watch"})," (or ",(0,n.jsx)(t.code,{children:"--watch=false"}),") to explicitly disable the watch mode if it was enabled using ",(0,n.jsx)(t.code,{children:"--watch"}),". In most CI environments, this is automatically handled for you."]})}),"\n",(0,n.jsx)(t.h3,{id:"--watchall",children:(0,n.jsx)(t.code,{children:"--watchAll"})}),"\n",(0,n.jsxs)(t.p,{children:["Watch files for changes and rerun all tests when something changes. If you want to re-run only the tests that depend on the changed files, use the ",(0,n.jsx)(t.code,{children:"--watch"})," option."]}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsxs)(t.p,{children:["Use ",(0,n.jsx)(t.code,{children:"--no-watchAll"})," (or ",(0,n.jsx)(t.code,{children:"--watchAll=false"}),") to explicitly disable the watch mode if it was enabled using ",(0,n.jsx)(t.code,{children:"--watchAll"}),". In most CI environments, this is automatically handled for you."]})}),"\n",(0,n.jsx)(t.h3,{id:"--watchman",children:(0,n.jsx)(t.code,{children:"--watchman"})}),"\n",(0,n.jsxs)(t.p,{children:["Whether to use ",(0,n.jsx)(t.a,{href:"https://facebook.github.io/watchman/",children:(0,n.jsx)(t.code,{children:"watchman"})})," for file crawling. Defaults to ",(0,n.jsx)(t.code,{children:"true"}),". Disable using ",(0,n.jsx)(t.code,{children:"--no-watchman"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"--workerthreads",children:(0,n.jsx)(t.code,{children:"--workerThreads"})}),"\n",(0,n.jsxs)(t.p,{children:["Whether to use ",(0,n.jsx)(t.a,{href:"https://nodejs.org/dist/latest/docs/api/worker_threads.html",children:"worker threads"})," for parallelization. ",(0,n.jsx)(t.a,{href:"https://nodejs.org/dist/latest/docs/api/child_process.html",children:"Child processes"})," are used by default."]}),"\n",(0,n.jsx)(t.admonition,{type:"caution",children:(0,n.jsxs)(t.p,{children:["This is ",(0,n.jsx)(t.strong,{children:"experimental feature"}),". See the ",(0,n.jsxs)(t.a,{href:"/ro/docs/configuration#workerthreads",children:[(0,n.jsx)(t.code,{children:"workerThreads"})," configuration option"]})," for more details."]})})]})}const j=function(e={}){const{wrapper:t}=Object.assign({},(0,i.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(p,e)})):p(e)}}}]);