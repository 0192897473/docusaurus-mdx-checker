"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[508],{4836:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=t(4246),s=t(1670);const o={id:"tutorial-react-native",title:"Testear Aplicaciones React Native"},r=void 0,i={unversionedId:"tutorial-react-native",id:"version-29.6/tutorial-react-native",title:"Testear Aplicaciones React Native",description:"At Facebook, we use Jest to test React Native applications.",source:"@site/i18n/es-ES/docusaurus-plugin-content-docs/version-29.6/TutorialReactNative.md",sourceDirName:".",slug:"/tutorial-react-native",permalink:"/es-ES/docs/tutorial-react-native",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/jest-v2/es-ES",tags:[],version:"29.6",frontMatter:{id:"tutorial-react-native",title:"Testear Aplicaciones React Native"},sidebar:"docs",previous:{title:"Testear Aplicaciones React",permalink:"/es-ES/docs/tutorial-react"},next:{title:"Testing Web Frameworks",permalink:"/es-ES/docs/testing-frameworks"}},c={},l=[{value:"Setup",id:"setup",level:2},{value:"Test de Instant\xe1nea",id:"test-de-instant\xe1nea",level:2},{value:"Configuraci\xf3n preestablecida",id:"configuraci\xf3n-preestablecida",level:2},{value:"Entorno",id:"entorno",level:3},{value:"Personalizaci\xf3n de transformIgnorePatterns",id:"personalizaci\xf3n-de-transformignorepatterns",level:3},{value:"setupFiles",id:"setupfiles",level:3},{value:"moduleNameMapper",id:"modulenamemapper",level:3},{value:"Consejos",id:"consejos",level:2},{value:"Simulacros de m\xf3dulos nativos usando jest.mock",id:"simulacros-de-m\xf3dulos-nativos-usando-jestmock",level:3}];function d(e){const n=Object.assign({p:"p",a:"a",h2:"h2",code:"code",pre:"pre",admonition:"admonition",h3:"h3",strong:"strong"},(0,s.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["At Facebook, we use Jest to test ",(0,a.jsx)(n.a,{href:"https://reactnative.dev/",children:"React Native"})," applications."]}),"\n",(0,a.jsxs)(n.p,{children:["Get a deeper insight into testing a working React Native app example by reading the following series: ",(0,a.jsx)(n.a,{href:"https://callstack.com/blog/testing-react-native-with-the-new-jest-part-1-snapshots-come-into-play/",children:"Part 1: Jest \u2013 Snapshot come into play"})," and ",(0,a.jsx)(n.a,{href:"https://callstack.com/blog/testing-react-native-with-the-new-jest-part-2-redux-snapshots-for-your-actions-and-reducers/",children:"Part 2: Jest \u2013 Redux Snapshots for your Actions and Reducers"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,a.jsxs)(n.p,{children:["A partir de la versi\xf3n 0.38 de react-native, Jest viene con una configuraci\xf3n incluida por defecto cuando se ejecuta: ",(0,a.jsx)(n.code,{children:"react-native init"}),". La siguiente configuraci\xf3n deber\xeda ser autom\xe1ticamente a\xf1adida a tu archivo package.json:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "test": "jest"\n  },\n  "jest": {\n    "preset": "react-native"\n  }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Run ",(0,a.jsx)(n.code,{children:"yarn test"})," to run tests with Jest."]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["If you are upgrading your react-native application and previously used the ",(0,a.jsx)(n.code,{children:"jest-react-native"})," preset, remove the dependency from your ",(0,a.jsx)(n.code,{children:"package.json"})," file and change the preset to ",(0,a.jsx)(n.code,{children:"react-native"})," instead."]})}),"\n",(0,a.jsx)(n.h2,{id:"test-de-instant\xe1nea",children:"Test de Instant\xe1nea"}),"\n",(0,a.jsxs)(n.p,{children:["Creemos un ",(0,a.jsx)(n.a,{href:"/es-ES/docs/snapshot-testing",children:"test de instant\xe1nea"})," para un componente peque\xf1o con unas cuantas vistas y componentes de texto con algunos estilos:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",metastring:'title="Intro.js"',children:"import React, {Component} from 'react';\nimport {StyleSheet, Text, View} from 'react-native';\n\nclass Intro extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.welcome}>Welcome to React Native!</Text>\n        <Text style={styles.instructions}>\n          This is a React Native snapshot test.\n        </Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    flex: 1,\n    justifyContent: 'center',\n  },\n  instructions: {\n    color: '#333333',\n    marginBottom: 5,\n    textAlign: 'center',\n  },\n  welcome: {\n    fontSize: 20,\n    margin: 10,\n    textAlign: 'center',\n  },\n});\n\nexport default Intro;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Ahora vamos usar las caracter\xedsticas render y snapshot de React y Jest para interactuar con los componentes y capturar lo que renderea, creando un archivo snapshot:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",metastring:'title="__tests__/Intro-test.js"',children:"import React from 'react';\nimport renderer from 'react-test-renderer';\nimport Intro from '../Intro';\n\ntest('renders correctly', () => {\n  const tree = renderer.create(<Intro />).toJSON();\n  expect(tree).toMatchSnapshot();\n});\n"})}),"\n",(0,a.jsxs)(n.p,{children:["When you run ",(0,a.jsx)(n.code,{children:"yarn test"})," or ",(0,a.jsx)(n.code,{children:"jest"}),", this will produce an output file like this:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'title="__tests__/__snapshots__/Intro-test.js.snap"',children:'exports[`Intro renders correctly 1`] = `\n<View\n  style={\n    Object {\n      "alignItems": "center",\n      "backgroundColor": "#F5FCFF",\n      "flex": 1,\n      "justifyContent": "center",\n    }\n  }>\n  <Text\n    style={\n      Object {\n        "fontSize": 20,\n        "margin": 10,\n        "textAlign": "center",\n      }\n    }>\n    Welcome to React Native!\n  </Text>\n  <Text\n    style={\n      Object {\n        "color": "#333333",\n        "marginBottom": 5,\n        "textAlign": "center",\n      }\n    }>\n    This is a React Native snapshot test.\n  </Text>\n</View>\n`;\n'})}),"\n",(0,a.jsxs)(n.p,{children:["La pr\xf3xima vez que ejecutes la prueba, lo que se renderee ser\xe1 comparado con el snapshot previamente creado. Se deber\xeda aplicar el snapshot junto con los cambios de c\xf3digo. Cuando una prueba con snapshot falla, necesitar\xe1 inspeccionar si se da por un cambio intencional o no intencional. Si el cambio es intencional, puede invocar Jest con ",(0,a.jsx)(n.code,{children:"jest -u"})," para sobre escribir en snapshot existente."]}),"\n",(0,a.jsxs)(n.p,{children:["The code for this example is available at ",(0,a.jsx)(n.a,{href:"https://github.com/jestjs/jest/tree/main/examples/react-native",children:"examples/react-native"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"configuraci\xf3n-preestablecida",children:"Configuraci\xf3n preestablecida"}),"\n",(0,a.jsx)(n.p,{children:'El "preset" configura el entorno con una idea muy clara y basado en lo que ha resultado \xfatil en Facebook. Todas las opciones de configuraci\xf3n puede ser sobrescritas as\xed como personalizarse cuando no se usa un "preset".'}),"\n",(0,a.jsx)(n.h3,{id:"entorno",children:"Entorno"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"react-native"}),' viene con un "preset" para Jest, as\xed que el campo ',(0,a.jsx)(n.code,{children:"jest.preset"})," de tu ",(0,a.jsx)(n.code,{children:"package.json"})," deber\xeda apuntar a ",(0,a.jsx)(n.code,{children:"react-native"}),'. El "preset" es un entorno de node que refleja el entorno de una applicaci\xf3n de React Native. Ya que no carga el DOM o APIs del navegador, mejora de gran manera el tiempo de inicio de Jest.']}),"\n",(0,a.jsx)(n.h3,{id:"personalizaci\xf3n-de-transformignorepatterns",children:"Personalizaci\xf3n de transformIgnorePatterns"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.a,{href:"configuration.html#transformignorepatterns-arraystring",children:(0,a.jsx)(n.code,{children:"transformIgnorePatterns"})})," option can be used to specify which files shall be transformed by Babel. Many ",(0,a.jsx)(n.code,{children:"react-native"})," npm modules unfortunately don't pre-compile their source code before publishing."]}),"\n",(0,a.jsxs)(n.p,{children:["By default the ",(0,a.jsx)(n.code,{children:"jest-react-native"})," preset only processes the project's own source files and ",(0,a.jsx)(n.code,{children:"react-native"}),". If you have npm dependencies that have to be transformed you can customize this configuration option by including modules other than ",(0,a.jsx)(n.code,{children:"react-native"})," by grouping them and separating them with the ",(0,a.jsx)(n.code,{children:"|"})," operator:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "transformIgnorePatterns": [\n    "node_modules/(?!(react-native|my-project|react-native-button)/)"\n  ]\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["You can test which paths would match (and thus be excluded from transformation) with a tool ",(0,a.jsx)(n.a,{href:"https://regex101.com/r/JsLIDM/1",children:"like this"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"transformIgnorePatterns"})," will exclude a file from transformation if the path matches against ",(0,a.jsx)(n.strong,{children:"any"})," pattern provided. Splitting into multiple patterns could therefore have unintended results if you are not careful. In the example below, the exclusion (also known as a negative lookahead assertion) for ",(0,a.jsx)(n.code,{children:"foo"})," and ",(0,a.jsx)(n.code,{children:"bar"})," cancel each other out:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "transformIgnorePatterns": ["node_modules/(?!foo/)", "node_modules/(?!bar/)"] // not what you want\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"setupfiles",children:"setupFiles"}),"\n",(0,a.jsxs)(n.p,{children:["Si quieres proporcionar configuraci\xf3n adicional para cada archivo de test, la ",(0,a.jsxs)(n.a,{href:"configuration.html#setupfiles-array",children:["opci\xf3n ",(0,a.jsx)(n.code,{children:"setupFiles"})," de la configuraci\xf3n"]})," se puede usar para especificar scripts de instalaci\xf3n."]}),"\n",(0,a.jsx)(n.h3,{id:"modulenamemapper",children:"moduleNameMapper"}),"\n",(0,a.jsxs)(n.p,{children:["La opci\xf3n ",(0,a.jsx)(n.a,{href:"configuration.html#modulenamemapper-objectstring-string--arraystring",children:(0,a.jsx)(n.code,{children:"moduleNameMapper"})}),' se puede usar para mapear una ruta de acceso de un m\xf3dulo a otro diferente. Por defecto, este "preset" mapea todas las im\xe1genes a un "stub" m\xf3dulo de la imagen, pero si un m\xf3dulo no puede ser encontrado, est\xe1 opci\xf3n de la configuraci\xf3n puede ayudar:']}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "moduleNameMapper": {\n    "my-module.js": "<rootDir>/path/to/my-module.js"\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"consejos",children:"Consejos"}),"\n",(0,a.jsx)(n.h3,{id:"simulacros-de-m\xf3dulos-nativos-usando-jestmock",children:"Simulacros de m\xf3dulos nativos usando jest.mock"}),"\n",(0,a.jsxs)(n.p,{children:['El preset de "Jest" que viene con ',(0,a.jsx)(n.code,{children:"react-native"}),' incluye unos cuantos "mocks" por defecto que se aplican en un repositorio de react-native. However, some react-native components or third party components rely on native code to be rendered. En tales casos, el sistema de "mocking" manual de Jest, puede ayudar a evitar la implementaci\xf3n subyacente.']}),"\n",(0,a.jsxs)(n.p,{children:["Por ejemplo, si tu c\xf3digo depende de una component de video nativo de terceros llamado ",(0,a.jsx)(n.code,{children:"react-native-video"}),', podr\xedas querer simularlo con un "mock" manual tal que as\xed:']}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"jest.mock('react-native-video', () => 'Video');\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Esto renderizar\xe1 el componente como ",(0,a.jsx)(n.code,{children:"< Video {...props} / >"})," con todas sus propiedades en el resultado saliente de la instant\xe1nea. See also ",(0,a.jsx)(n.a,{href:"tutorial-react.html#snapshot-testing-with-mocks-enzyme-and-react-16",children:"caveats around Enzyme and React 16"}),"."]}),"\n",(0,a.jsx)(n.p,{children:'A veces es necesario proporcionar un "mock" manual m\xe1s complejo. Por ejemplo, si si quieres promover los "prop types" o "static fields" de un componente native a un "mock", puedes devolver un componente diferente de React desde un "mock" a trav\xe9s de este script auxiliar de jest-react-native:'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"jest.mock('path/to/MyNativeComponent', () => {\n  const mockComponent = require('react-native/jest/mockComponent');\n  return mockComponent('path/to/MyNativeComponent');\n});\n"})}),"\n",(0,a.jsx)(n.p,{children:'O si prefieres crear tu propio "mock" manual, puedes hacer algo as\xed:'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"jest.mock('Text', () => {\n  const RealComponent = jest.requireActual('Text');\n  const React = require('react');\n  class Text extends React.Component {\n    render() {\n      return React.createElement('Text', this.props, this.props.children);\n    }\n  }\n  Text.propTypes = RealComponent.propTypes;\n  return Text;\n});\n"})}),"\n",(0,a.jsx)(n.p,{children:'En otros casos, puede que quieras hacer un "mock" a un m\xf3dulo nativo que no es un componente de React. Se puede aplicar la misma t\xe9cnica. Recommendamos que se inspeccione el c\xf3digo fuente del m\xf3dulo nativo y logear el m\xf3dulo cuando se ejecute una app de react native en un dispositivo real, para entonces modelar un "mock" manual basado en el m\xf3dulo real.'}),"\n",(0,a.jsxs)(n.p,{children:['Si acabas haciendo un "mock" de los mismos m\xf3dulos una y otra vez, se recomienda definir estos "mocks" en un archivo separado y a\xf1adirlo a la lista de ',(0,a.jsx)(n.code,{children:"setupFiles"}),"."]})]})}const p=function(e={}){const{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(d,e)})):d(e)}},1670:(e,n,t)=>{t.d(n,{Zo:()=>i,ah:()=>o});var a=t(7378);const s=a.createContext({});function o(e){const n=a.useContext(s);return a.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const r={};function i({components:e,children:n,disableParentContext:t}){let i;return i=t?"function"==typeof e?e({}):e||r:o(e),a.createElement(s.Provider,{value:i},n)}}}]);