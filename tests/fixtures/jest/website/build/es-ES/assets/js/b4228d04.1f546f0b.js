"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[2175],{579:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>h});var a=s(4246),n=s(1670);const o={title:"Jest 27: New Defaults for Jest, 2021 edition \u23e9",author:"Tim Seckinger",authorURL:"https://github.com/jeysal",authorImageURL:"https://avatars.githubusercontent.com/u/16069751"},i=void 0,r={permalink:"/es-ES/blog/2021/05/25/jest-27",editUrl:"https://github.com/jestjs/jest/tree/main/website/blog/2021-05-25-jest-27.md",source:"@site/i18n/es-ES/docusaurus-plugin-content-blog/2021-05-25-jest-27.md",title:"Jest 27: New Defaults for Jest, 2021 edition \u23e9",description:"In the Jest 26 blog post about a year ago, we announced that after two major releases with few breaking changes, Jest 27 will flip some switches to set better defaults for projects that are new or can migrate smoothly. This gives us the opportunity to remove some packages from the default distribution of Jest 28 and publish them as separately installable and pluggable modules instead. Everyone on the new defaults can benefit from a smaller install size, while people needing these packages can still install them separately.",date:"2021-05-25T00:00:00.000Z",formattedDate:"25 de mayo de 2021",tags:[],readingTime:6.54,hasTruncateMarker:!0,authors:[{name:"Tim Seckinger",url:"https://github.com/jeysal",imageURL:"https://avatars.githubusercontent.com/u/16069751"}],frontMatter:{title:"Jest 27: New Defaults for Jest, 2021 edition \u23e9",author:"Tim Seckinger",authorURL:"https://github.com/jeysal",authorImageURL:"https://avatars.githubusercontent.com/u/16069751"},unlisted:!1,prevItem:{title:"Jest 28: Shedding weight and improving compatibility \ud83e\udef6",permalink:"/es-ES/blog/2022/04/25/jest-28"},nextItem:{title:"Jest Website Upgrade",permalink:"/es-ES/blog/2021/03/09/jest-website-upgrade"}},l={authorsImageUrls:[void 0]},h=[];function u(e){const t=Object.assign({p:"p",a:"a"},(0,n.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["In the ",(0,a.jsx)(t.a,{href:"/blog/2020/05/05/jest-26",children:"Jest 26 blog post"})," about a year ago, we announced that after two major releases with few breaking changes, Jest 27 will flip some switches to set better defaults for projects that are new or can migrate smoothly. This gives us the opportunity to remove some packages from the default distribution of Jest 28 and publish them as separately installable and pluggable modules instead. Everyone on the new defaults can benefit from a smaller install size, while people needing these packages can still install them separately."]}),"\n",(0,a.jsxs)(t.p,{children:["With the first major change of defaults since the ",(0,a.jsx)(t.a,{href:"/blog/2016/09/01/jest-15",children:"New Defaults for Jest"})," that came with the seminal version 15, Jest 27 is now here, to keep Jest fast, lean, and relevant in the future. We will explain those changes of defaults and other notable breaking changes in this post, but first, let's get into some exciting new features!"]})]})}const c=function(e={}){const{wrapper:t}=Object.assign({},(0,n.ah)(),e.components);return t?(0,a.jsx)(t,Object.assign({},e,{children:(0,a.jsx)(u,e)})):u(e)}},1670:(e,t,s)=>{s.d(t,{Zo:()=>r,ah:()=>o});var a=s(7378);const n=a.createContext({});function o(e){const t=a.useContext(n);return a.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const i={};function r({components:e,children:t,disableParentContext:s}){let r;return r=s?"function"==typeof e?e({}):e||i:o(e),a.createElement(n.Provider,{value:r},t)}}}]);