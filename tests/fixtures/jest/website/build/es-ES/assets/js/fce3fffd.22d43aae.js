"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[5956],{2599:(e,n,s)=>{s.d(n,{Z:()=>o});s(7378);var t=s(7140);const r={tabItem:"tabItem_wHwb"};var a=s(4246);function o(e){let{children:n,hidden:s,className:o}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,t.Z)(r.tabItem,o),hidden:s,children:n})}},8447:(e,n,s)=>{s.d(n,{Z:()=>w});var t=s(7378),r=s(7140),a=s(9169),o=s(3620),i=s(9749),l=s(8981),c=s(56),d=s(8796);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:s}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:s,attributes:t,default:r}}=e;return{value:n,label:s,attributes:t,default:r}}))}(s);return function(e){const n=(0,c.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function p(e){let{value:n,tabValues:s}=e;return s.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:s}=e;const r=(0,o.k6)(),a=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,l._X)(a),(0,t.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(r.location.search);n.set(a,e),r.replace({...r.location,search:n.toString()})}),[a,r])]}function g(e){const{defaultValue:n,queryString:s=!1,groupId:r}=e,a=h(e),[o,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=s.find((e=>e.default))??s[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:a}))),[c,u]=m({queryString:s,groupId:r}),[g,b]=function(e){let{groupId:n}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,a]=(0,d.Nk)(s);return[r,(0,t.useCallback)((e=>{s&&a.set(e)}),[s,a])]}({groupId:r}),j=(()=>{const e=c??g;return p({value:e,tabValues:a})?e:null})();(0,i.Z)((()=>{j&&l(j)}),[j]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),b(e)}),[u,b,a]),tabValues:a}}var b=s(362);const j={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};var x=s(4246);function f(e){let{className:n,block:s,selectedValue:t,selectValue:o,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.o5)(),d=e=>{const n=e.currentTarget,s=l.indexOf(n),r=i[s].value;r!==t&&(c(n),o(r))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=l.indexOf(e.currentTarget)+1;n=l[s]??l[0];break}case"ArrowLeft":{const s=l.indexOf(e.currentTarget)-1;n=l[s]??l[l.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":s},n),children:i.map((e=>{let{value:n,label:s,attributes:a}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>l.push(e),onKeyDown:u,onClick:d,...a,className:(0,r.Z)("tabs__item",j.tabItem,a?.className,{"tabs__item--active":t===n}),children:s??n},n)}))})}function v(e){let{lazy:n,children:s,selectedValue:r}=e;const a=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===r));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=g(e);return(0,x.jsxs)("div",{className:(0,r.Z)("tabs-container",j.tabList),children:[(0,x.jsx)(f,{...e,...n}),(0,x.jsx)(v,{...e,...n})]})}function w(e){const n=(0,b.Z)();return(0,x.jsx)(y,{...e,children:u(e.children)},String(n))}},381:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var t=s(4246),r=s(1670),a=s(8447),o=s(2599);const i={id:"troubleshooting",title:"Soluci\xf3n de problemas"},l=void 0,c={unversionedId:"troubleshooting",id:"version-29.5/troubleshooting",title:"Soluci\xf3n de problemas",description:"UH oh, \xbfalgo sali\xf3 mal? Utilice esta gu\xeda para resolver problemas con Jest.",source:"@site/i18n/es-ES/docusaurus-plugin-content-docs/version-29.5/Troubleshooting.md",sourceDirName:".",slug:"/troubleshooting",permalink:"/es-ES/docs/29.5/troubleshooting",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/jest-v2/es-ES",tags:[],version:"29.5",frontMatter:{id:"troubleshooting",title:"Soluci\xf3n de problemas"},sidebar:"docs",previous:{title:"Migrando a Jest",permalink:"/es-ES/docs/29.5/migration-guide"},next:{title:"Arquitectura",permalink:"/es-ES/docs/29.5/architecture"}},d={},u=[{value:"Los tests est\xe1n fallando y no sabes por qu\xe9",id:"los-tests-est\xe1n-fallando-y-no-sabes-por-qu\xe9",level:2},{value:"Debuggeando en C\xf3digo VS",id:"debuggeando-en-c\xf3digo-vs",level:2},{value:"Debuggeando con WebStorm",id:"debuggeando-con-webstorm",level:2},{value:"Problemas de cach\xe9",id:"problemas-de-cach\xe9",level:2},{value:"Promesas no resueltas",id:"promesas-no-resueltas",level:2},{value:"Problemas con Watchman",id:"problemas-con-watchman",level:2},{value:"Los tests son extremadamente lentos en Docker y/o en el servidor de integraci\xf3n continua (CI).",id:"los-tests-son-extremadamente-lentos-en-docker-yo-en-el-servidor-de-integraci\xf3n-continua-ci",level:2},{value:"<code>coveragePathIgnorePatterns</code> seems to not have any effect.",id:"coveragepathignorepatterns-seems-to-not-have-any-effect",level:2},{value:"Defining Tests",id:"defining-tests",level:2},{value:"\xbfA\xfan sin resolver?",id:"a\xfan-sin-resolver",level:2}];function h(e){const n=Object.assign({p:"p",h2:"h2",a:"a",code:"code",pre:"pre",admonition:"admonition",em:"em"},(0,r.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"UH oh, \xbfalgo sali\xf3 mal? Utilice esta gu\xeda para resolver problemas con Jest."}),"\n",(0,t.jsx)(n.h2,{id:"los-tests-est\xe1n-fallando-y-no-sabes-por-qu\xe9",children:"Los tests est\xe1n fallando y no sabes por qu\xe9"}),"\n",(0,t.jsxs)(n.p,{children:["Try using the ",(0,t.jsx)(n.a,{href:"https://nodejs.org/api/debugger.html",children:"debugging support"})," built into Node. Coloque una instrucci\xf3n ",(0,t.jsx)(n.code,{children:"debugger;"})," en cualquiera de sus tests, y luego, en el directorio de su proyecto, ejecute:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"node --inspect-brk node_modules/.bin/jest --runInBand [any other arguments here]\nor on Windows\nnode --inspect-brk ./node_modules/jest/bin/jest.js --runInBand [any other arguments here]\n"})}),"\n",(0,t.jsx)(n.p,{children:"This will run Jest in a Node process that an external debugger can connect to. Note that the process will pause until the debugger has connected to it."}),"\n",(0,t.jsxs)(n.p,{children:["To debug in Google Chrome (or any Chromium-based browser), open your browser and go to ",(0,t.jsx)(n.code,{children:"chrome://inspect"}),' and click on "Open Dedicated DevTools for Node", which will give you a list of available node instances you can connect to. Click on the address displayed in the terminal (usually something like ',(0,t.jsx)(n.code,{children:"localhost:9229"}),") after running the above command, and you will be able to debug Jest using Chrome's DevTools."]}),"\n",(0,t.jsxs)(n.p,{children:['The Chrome Developer Tools will be displayed, and a breakpoint will be set at the first line of the Jest CLI script (this is done to give you time to open the developer tools and to prevent Jest from executing before you have time to do so). Haga clic en el bot\xf3n que se muestra como un bot\xf3n de "reproducci\xf3n" en el lado superior derecho de la pantalla para continuar la ejecuci\xf3n. Cuando Jest ejecuta el test que contiene la instrucci\xf3n ',(0,t.jsx)(n.code,{children:"debugger"}),", la ejecuci\xf3n se detendr\xe1 y podr\xe1 examinar el \xe1mbito actual y la pila de llamadas."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"--runInBand"})," cli option makes sure Jest runs the test in the same process rather than spawning processes for individual tests. Normalmente Jest paraleliza las ejecuciones de los tests a trav\xe9s de procesos, pero es dif\xedcil depurar muchos procesos al mismo tiempo."]})}),"\n",(0,t.jsx)(n.h2,{id:"debuggeando-en-c\xf3digo-vs",children:"Debuggeando en C\xf3digo VS"}),"\n",(0,t.jsxs)(n.p,{children:["There are multiple ways to debug Jest tests with ",(0,t.jsx)(n.a,{href:"https://code.visualstudio.com",children:"Visual Studio Code's"})," built-in ",(0,t.jsx)(n.a,{href:"https://code.visualstudio.com/docs/nodejs/nodejs-debugging",children:"debugger"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Para aderir el debugger que trae por defecto, ejecute sus pruebas como se establece aqu\xed:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"node --inspect-brk node_modules/.bin/jest --runInBand [any other arguments here]\nor on Windows\nnode --inspect-brk ./node_modules/jest/bin/jest.js --runInBand [any other arguments here]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Luego adiera el debugger de VS Code utilizando la siguente configuraci\xf3n de ",(0,t.jsx)(n.code,{children:"launch.json"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "version": "0.2.0",\n  "configurations": [\n    {\n      "type": "node",\n      "request": "attach",\n      "name": "Attach",\n      "port": 9229\n    }\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Para iniciar y a\xf1adir autom\xe1ticamente a un proceso que ejecuta sus pruebas, utilizar la siguiente instalaci\xf3n:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "version": "0.2.0",\n  "configurations": [\n    {\n      "name": "Debug Jest Tests",\n      "type": "node",\n      "request": "launch",\n      "runtimeArgs": [\n        "--inspect-brk",\n        "${workspaceRoot}/node_modules/.bin/jest",\n        "--runInBand"\n      ],\n      "console": "integratedTerminal",\n      "internalConsoleOptions": "neverOpen"\n    }\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"o la siguiente para Windows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "version": "0.2.0",\n  "configurations": [\n    {\n      "name": "Debug Jest Tests",\n      "type": "node",\n      "request": "launch",\n      "runtimeArgs": [\n        "--inspect-brk",\n        "${workspaceRoot}/node_modules/jest/bin/jest.js",\n        "--runInBand"\n      ],\n      "console": "integratedTerminal",\n      "internalConsoleOptions": "neverOpen"\n    }\n  ]\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Si est\xe1 utilizando el ",(0,t.jsx)(n.a,{href:"https://github.com/facebookincubator/create-react-app",children:(0,t.jsx)(n.code,{children:"create-react-app"})})," de Facebook, puede debugear sus pruebas de Jest con la siguente configuraci\xf3n:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "version": "0.2.0",\n  "configurations": [\n    {\n      "name": "Debug CRA Tests",\n      "type": "node",\n      "request": "launch",\n      "runtimeExecutable": "${workspaceRoot}/node_modules/.bin/react-scripts",\n      "args": [\n        "test",\n        "--runInBand",\n        "--no-cache",\n        "--env=jsdom",\n        "--watchAll=false"\n      ],\n      "cwd": "${workspaceRoot}",\n      "console": "integratedTerminal",\n      "internalConsoleOptions": "neverOpen"\n    }\n  ]\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Puede encontrar m\xe1s informaci\xf3n sobre depuraci\xf3n en Node ",(0,t.jsx)(n.a,{href:"https://nodejs.org/api/debugger.html",children:"aqu\xed"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"debuggeando-con-webstorm",children:"Debuggeando con WebStorm"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://www.jetbrains.com/webstorm/",children:"WebStorm"})," has built-in support for Jest. Read ",(0,t.jsx)(n.a,{href:"https://blog.jetbrains.com/webstorm/2018/10/testing-with-jest-in-webstorm/",children:"Testing With Jest in WebStorm"})," to learn more."]}),"\n",(0,t.jsx)(n.h2,{id:"problemas-de-cach\xe9",children:"Problemas de cach\xe9"}),"\n",(0,t.jsx)(n.p,{children:"The transform script was changed or Babel was updated and the changes aren't being recognized by Jest?"}),"\n",(0,t.jsxs)(n.p,{children:["Reintente con ",(0,t.jsx)(n.a,{href:"/es-ES/docs/29.5/cli#--cache",children:(0,t.jsx)(n.code,{children:"--no-cache"})}),". Jest mantiene cache de archivos de m\xf3dulo transformado para acelerar la ejecuci\xf3n de la prueba. If you are using your own custom transformer, consider adding a ",(0,t.jsx)(n.code,{children:"getCacheKey"})," function to it: ",(0,t.jsx)(n.a,{href:"https://github.com/facebook/relay/blob/58cf36c73769690f0bbf90562707eadb062b029d/scripts/jest/preprocessor.js#L56-L61",children:"getCacheKey in Relay"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"promesas-no-resueltas",children:"Promesas no resueltas"}),"\n",(0,t.jsx)(n.p,{children:"Si una promesa no es resuelta totalmente, podr\xeda producirse el siguiente error:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"- Error: Timeout - Async callback was not invoked within timeout specified by jasmine. DEFAULT_TIMEOUT_INTERVAL.`\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Com\xfanmente eso est\xe1 siendo causado por conflictos en las implementaciones promesa. Consider replacing the global promise implementation with your own, for example ",(0,t.jsx)(n.code,{children:"globalThis.Promise = jest.requireActual('promise');"})," and/or consolidate the used Promise libraries to a single one."]}),"\n",(0,t.jsxs)(n.p,{children:["If your test is long running, you may want to consider to increase the timeout by calling ",(0,t.jsx)(n.code,{children:"jest.setTimeout"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"jest.setTimeout(10000); // 10 segundos de timeout\n"})}),"\n",(0,t.jsx)(n.h2,{id:"problemas-con-watchman",children:"Problemas con Watchman"}),"\n",(0,t.jsxs)(n.p,{children:["Try running Jest with ",(0,t.jsx)(n.a,{href:"/es-ES/docs/29.5/cli#--watchman",children:(0,t.jsx)(n.code,{children:"--no-watchman"})})," or set the ",(0,t.jsx)(n.code,{children:"watchman"})," configuration option to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Also see ",(0,t.jsx)(n.a,{href:"https://facebook.github.io/watchman/docs/troubleshooting",children:"watchman troubleshooting"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"los-tests-son-extremadamente-lentos-en-docker-yo-en-el-servidor-de-integraci\xf3n-continua-ci",children:"Los tests son extremadamente lentos en Docker y/o en el servidor de integraci\xf3n continua (CI)."}),"\n",(0,t.jsxs)(n.p,{children:["While Jest is most of the time extremely fast on modern multi-core computers with fast SSDs, it may be slow on certain setups as our users ",(0,t.jsx)(n.a,{href:"https://github.com/jestjs/jest/issues/1395",children:"have"})," ",(0,t.jsx)(n.a,{href:"https://github.com/jestjs/jest/issues/1524#issuecomment-260246008",children:"discovered"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Based on the ",(0,t.jsx)(n.a,{href:"https://github.com/jestjs/jest/issues/1524#issuecomment-262366820",children:"findings"}),", one way to mitigate this issue and improve the speed by up to 50% is to run tests sequentially."]}),"\n",(0,t.jsxs)(n.p,{children:["Para este fin, puede ejecutar pruebas en el mismo hilo usando ",(0,t.jsx)(n.a,{href:"/es-ES/docs/29.5/cli#--runinband",children:(0,t.jsx)(n.code,{children:"--runInBand"})}),":"]}),"\n",(0,t.jsxs)(a.Z,{groupId:"npm2yarn",children:[(0,t.jsx)(o.Z,{value:"npm",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Using Jest CLI\njest --runInBand\n\n# Using your package manager's `test` script (e.g. with create-react-app)\nnpm test -- --runInBand\n"})})}),(0,t.jsx)(o.Z,{value:"yarn",label:"Yarn",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Using Jest CLI\njest --runInBand\n\n# Using your package manager's `test` script (e.g. with create-react-app)\nyarn test --runInBand\n"})})}),(0,t.jsx)(o.Z,{value:"pnpm",label:"pnpm",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Using Jest CLI\njest --runInBand\n\n# Using your package manager's `test` script (e.g. with create-react-app)\npnpm test -- --runInBand\n"})})})]}),"\n",(0,t.jsxs)(n.p,{children:["Another alternative to expediting test execution time on Continuous Integration Servers such as Travis-CI is to set the max worker pool to ~",(0,t.jsx)(n.em,{children:"4"}),". Espec\xedficamente en Travis-CI, esto puede reducir el tiempo de ejecuci\xf3n de prueba a la mitad. Nota: El plan ",(0,t.jsx)(n.em,{children:"gratis"})," de Travis CI disponible para proyectos de c\xf3digo abierto s\xf3lo incluye 2 n\xfacleos CPU."]}),"\n",(0,t.jsxs)(a.Z,{groupId:"npm2yarn",children:[(0,t.jsx)(o.Z,{value:"npm",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Using Jest CLI\njest --maxWorkers=4\n\n# Using your package manager's `test` script (e.g. with create-react-app)\nnpm test -- --maxWorkers=4\n"})})}),(0,t.jsx)(o.Z,{value:"yarn",label:"Yarn",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Using Jest CLI\njest --maxWorkers=4\n\n# Using your package manager's `test` script (e.g. with create-react-app)\nyarn test --maxWorkers=4\n"})})}),(0,t.jsx)(o.Z,{value:"pnpm",label:"pnpm",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Using Jest CLI\njest --maxWorkers=4\n\n# Using your package manager's `test` script (e.g. with create-react-app)\npnpm test -- --maxWorkers=4\n"})})})]}),"\n",(0,t.jsxs)(n.p,{children:["If you use GitHub Actions, you can use ",(0,t.jsx)(n.a,{href:"https://github.com/SimenB/github-actions-cpu-cores",children:(0,t.jsx)(n.code,{children:"github-actions-cpu-cores"})})," to detect number of CPUs, and pass that to Jest."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"- name: Get number of CPU cores\n  id: cpu-cores\n  uses: SimenB/github-actions-cpu-cores@v1\n- name: run tests\n  run: yarn jest --max-workers ${{ steps.cpu-cores.outputs.count }}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Another thing you can do is use the ",(0,t.jsx)(n.a,{href:"/es-ES/docs/29.5/cli#--shard",children:(0,t.jsx)(n.code,{children:"shard"})})," flag to parallelize the test run across multiple machines."]}),"\n",(0,t.jsxs)(n.h2,{id:"coveragepathignorepatterns-seems-to-not-have-any-effect",children:[(0,t.jsx)(n.code,{children:"coveragePathIgnorePatterns"})," seems to not have any effect."]}),"\n",(0,t.jsxs)(n.p,{children:["Make sure you are not using the ",(0,t.jsx)(n.code,{children:"babel-plugin-istanbul"})," plugin. Jest wraps Istanbul, and therefore also tells Istanbul what files to instrument with coverage collection. When using ",(0,t.jsx)(n.code,{children:"babel-plugin-istanbul"}),", every file that is processed by Babel will have coverage collection code, hence it is not being ignored by ",(0,t.jsx)(n.code,{children:"coveragePathIgnorePatterns"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"defining-tests",children:"Defining Tests"}),"\n",(0,t.jsx)(n.p,{children:"Tests must be defined synchronously for Jest to be able to collect your tests."}),"\n",(0,t.jsx)(n.p,{children:"As an example to show why this is the case, imagine we wrote a test like so:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// Don't do this it will not work\nsetTimeout(() => {\n  it('passes', () => expect(1).toBe(1));\n}, 0);\n"})}),"\n",(0,t.jsxs)(n.p,{children:["When Jest runs your test to collect the ",(0,t.jsx)(n.code,{children:"test"}),"s it will not find any because we have set the definition to happen asynchronously on the next tick of the event loop. This means when you are using ",(0,t.jsx)(n.code,{children:"test.each"})," you cannot set the table asynchronously within a ",(0,t.jsx)(n.code,{children:"beforeEach"})," / ",(0,t.jsx)(n.code,{children:"beforeAll"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"a\xfan-sin-resolver",children:"\xbfA\xfan sin resolver?"}),"\n",(0,t.jsxs)(n.p,{children:["Ver ",(0,t.jsx)(n.a,{href:"/help.html",children:"Ayuda"}),"."]})]})}const p=function(e={}){const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(h,e)})):h(e)}},1670:(e,n,s)=>{s.d(n,{Zo:()=>i,ah:()=>a});var t=s(7378);const r=t.createContext({});function a(e){const n=t.useContext(r);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const o={};function i({components:e,children:n,disableParentContext:s}){let i;return i=s?"function"==typeof e?e({}):e||o:a(e),t.createElement(r.Provider,{value:i},n)}}}]);