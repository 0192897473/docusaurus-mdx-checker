"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[7174],{1578:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>d,toc:()=>l});var s=t(4246),n=t(1670),r=t(7726);const c={id:"upgrading-to-jest29",title:"From v28 to v29"},i=void 0,d={unversionedId:"upgrading-to-jest29",id:"version-29.5/upgrading-to-jest29",title:"From v28 to v29",description:"Upgrading Jest from v28 to v29? This guide aims to help refactoring your configuration and tests.",source:"@site/i18n/pt-BR/docusaurus-plugin-content-docs/version-29.5/UpgradingToJest29.md",sourceDirName:".",slug:"/upgrading-to-jest29",permalink:"/pt-BR/docs/29.5/upgrading-to-jest29",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/jest-v2/pt-BR",tags:[],version:"29.5",frontMatter:{id:"upgrading-to-jest29",title:"From v28 to v29"},sidebar:"docs",previous:{title:"Testing Web Frameworks",permalink:"/pt-BR/docs/29.5/testing-frameworks"}},a={},l=[{value:"Compatibility",id:"compatibility",level:2},{value:"Snapshot format",id:"snapshot-format",level:2},{value:"JSDOM upgrade",id:"jsdom-upgrade",level:2},{value:"<code>pretty-format</code>",id:"pretty-format",level:2},{value:"<code>jest-mock</code>",id:"jest-mock",level:3},{value:"TypeScript",id:"typescript",level:2},{value:"<code>jest.mocked()</code>",id:"jestmocked",level:3}];function p(e){const o=Object.assign({p:"p",admonition:"admonition",a:"a",h2:"h2",code:"code",pre:"pre",h3:"h3"},(0,n.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.p,{children:"Upgrading Jest from v28 to v29? This guide aims to help refactoring your configuration and tests."}),"\n",(0,s.jsx)(o.admonition,{type:"info",children:(0,s.jsxs)(o.p,{children:["See ",(0,s.jsx)(o.a,{href:"https://github.com/jestjs/jest/blob/main/CHANGELOG.md#2900",children:"changelog"})," for the full list of changes."]})}),"\n",(0,s.jsx)(o.admonition,{type:"note",children:(0,s.jsxs)(o.p,{children:["Upgrading from an older version? You can see the upgrade guide from v27 to v28 ",(0,s.jsx)(o.a,{href:"/docs/28.x/upgrading-to-jest28",children:"here"}),"."]})}),"\n",(0,s.jsx)(o.h2,{id:"compatibility",children:"Compatibility"}),"\n",(0,s.jsx)(o.p,{children:"The supported Node versions are 14.15, 16.10, 18.0 and above."}),"\n",(0,s.jsx)(o.h2,{id:"snapshot-format",children:"Snapshot format"}),"\n",(0,s.jsxs)(o.p,{children:["As announced in the ",(0,s.jsx)(o.a,{href:"/blog/2022/04/25/jest-28#future",children:"Jest 28 blog post"}),", Jest 29 has changed the default snapshot formatting to ",(0,s.jsx)(o.code,{children:"{escapeString: false, printBasicPrototype: false}"}),"."]}),"\n",(0,s.jsxs)(o.p,{children:["If you want to keep the old behavior, you can set the ",(0,s.jsx)(o.code,{children:"snapshotFormat"})," property to:"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-diff",children:"+ snapshotFormat: {\n+   escapeString: true,\n+   printBasicPrototype: true\n+ }\n"})}),"\n",(0,s.jsx)(o.h2,{id:"jsdom-upgrade",children:"JSDOM upgrade"}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:"jest-environment-jsdom"})," has upgraded ",(0,s.jsx)(o.code,{children:"jsdom"})," from v19 to v20."]}),"\n",(0,s.jsx)(o.admonition,{type:"info",children:(0,s.jsxs)(o.p,{children:["If you use ",(0,s.jsx)(o.code,{children:"jest-environment-jsdom"}),", the minimum TypeScript version is set to ",(0,s.jsx)(o.code,{children:"4.5"}),"."]})}),"\n",(0,s.jsxs)(o.p,{children:["Notably, ",(0,s.jsx)(o.code,{children:"jsdom@20"})," includes support for ",(0,s.jsx)(o.code,{children:"crypto.getRandomValues()"}),", which means packages like ",(0,s.jsx)(o.code,{children:"uuid"})," and ",(0,s.jsx)(o.code,{children:"nanoid"}),", which doesn't work properly in Jest@28, can work without extra polyfills."]}),"\n",(0,s.jsx)(o.h2,{id:"pretty-format",children:(0,s.jsx)(o.code,{children:"pretty-format"})}),"\n",(0,s.jsxs)(o.p,{children:[(0,s.jsx)(o.code,{children:"ConvertAnsi"})," plugin is removed from ",(0,s.jsx)(o.code,{children:"pretty-format"})," package in favour of ",(0,s.jsx)(o.a,{href:"https://github.com/mrazauskas/jest-serializer-ansi-escapes",children:(0,s.jsx)(o.code,{children:"jest-serializer-ansi-escapes"})}),"."]}),"\n",(0,s.jsx)(o.h3,{id:"jest-mock",children:(0,s.jsx)(o.code,{children:"jest-mock"})}),"\n",(0,s.jsxs)(o.p,{children:["Exports of ",(0,s.jsx)(o.code,{children:"Mocked*"})," utility types from ",(0,s.jsx)(o.code,{children:"jest-mock"})," package have changed. ",(0,s.jsx)(o.code,{children:"MaybeMockedDeep"})," and ",(0,s.jsx)(o.code,{children:"MaybeMocked"})," now are exported as ",(0,s.jsx)(o.code,{children:"Mocked"})," and ",(0,s.jsx)(o.code,{children:"MockedShallow"})," respectively; only deep mocked variants of ",(0,s.jsx)(o.code,{children:"MockedClass"}),", ",(0,s.jsx)(o.code,{children:"MockedFunction"})," and ",(0,s.jsx)(o.code,{children:"MockedObject"})," are exposed."]}),"\n",(0,s.jsx)(o.h2,{id:"typescript",children:"TypeScript"}),"\n","\n","\n",(0,s.jsx)(r.ZP,{}),"\n",(0,s.jsx)(o.h3,{id:"jestmocked",children:(0,s.jsx)(o.code,{children:"jest.mocked()"})}),"\n",(0,s.jsxs)(o.p,{children:["The ",(0,s.jsx)(o.a,{href:"MockFunctionAPI.md/#jestmockedsource-options",children:(0,s.jsx)(o.code,{children:"jest.mocked()"})})," helper method now wraps types of deep members of passed object by default. If you have used the method with ",(0,s.jsx)(o.code,{children:"true"})," as the second argument, remove it to avoid type errors:"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-diff",children:"- const mockedObject = jest.mocked(someObject, true);\n+ const mockedObject = jest.mocked(someObject);\n"})}),"\n",(0,s.jsxs)(o.p,{children:["To have the old shallow mocked behavior, pass ",(0,s.jsx)(o.code,{children:"{shallow: true}"})," as the second argument:"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-diff",children:"- const mockedObject = jest.mocked(someObject);\n+ const mockedObject = jest.mocked(someObject, {shallow: true});\n"})})]})}const h=function(e={}){const{wrapper:o}=Object.assign({},(0,n.ah)(),e.components);return o?(0,s.jsx)(o,Object.assign({},e,{children:(0,s.jsx)(p,e)})):p(e)}},7726:(e,o,t)=>{t.d(o,{ZP:()=>c});var s=t(4246),n=t(1670);function r(e){const o=Object.assign({admonition:"admonition",p:"p",pre:"pre",code:"code",a:"a"},(0,n.ah)(),e.components);return(0,s.jsxs)(o.admonition,{type:"info",children:[(0,s.jsx)(o.p,{children:"Os exemplos de TypeScript desta p\xe1gina s\xf3 funcionar\xe3o como documentados se voc\xea importar explicitamente APIs do Jest:"}),(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-ts",children:"import {expect, jest, test} from '@jest/globals';\n"})}),(0,s.jsxs)(o.p,{children:["Consulte o guia ",(0,s.jsx)(o.a,{href:"/pt-BR/docs/29.5/getting-started#using-typescript",children:"Iniciando"})," para obter detalhes sobre como configurar Jest com TypeScript."]})]})}const c=function(e={}){const{wrapper:o}=Object.assign({},(0,n.ah)(),e.components);return o?(0,s.jsx)(o,Object.assign({},e,{children:(0,s.jsx)(r,e)})):r(e)}},1670:(e,o,t)=>{t.d(o,{Zo:()=>i,ah:()=>r});var s=t(7378);const n=s.createContext({});function r(e){const o=s.useContext(n);return s.useMemo((()=>"function"==typeof e?e(o):{...o,...e}),[o,e])}const c={};function i({components:e,children:o,disableParentContext:t}){let i;return i=t?"function"==typeof e?e({}):e||c:r(e),s.createElement(n.Provider,{value:i},o)}}}]);