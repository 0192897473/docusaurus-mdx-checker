"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[1356],{4327:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>n,metadata:()=>i,toc:()=>c});var s=a(4246),o=a(1670);const n={title:"Jest 26: Tick Tock",author:"Christoph Nakazawa",authorURL:"http://twitter.com/cpojer",authorFBID:0x5af311d9a1c8},r=void 0,i={permalink:"/pt-BR/blog/2020/05/05/jest-26",editUrl:"https://github.com/jestjs/jest/tree/main/website/blog/2020-05-05-jest-26.md",source:"@site/i18n/pt-BR/docusaurus-plugin-content-blog/2020-05-05-jest-26.md",title:"Jest 26: Tick Tock",description:"When we started rebuilding Jest five years ago our goal was to provide a batteries-included zero-configuration test runner that is approachable for beginners, extensible for almost all testing use cases and scalable to large projects. One of the instrumental releases was Jest 15 which tied everything together and provided good defaults that allowed people to run Jest often without any setup. However, this approach has a big downside as Jest installs a lot of dependencies into your projects that you may not need.",date:"2020-05-05T00:00:00.000Z",formattedDate:"5 de maio de 2020",tags:[],readingTime:6.165,hasTruncateMarker:!0,authors:[{name:"Christoph Nakazawa",url:"http://twitter.com/cpojer"}],frontMatter:{title:"Jest 26: Tick Tock",author:"Christoph Nakazawa",authorURL:"http://twitter.com/cpojer",authorFBID:0x5af311d9a1c8},unlisted:!1,prevItem:{title:"Jest Website Upgrade",permalink:"/pt-BR/blog/2021/03/09/jest-website-upgrade"},nextItem:{title:"Jest 25: \ud83d\ude80 Laying foundations for the future",permalink:"/pt-BR/blog/2020/01/21/jest-25"}},l={authorsImageUrls:[void 0]},c=[];function d(e){const t=Object.assign({p:"p",a:"a",strong:"strong"},(0,o.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["When we started rebuilding Jest five years ago our goal was to provide a batteries-included zero-configuration test runner that is approachable for beginners, extensible for almost all testing use cases and scalable to large projects. One of the instrumental releases was ",(0,s.jsx)(t.a,{href:"/blog/2016/09/01/jest-15",children:"Jest 15"})," which tied everything together and provided good defaults that allowed people to run Jest often without any setup. However, this approach has a big downside as Jest installs a lot of dependencies into your projects that you may not need."]}),"\n",(0,s.jsxs)(t.p,{children:["We are now beginning to address this shortcoming and are working on reducing Jest\u2019s install size while keeping it approachable and extensible. We have made the following ",(0,s.jsx)(t.strong,{children:"breaking changes"})," in Jest 26:"]})]})}const h=function(e={}){const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}},1670:(e,t,a)=>{a.d(t,{Zo:()=>i,ah:()=>n});var s=a(7378);const o=s.createContext({});function n(e){const t=s.useContext(o);return s.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const r={};function i({components:e,children:t,disableParentContext:a}){let i;return i=a?"function"==typeof e?e({}):e||r:n(e),s.createElement(o.Provider,{value:i},t)}}}]);