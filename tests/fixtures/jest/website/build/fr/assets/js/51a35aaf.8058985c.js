"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[2602],{6294:(e,n,s)=>{s.d(n,{Z:()=>a});s(7378);var t=s(7614);const i={tableOfContentsInline:"tableOfContentsInline_pY9K"};var c=s(4246);function a(e){let{toc:n,minHeadingLevel:s,maxHeadingLevel:a}=e;return(0,c.jsx)("div",{className:i.tableOfContentsInline,children:(0,c.jsx)(t.Z,{toc:n,minHeadingLevel:s,maxHeadingLevel:a,className:"table-of-contents",linkClassName:null})})}},7614:(e,n,s)=>{s.d(n,{Z:()=>m});var t=s(7378),i=s(9899);function c(e){const n=e.map((e=>({...e,parentIndex:-1,children:[]}))),s=Array(7).fill(-1);n.forEach(((e,n)=>{const t=s.slice(2,e.level);e.parentIndex=Math.max(...t),s[e.level]=n}));const t=[];return n.forEach((e=>{const{parentIndex:s,...i}=e;s>=0?n[s].children.push(i):t.push(i)})),t}function a(e){let{toc:n,minHeadingLevel:s,maxHeadingLevel:t}=e;return n.flatMap((e=>{const n=a({toc:e.children,minHeadingLevel:s,maxHeadingLevel:t});return function(e){return e.level>=s&&e.level<=t}(e)?[{...e,children:n}]:n}))}function l(e){const n=e.getBoundingClientRect();return n.top===n.bottom?l(e.parentNode):n}function r(e,n){let{anchorTopOffset:s}=n;const t=e.find((e=>l(e).top>=s));if(t){return function(e){return e.top>0&&e.bottom<window.innerHeight/2}(l(t))?t:e[e.indexOf(t)-1]??null}return e[e.length-1]??null}function d(){const e=(0,t.useRef)(0),{navbar:{hideOnScroll:n}}=(0,i.L)();return(0,t.useEffect)((()=>{e.current=n?0:document.querySelector(".navbar").clientHeight}),[n]),e}function o(e){const n=(0,t.useRef)(void 0),s=d();(0,t.useEffect)((()=>{if(!e)return()=>{};const{linkClassName:t,linkActiveClassName:i,minHeadingLevel:c,maxHeadingLevel:a}=e;function l(){const e=function(e){return Array.from(document.getElementsByClassName(e))}(t),l=function(e){let{minHeadingLevel:n,maxHeadingLevel:s}=e;const t=[];for(let i=n;i<=s;i+=1)t.push(`h${i}.anchor`);return Array.from(document.querySelectorAll(t.join()))}({minHeadingLevel:c,maxHeadingLevel:a}),d=r(l,{anchorTopOffset:s.current}),o=e.find((e=>d&&d.id===function(e){return decodeURIComponent(e.href.substring(e.href.indexOf("#")+1))}(e)));e.forEach((e=>{!function(e,s){s?(n.current&&n.current!==e&&n.current.classList.remove(i),e.classList.add(i),n.current=e):e.classList.remove(i)}(e,e===o)}))}return document.addEventListener("scroll",l),document.addEventListener("resize",l),l(),()=>{document.removeEventListener("scroll",l),document.removeEventListener("resize",l)}}),[e,s])}var u=s(1191),h=s(4246);function x(e){let{toc:n,className:s,linkClassName:t,isChild:i}=e;return n.length?(0,h.jsx)("ul",{className:i?void 0:s,children:n.map((e=>(0,h.jsxs)("li",{children:[(0,h.jsx)(u.Z,{to:`#${e.id}`,className:t??void 0,dangerouslySetInnerHTML:{__html:e.value}}),(0,h.jsx)(x,{isChild:!0,toc:e.children,className:s,linkClassName:t})]},e.id)))}):null}const p=t.memo(x);function m(e){let{toc:n,className:s="table-of-contents table-of-contents__left-border",linkClassName:l="table-of-contents__link",linkActiveClassName:r,minHeadingLevel:d,maxHeadingLevel:u,...x}=e;const m=(0,i.L)(),j=d??m.tableOfContents.minHeadingLevel,b=u??m.tableOfContents.maxHeadingLevel,f=function(e){let{toc:n,minHeadingLevel:s,maxHeadingLevel:i}=e;return(0,t.useMemo)((()=>a({toc:c(n),minHeadingLevel:s,maxHeadingLevel:i})),[n,s,i])}({toc:n,minHeadingLevel:j,maxHeadingLevel:b});return o((0,t.useMemo)((()=>{if(l&&r)return{linkClassName:l,linkActiveClassName:r,minHeadingLevel:j,maxHeadingLevel:b}}),[l,r,j,b])),(0,h.jsx)(p,{toc:f,className:s,linkClassName:l,...x})}},4491:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>x,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var t=s(4246),i=s(1670),c=s(7860),a=s(6294);const l={id:"api",title:"Globals"},r=void 0,d={unversionedId:"api",id:"version-29.5/api",title:"Globals",description:"Dans vos fichiers de test, Jest place chacune de ces m\xe9thodes et objets dans l'environnement global. You don't have to require or import anything to use them. Cependant, si vous pr\xe9f\xe9rez les importations explicites, vous pouvez faire import {describe, expect, test} from '@jest/globals'.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-29.5/GlobalAPI.md",sourceDirName:".",slug:"/api",permalink:"/fr/docs/29.5/api",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/jest-v2/fr",tags:[],version:"29.5",frontMatter:{id:"api",title:"Globals"},sidebar:"api",next:{title:"Expect",permalink:"/fr/docs/29.5/expect"}},o={},u=[{value:"M\xe9thodes",id:"m\xe9thodes",level:2},{value:"R\xe9f\xe9rence",id:"r\xe9f\xe9rence",level:2},{value:"<code>afterAll(fn, timeout)</code>",id:"afterallfn-timeout",level:3},{value:"<code>afterEach(fn, timeout)</code>",id:"aftereachfn-timeout",level:3},{value:"<code>beforeAll(fn, timeout)</code>",id:"beforeallfn-timeout",level:3},{value:"<code>beforeEach(fn, timeout)</code>",id:"beforeeachfn-timeout",level:3},{value:"<code>describe(name, fn)</code>",id:"describename-fn",level:3},{value:"<code>describe.each(table)(name, fn, timeout)</code>",id:"describeeachtablename-fn-timeout",level:3},{value:"1. <code>describe.each(table)(name, fn, timeout)</code>",id:"1-describeeachtablename-fn-timeout",level:4},{value:"2. <code>describe.each`table`(name, fn, timeout)</code>",id:"2-describeeachtablename-fn-timeout",level:4},{value:"<code>describe.only(name, fn)</code>",id:"describeonlyname-fn",level:3},{value:"<code>describe.only.each(table)(name, fn)</code>",id:"describeonlyeachtablename-fn",level:3},{value:"<code>describe.only.each(table)(name, fn)</code>",id:"describeonlyeachtablename-fn-1",level:4},{value:"<code>describe.only.each`table`(name, fn)</code>",id:"describeonlyeachtablename-fn-2",level:4},{value:"<code>describe.skip(name, fn)</code>",id:"describeskipname-fn",level:3},{value:"<code>describe.skip.each(table)(name, fn)</code>",id:"describeskipeachtablename-fn",level:3},{value:"<code>describe.skip.each(table)(name, fn)</code>",id:"describeskipeachtablename-fn-1",level:4},{value:"<code>describe.skip.each`table`(name, fn)</code>",id:"describeskipeachtablename-fn-2",level:4},{value:"<code>test(name, fn, timeout)</code>",id:"testname-fn-timeout",level:3},{value:"<code>test.concurrent(name, fn, timeout)</code>",id:"testconcurrentname-fn-timeout",level:3},{value:"<code>test.concurrent.each(table)(name, fn, timeout)</code>",id:"testconcurrenteachtablename-fn-timeout",level:3},{value:"1. <code>test.concurrent.each(table)(name, fn, timeout)</code>",id:"1-testconcurrenteachtablename-fn-timeout",level:4},{value:"2. <code>test.concurrent.each`table`(name, fn, timeout)</code>",id:"2-testconcurrenteachtablename-fn-timeout",level:4},{value:"<code>test.concurrent.only.each(table)(name, fn)</code>",id:"testconcurrentonlyeachtablename-fn",level:3},{value:"<code>test.concurrent.only.each(table)(name, fn)</code>",id:"testconcurrentonlyeachtablename-fn-1",level:4},{value:"<code>test.only.each`table`(name, fn)</code>",id:"testonlyeachtablename-fn",level:4},{value:"<code>test.concurrent.skip.each(table)(name, fn)</code>",id:"testconcurrentskipeachtablename-fn",level:3},{value:"<code>test.concurrent.skip.each(table)(name, fn)</code>",id:"testconcurrentskipeachtablename-fn-1",level:4},{value:"<code>test.concurrent.skip.each`table`(name, fn)</code>",id:"testconcurrentskipeachtablename-fn-2",level:4},{value:"<code>test.each(table)(name, fn, timeout)</code>",id:"testeachtablename-fn-timeout",level:3},{value:"1. <code>test.each(table)(name, fn, timeout)</code>",id:"1-testeachtablename-fn-timeout",level:4},{value:"2. <code>test.each`table`(name, fn, timeout)</code>",id:"2-testeachtablename-fn-timeout",level:4},{value:"<code>test.failing(name, fn, timeout)</code>",id:"testfailingname-fn-timeout",level:3},{value:"<code>test.failing.each(name, fn, timeout)</code>",id:"testfailingeachname-fn-timeout",level:3},{value:"<code>test.only.failing(name, fn, timeout)</code>",id:"testonlyfailingname-fn-timeout",level:3},{value:"<code>test.skip.failing(name, fn, timeout)</code>",id:"testskipfailingname-fn-timeout",level:3},{value:"<code>test.only(name, fn, timeout)</code>",id:"testonlyname-fn-timeout",level:3},{value:"<code>test.only.each(table)(name, fn)</code>",id:"testonlyeachtablename-fn-1",level:3},{value:"<code>test.only.each(table)(name, fn)</code>",id:"testonlyeachtablename-fn-2",level:4},{value:"<code>test.only.each`table`(name, fn)</code>",id:"testonlyeachtablename-fn-3",level:4},{value:"<code>test.skip(name, fn)</code>",id:"testskipname-fn",level:3},{value:"<code>test.skip.each(table)(name, fn)</code>",id:"testskipeachtablename-fn",level:3},{value:"<code>test.skip.each(table)(name, fn)</code>",id:"testskipeachtablename-fn-1",level:4},{value:"<code>test.skip.each`table`(name, fn)</code>",id:"testskipeachtablename-fn-2",level:4},{value:"<code>test.todo(name)</code>",id:"testtodoname",level:3},{value:"TypeScript Usage",id:"typescript-usage",level:2},{value:"<code>.each</code>",id:"each",level:3},{value:"Tableau d&#39;objets",id:"tableau-dobjets",level:4},{value:"Tableau de tableaux",id:"tableau-de-tableaux",level:4},{value:"Litt\xe9ral de gabarit",id:"litt\xe9ral-de-gabarit",level:4}];function h(e){const n=Object.assign({p:"p",code:"code",h2:"h2",hr:"hr",h3:"h3",pre:"pre",h4:"h4",ul:"ul",li:"li",a:"a",strong:"strong",admonition:"admonition"},(0,i.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Dans vos fichiers de test, Jest place chacune de ces m\xe9thodes et objets dans l'environnement global. You don't have to require or import anything to use them. Cependant, si vous pr\xe9f\xe9rez les importations explicites, vous pouvez faire ",(0,t.jsx)(n.code,{children:"import {describe, expect, test} from '@jest/globals'"}),"."]}),"\n","\n",(0,t.jsx)(c.ZP,{}),"\n",(0,t.jsx)(n.h2,{id:"m\xe9thodes",children:"M\xe9thodes"}),"\n","\n","\n",(0,t.jsx)(a.Z,{toc:u.slice(1)}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"r\xe9f\xe9rence",children:"R\xe9f\xe9rence"}),"\n",(0,t.jsx)(n.h3,{id:"afterallfn-timeout",children:(0,t.jsx)(n.code,{children:"afterAll(fn, timeout)"})}),"\n",(0,t.jsx)(n.p,{children:"Ex\xe9cute une fonction une fois que tous les tests de ce fichier sont termin\xe9s. Si la fonction retourne une promesse ou est un g\xe9n\xe9rateur, Jest attend que cette promesse soit r\xe9solue avant de continuer."}),"\n",(0,t.jsxs)(n.p,{children:["En option, vous pouvez fournir un ",(0,t.jsx)(n.code,{children:"timeout"})," (en millisecondes) pour sp\xe9cifier le temps d'attente avant l'abandon. The default timeout is 5 seconds."]}),"\n",(0,t.jsx)(n.p,{children:"Cela est tr\xe8s souvent utile pour r\xe9initialiser des configurations globales, partag\xe9es par diff\xe9rents tests."}),"\n",(0,t.jsx)(n.p,{children:"Par exemple\xa0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const globalDatabase = makeGlobalDatabase();\n\nfunction cleanUpDatabase(db) {\n  db.cleanUp();\n}\n\nafterAll(() => {\n  cleanUpDatabase(globalDatabase);\n});\n\ntest('peut trouver des choses', () => {\n  return globalDatabase.find('thing', {}, results => {\n    expect(results.length).toBeGreaterThan(0);\n  });\n});\n\ntest('peut ins\xe9rer un truc', () => {\n  return globalDatabase.insert('thing', makeThing(), response => {\n    expect(response.success).toBeTruthy();\n  });\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Ici ",(0,t.jsx)(n.code,{children:"afterAll"})," s'assure que ",(0,t.jsx)(n.code,{children:"cleanUpDatabase"})," est appel\xe9 apr\xe8s l'ex\xe9cution de tous les tests."]}),"\n",(0,t.jsxs)(n.p,{children:["Si ",(0,t.jsx)(n.code,{children:"afterAll"})," se trouve \xe0 l'int\xe9rieur d'un bloc ",(0,t.jsx)(n.code,{children:"describe"})," , il s'ex\xe9cute \xe0 la fin du bloc describe."]}),"\n",(0,t.jsxs)(n.p,{children:["Si vous voulez ex\xe9cuter un nettoyage apr\xe8s chaque test plut\xf4t qu'apr\xe8s tous les tests, utilisez plut\xf4t ",(0,t.jsx)(n.code,{children:"afterEach"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"aftereachfn-timeout",children:(0,t.jsx)(n.code,{children:"afterEach(fn, timeout)"})}),"\n",(0,t.jsx)(n.p,{children:"Ex\xe9cute une fonction apr\xe8s l'ach\xe8vement de chacun des tests de ce fichier. Si la fonction retourne une promesse ou est un g\xe9n\xe9rateur, Jest attend que cette promesse soit r\xe9solue avant de continuer."}),"\n",(0,t.jsxs)(n.p,{children:["En option, vous pouvez fournir un ",(0,t.jsx)(n.code,{children:"timeout"})," (en millisecondes) pour sp\xe9cifier le temps d'attente avant l'abandon. The default timeout is 5 seconds."]}),"\n",(0,t.jsx)(n.p,{children:"Ceci est souvent utile si vous voulez nettoyer un \xe9tat temporaire qui est cr\xe9\xe9 par chaque test."}),"\n",(0,t.jsx)(n.p,{children:"Par exemple\xa0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const globalDatabase = makeGlobalDatabase();\n\nfunction cleanUpDatabase(db) {\n  db.cleanUp();\n}\n\nafterEach(() => {\n  cleanUpDatabase(globalDatabase);\n});\n\ntest('peut trouver des choses', () => {\n  return globalDatabase.find('thing', {}, results => {\n    expect(results.length).toBeGreaterThan(0);\n  });\n});\n\ntest('peut ins\xe9rer un truc', () => {\n  return globalDatabase.insert('thing', makeThing(), response => {\n    expect(response.success).toBeTruthy();\n  });\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Ici ",(0,t.jsx)(n.code,{children:"afterEach"})," s'assure que ",(0,t.jsx)(n.code,{children:"cleanUpDatabase"})," est appel\xe9 apr\xe8s chaque ex\xe9cution du test."]}),"\n",(0,t.jsxs)(n.p,{children:["Si ",(0,t.jsx)(n.code,{children:"afterEach"})," est \xe0 l'int\xe9rieur d'un bloc ",(0,t.jsx)(n.code,{children:"describe"}),", il s'ex\xe9cute uniquement apr\xe8s les tests qui sont \xe0 l'int\xe9rieur de ce bloc describe."]}),"\n",(0,t.jsxs)(n.p,{children:["Si vous voulez ex\xe9cuter un nettoyage une seule fois, apr\xe8s l'ex\xe9cution de tous les tests, utilisez plut\xf4t ",(0,t.jsx)(n.code,{children:"afterAll"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"beforeallfn-timeout",children:(0,t.jsx)(n.code,{children:"beforeAll(fn, timeout)"})}),"\n",(0,t.jsx)(n.p,{children:"Ex\xe9cute une fonction avant l'ex\xe9cution de tous les tests de ce fichier. Si la fonction retourne une promesse ou est un g\xe9n\xe9rateur, Jest attend que cette promesse soit r\xe9solue avant d'ex\xe9cuter des tests."}),"\n",(0,t.jsxs)(n.p,{children:["En option, vous pouvez fournir un ",(0,t.jsx)(n.code,{children:"timeout"})," (en millisecondes) pour sp\xe9cifier le temps d'attente avant l'abandon. The default timeout is 5 seconds."]}),"\n",(0,t.jsx)(n.p,{children:"Ceci est souvent utile si vous voulez mettre en place un \xe9tat global qui sera utilis\xe9 par de nombreux tests."}),"\n",(0,t.jsx)(n.p,{children:"Par exemple\xa0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const globalDatabase = makeGlobalDatabase();\n\nbeforeAll(() => {\n  // Efface la base de donn\xe9es et ajoute des donn\xe9es de test.\n  // Jest attendra que cette promesse soit r\xe9solue avant d'ex\xe9cuter des tests.\n  return globalDatabase.clear().then(() => {\n    return globalDatabase.insert({testData: 'foo'});\n  });\n});\n\n// Puisque nous ne configurons la base de donn\xe9es qu'une seule fois dans cet exemple, il est important\n// que nos tests ne la modifient pas.\ntest('peut trouver des choses', () => {\n  return globalDatabase.find('thing', {}, results => {\n    expect(results.length).toBeGreaterThan(0);\n  });\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Ici ",(0,t.jsx)(n.code,{children:"beforeAll"})," s'assure que la base de donn\xe9es est configur\xe9e avant que les tests ne s'ex\xe9cutent. Si la configuration \xe9tait synchrone, vous pourriez le faire sans ",(0,t.jsx)(n.code,{children:"beforeAll"}),". La cl\xe9, c'est que Jest attendra la r\xe9solution d'une promesse, de sorte que vous puissiez \xe9galement avoir une configuration asynchrone."]}),"\n",(0,t.jsxs)(n.p,{children:["Si ",(0,t.jsx)(n.code,{children:"beforeAll"})," est \xe0 l'int\xe9rieur d'un bloc ",(0,t.jsx)(n.code,{children:"describe"}),", il s'ex\xe9cute au d\xe9but du bloc describe."]}),"\n",(0,t.jsxs)(n.p,{children:["Si vous voulez ex\xe9cuter quelque chose avant chaque test au lieu d'une seule ex\xe9cution avant tous les tests, utilisez plut\xf4t ",(0,t.jsx)(n.code,{children:"beforeEach"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"beforeeachfn-timeout",children:(0,t.jsx)(n.code,{children:"beforeEach(fn, timeout)"})}),"\n",(0,t.jsx)(n.p,{children:"Ex\xe9cute une fonction avant que chaque test de ce fichier ne s'ex\xe9cute. Si la fonction retourne une promesse ou est un g\xe9n\xe9rateur, Jest attend que cette promesse soit r\xe9solue avant de lancer le test."}),"\n",(0,t.jsxs)(n.p,{children:["En option, vous pouvez fournir un ",(0,t.jsx)(n.code,{children:"timeout"})," (en millisecondes) pour sp\xe9cifier le temps d'attente avant l'abandon. The default timeout is 5 seconds."]}),"\n",(0,t.jsx)(n.p,{children:"Ceci est souvent utile si vous voulez r\xe9initialiser un \xe9tat global qui sera utilis\xe9 par de nombreux tests."}),"\n",(0,t.jsx)(n.p,{children:"Par exemple\xa0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const globalDatabase = makeGlobalDatabase();\n\nbeforeEach(() => {\n  // Efface la base de donn\xe9es et ajoute des donn\xe9es de test.\n  // Jest attendra que cette promesse soit r\xe9solue avant d'ex\xe9cuter des tests.\n  return globalDatabase.clear().then(() => {\n    return globalDatabase.insert({testData: 'foo'});\n  });\n});\n\ntest('peut trouver des choses', () => {\n  return globalDatabase.find('thing', {}, results => {\n    expect(results.length).toBeGreaterThan(0);\n  });\n});\n\ntest('peut ins\xe9rer un truc', () => {\n  return globalDatabase.insert('thing', makeThing(), response => {\n    expect(response.success).toBeTruthy();\n  });\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Ici, le ",(0,t.jsx)(n.code,{children:"beforeEach"})," assure que la base de donn\xe9es est r\xe9initialis\xe9e pour chaque test."]}),"\n",(0,t.jsxs)(n.p,{children:["Si ",(0,t.jsx)(n.code,{children:"beforeEach"})," est \xe0 l'int\xe9rieur d'un bloc ",(0,t.jsx)(n.code,{children:"describe"}),", il s'ex\xe9cute pour chaque test du bloc describe."]}),"\n",(0,t.jsxs)(n.p,{children:["Si vous n'avez besoin d'ex\xe9cuter un code de configuration qu'une seule fois, avant l'ex\xe9cution de tous les tests, utilisez plut\xf4t ",(0,t.jsx)(n.code,{children:"beforeAll"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"describename-fn",children:(0,t.jsx)(n.code,{children:"describe(name, fn)"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"describe(name, fn)"})," cr\xe9e un bloc qui regroupe plusieurs tests li\xe9s. Par exemple, si vous avez un objet ",(0,t.jsx)(n.code,{children:"myBeverage"})," qui est cens\xe9 \xeatre d\xe9licieux mais pas amer, vous pouvez le tester ainsi\xa0:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const myBeverage = {\n  delicious: true,\n  sour: false,\n};\n\ndescribe('ma boisson', () => {\n  test('est d\xe9licieuse', () => {\n    expect(myBeverage.delicious).toBeTruthy();\n  });\n\n  test('n\\'est pas amer', () => {\n    expect(myBeverage.sour).toBeFalsy();\n  });\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Ce n'est pas n\xe9cessaire - vous pouvez \xe9crire les blocs ",(0,t.jsx)(n.code,{children:"test"})," directement au niveau sup\xe9rieur. Mais cela peut \xeatre pratique si vous pr\xe9f\xe9rez que vos tests soient organis\xe9s en groupes."]}),"\n",(0,t.jsxs)(n.p,{children:["Vous pouvez \xe9galement imbriquer les blocs ",(0,t.jsx)(n.code,{children:"describe"})," si vous avez une hi\xe9rarchie de tests\xa0:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const binaryStringToNumber = binString => {\n  if (!/^[01]+$/.test(binString)) {\n    throw new CustomError('Not a binary number.');\n  }\n\n  return parseInt(binString, 2);\n};\n\ndescribe('binaryStringToNumber', () => {\n  describe('given an invalid binary string', () => {\n    test('composed of non-numbers throws CustomError', () => {\n      expect(() => binaryStringToNumber('abc')).toThrow(CustomError);\n    });\n\n    test('with extra whitespace throws CustomError', () => {\n      expect(() => binaryStringToNumber('  100')).toThrow(CustomError);\n    });\n  });\n\n  describe('given a valid binary string', () => {\n    test('returns the correct number', () => {\n      expect(binaryStringToNumber('100')).toBe(4);\n    });\n  });\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"describeeachtablename-fn-timeout",children:(0,t.jsx)(n.code,{children:"describe.each(table)(name, fn, timeout)"})}),"\n",(0,t.jsxs)(n.p,{children:["Utilisez ",(0,t.jsx)(n.code,{children:"describe.each"})," si vous continuez \xe0 dupliquer les m\xeames suites de tests avec des donn\xe9es diff\xe9rentes. ",(0,t.jsx)(n.code,{children:"describe.each"})," permet d'\xe9crire la suite de tests une fois et de lui passer les donn\xe9es."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"describe.each"})," est disponible avec deux API\xa0:"]}),"\n",(0,t.jsxs)(n.h4,{id:"1-describeeachtablename-fn-timeout",children:["1. ",(0,t.jsx)(n.code,{children:"describe.each(table)(name, fn, timeout)"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"table"})," : ",(0,t.jsx)(n.code,{children:"Array"})," de tableaux avec les arguments qui sont pass\xe9s dans le ",(0,t.jsx)(n.code,{children:"fn"})," pour chaque ligne. If you pass in a 1D array of primitives, internally it will be mapped to a table i.e. ",(0,t.jsx)(n.code,{children:"[1, 2, 3] -> [[1], [2], [3]]"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"name"}),"\xa0: ",(0,t.jsx)(n.code,{children:"String"})," le titre de la suite de test."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["G\xe9n\xe9rez des titres de test uniques en injectant de mani\xe8re plac\xe9e des param\xe8tres avec le ",(0,t.jsxs)(n.a,{href:"https://nodejs.org/api/util.html#util_util_format_format_args",children:["formatage de ",(0,t.jsx)(n.code,{children:"printf"})]}),"\xa0:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%p"})," - ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/pretty-format",children:"pretty-format"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%s"}),"- Cha\xeene."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%d"}),"- Nombre."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%i"})," - Entier."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%f"})," - Valeur \xe0 virgule flottante."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%j"})," - JSON."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%o"})," - Objet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%#"})," - Index du cas de test."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%%"})," - signe de pourcentage simple ('%'). Cela ne sert pas d'argument."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Ou g\xe9n\xe9rez des titres de test uniques en injectant les propri\xe9t\xe9s de l'objet du cas de test avec ",(0,t.jsx)(n.code,{children:"$variable"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Pour injecter des valeurs d'objets imbriqu\xe9s, vous pouvez fournir un keyPath, c'est-\xe0-dire ",(0,t.jsx)(n.code,{children:"$variable.path.to.value"})]}),"\n",(0,t.jsxs)(n.li,{children:["Vous pouvez utiliser ",(0,t.jsx)(n.code,{children:"$#"})," pour injecter l'index du cas de test"]}),"\n",(0,t.jsxs)(n.li,{children:["Vous ne pouvez pas utiliser ",(0,t.jsx)(n.code,{children:"$variable"})," avec le formatage ",(0,t.jsx)(n.code,{children:"printf"})," sauf pour ",(0,t.jsx)(n.code,{children:"%%"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"fn"}),": ",(0,t.jsx)(n.code,{children:"Function"})," the suite of tests to be run, this is the function that will receive the parameters in each row as function arguments."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["En option, vous pouvez fournir un ",(0,t.jsx)(n.code,{children:"timeout"})," (en millisecondes) pour sp\xe9cifier combien de temps attendre pour chaque ligne avant d'abandonner. The default timeout is 5 seconds."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Exemple\xa0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"describe.each([\n  [1, 1, 2],\n  [1, 2, 3],\n  [2, 1, 3],\n])('.add(%i, %i)', (a, b, expected) => {\n  test(`retourne ${expected}`, () => {\n    expect(a + b).toBe(expected);\n  });\n\n  test(`la valeur retourn\xe9e ne doit pas \xeatre sup\xe9rieure \xe0 ${expected}`, () => {\n    expect(a + b).not.toBeGreaterThan(expected);\n  });\n\n  test(`la valeur retourn\xe9e ne doit pas \xeatre inf\xe9rieure \xe0 ${expected}`, () => {\n    expect(a + b).not.toBeLessThan(expected);\n  });\n});\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"describe.each([\n  {a: 1, b: 1, expected: 2},\n  {a: 1, b: 2, expected: 3},\n  {a: 2, b: 1, expected: 3},\n])('.add($a, $b)', ({a, b, expected}) => {\n  test(`retourne ${expected}`, () => {\n    expect(a + b).toBe(expected);\n  });\n\n  test(`la valeur retourn\xe9e ne doit pas \xeatre sup\xe9rieure \xe0 ${expected}`, () => {\n    expect(a + b).not.toBeGreaterThan(expected);\n  });\n\n  test(`la valeur retourn\xe9e ne doit pas \xeatre inf\xe9rieure \xe0 ${expected}`, () => {\n    expect(a + b).not.toBeLessThan(expected);\n  });\n});\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"2-describeeachtablename-fn-timeout",children:["2. ",(0,t.jsx)(n.code,{children:"describe.each`table`(name, fn, timeout)"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"table"}),": ",(0,t.jsx)(n.code,{children:"Litt\xe9ral de template \xe9tiquet\xe9"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["La premi\xe8re ligne contient l'ent\xeates des colonnes avec les noms de variables s\xe9par\xe9s par ",(0,t.jsx)(n.code,{children:"|"})]}),"\n",(0,t.jsxs)(n.li,{children:["Une ou plusieurs lignes de donn\xe9es successives sont fournies sous forme d'expressions litt\xe9rales de template utilisant la syntaxe ",(0,t.jsx)(n.code,{children:"${value}"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),"\xa0: ",(0,t.jsx)(n.code,{children:"String"})," le titre de la suite de test, utilisez ",(0,t.jsx)(n.code,{children:"$variable"})," pour injecter des donn\xe9es de test dans le titre de la suite \xe0 partir des expressions du template \xe9tiquet\xe9, et ",(0,t.jsx)(n.code,{children:"$#"})," pour l'index de la ligne.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Pour injecter des valeurs d'objets imbriqu\xe9s, vous pouvez fournir un keyPath, c'est-\xe0-dire ",(0,t.jsx)(n.code,{children:"$variable.path.to.value"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fn"}),": ",(0,t.jsx)(n.code,{children:"Function"})," the suite of tests to be run, this is the function that will receive the test data object."]}),"\n",(0,t.jsxs)(n.li,{children:["En option, vous pouvez fournir un ",(0,t.jsx)(n.code,{children:"timeout"})," (en millisecondes) pour sp\xe9cifier combien de temps attendre pour chaque ligne avant d'abandonner. The default timeout is 5 seconds."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Exemple\xa0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"describe.each`\n  a    | b    | expected\n  ${1} | ${1} | ${2}\n  ${1} | ${2} | ${3}\n  ${2} | ${1} | ${3}\n`('$a + $b', ({a, b, expected}) => {\n  test(`retourne ${expected}`, () => {\n    expect(a + b).toBe(expected);\n  });\n\n  test(`valeur retourn\xe9e ne pas \xeatre sup\xe9rieure \xe0 ${expected}`, () => {\n    expect(a + b).not.toBeGreaterThan(expected);\n  });\n\n  test(`valeur retourn\xe9e ne pas \xeatre inf\xe9rieure \xe0 ${expected}`, () => {\n    expect(a + b).not.toBeLessThan(expected);\n  });\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"describeonlyname-fn",children:(0,t.jsx)(n.code,{children:"describe.only(name, fn)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous l'alias\xa0: ",(0,t.jsx)(n.code,{children:"fdescribe(name, fn)"})]}),"\n",(0,t.jsxs)(n.p,{children:["Vous pouvez utiliser ",(0,t.jsx)(n.code,{children:"describe.only"})," si vous voulez ex\xe9cuter un seul bloc describe\xa0:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"describe.only('ma boisson', () => {\n  test('est d\xe9licieuse', () => {\n    expect(myBeverage.delicious).toBeTruthy();\n  });\n\n  test('n\\'est pas amer (sour)', () => {\n    expect(myBeverage.sour).toBeFalsy();\n  });\n});\n\ndescribe('mon autre boisson', () => {\n  // ... sera ignor\xe9\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"describeonlyeachtablename-fn",children:(0,t.jsx)(n.code,{children:"describe.only.each(table)(name, fn)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous les alias\xa0: ",(0,t.jsx)(n.code,{children:"fdescribe.each(table)(name, fn)"})," et ",(0,t.jsx)(n.code,{children:"fdescribe.each`table`(name, fn)"})]}),"\n",(0,t.jsxs)(n.p,{children:["Utilisez ",(0,t.jsx)(n.code,{children:"describe.only.each"})," si vous voulez seulement ex\xe9cuter des suites de tests sp\xe9cifiques de tests pilot\xe9s par les donn\xe9es."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"describe.only.each"})," est disponible avec deux API\xa0:"]}),"\n",(0,t.jsx)(n.h4,{id:"describeonlyeachtablename-fn-1",children:(0,t.jsx)(n.code,{children:"describe.only.each(table)(name, fn)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"describe.only.each([\n  [1, 1, 2],\n  [1, 2, 3],\n  [2, 1, 3],\n])('.add(%i, %i)', (a, b, expected) => {\n  test(`returns ${expected}`, () => {\n    expect(a + b).toBe(expected);\n  });\n});\n\ntest('will not be run', () => {\n  expect(1 / 0).toBe(Infinity);\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"describeonlyeachtablename-fn-2",children:(0,t.jsx)(n.code,{children:"describe.only.each`table`(name, fn)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"describe.only.each`\n  a    | b    | expected\n  ${1} | ${1} | ${2}\n  ${1} | ${2} | ${3}\n  ${2} | ${1} | ${3}\n`('returns $expected when $a is added to $b', ({a, b, expected}) => {\n  test('passes', () => {\n    expect(a + b).toBe(expected);\n  });\n});\n\ntest('will not be run', () => {\n  expect(1 / 0).toBe(Infinity);\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"describeskipname-fn",children:(0,t.jsx)(n.code,{children:"describe.skip(name, fn)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous l'alias\xa0: ",(0,t.jsx)(n.code,{children:"xdescribe(name, fn)"})]}),"\n",(0,t.jsxs)(n.p,{children:["Vous pouvez utiliser ",(0,t.jsx)(n.code,{children:"describe.skip"})," si vous ne voulez pas ex\xe9cuter les tests d'un bloc particulier ",(0,t.jsx)(n.code,{children:"describe"}),"\xa0:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"describe('ma boisson', () => {\n  test('est d\xe9licieuse', () => {\n    expect(myBeverage.delicious).toBeTruthy();\n  });\n\n  test('n\\'est pas amer (sour)', () => {\n    expect(myBeverage.sour).toBeFalsy();\n  });\n});\n\ndescribe.skip('mon autre boisson', () => {\n  // ... sera ignor\xe9\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["L'utilisation de ",(0,t.jsx)(n.code,{children:"describe.skip"})," est souvent une alternative plus propre que la mise en commentaire temporaire d'une partie des tests. Attention, le bloc ",(0,t.jsx)(n.code,{children:"describe"})," s'ex\xe9cutera quand m\xeame. Si vous avez une configuration qui doit \xe9galement \xeatre ignor\xe9e, faites-le dans un bloc ",(0,t.jsx)(n.code,{children:"beforeAll"})," ou ",(0,t.jsx)(n.code,{children:"beforeEach"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"describeskipeachtablename-fn",children:(0,t.jsx)(n.code,{children:"describe.skip.each(table)(name, fn)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous les alias\xa0: ",(0,t.jsx)(n.code,{children:"xdescribe.each(table)(name, fn)"})," et ",(0,t.jsx)(n.code,{children:"xdescribe.each`table`(name, fn)"})]}),"\n",(0,t.jsxs)(n.p,{children:["Utilisez ",(0,t.jsx)(n.code,{children:"describe.skip.each"})," si vous voulez arr\xeater d'ex\xe9cuter une suite de tests pilot\xe9s par les donn\xe9es."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"describe.skip.chaque"})," est disponible avec deux API\xa0:"]}),"\n",(0,t.jsx)(n.h4,{id:"describeskipeachtablename-fn-1",children:(0,t.jsx)(n.code,{children:"describe.skip.each(table)(name, fn)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"describe.skip.each([\n  [1, 1, 2],\n  [1, 2, 3],\n  [2, 1, 3],\n])('.add(%i, %i)', (a, b, expected) => {\n  test(`returns ${expected}`, () => {\n    expect(a + b).toBe(expected); // will not be run\n  });\n});\n\ntest('will be run', () => {\n  expect(1 / 0).toBe(Infinity);\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"describeskipeachtablename-fn-2",children:(0,t.jsx)(n.code,{children:"describe.skip.each`table`(name, fn)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"describe.skip.each`\n  a    | b    | expected\n  ${1} | ${1} | ${2}\n  ${1} | ${2} | ${3}\n  ${2} | ${1} | ${3}\n`('returns $expected when $a is added to $b', ({a, b, expected}) => {\n  test('will not be run', () => {\n    expect(a + b).toBe(expected); // will not be run\n  });\n});\n\ntest('will be run', () => {\n  expect(1 / 0).toBe(Infinity);\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testname-fn-timeout",children:(0,t.jsx)(n.code,{children:"test(name, fn, timeout)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous l'alias\xa0: ",(0,t.jsx)(n.code,{children:"it(name, fn, timeout)"})]}),"\n",(0,t.jsxs)(n.p,{children:["Tout ce dont vous avez besoin dans un fichier de test est la m\xe9thode ",(0,t.jsx)(n.code,{children:"test"})," qui ex\xe9cute un test. Par exemple, supposons qu'il existe une fonction ",(0,t.jsx)(n.code,{children:"inchesOfRain()"})," qui devrait \xeatre \xe9gale \xe0 z\xe9ro. Votre test complet pourrait \xeatre\xa0:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test('il n\\'a pas plu', () => {\n  expect(inchesOfRain()).toBe(0);\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Le premier argument est le nom du test ; le deuxi\xe8me argument est une fonction qui contient les attentes \xe0 tester. Le troisi\xe8me argument (facultatif) est ",(0,t.jsx)(n.code,{children:"timeout"})," (en millisecondes) pour sp\xe9cifier combien de temps il faut attendre avant d'abandonner. The default timeout is 5 seconds."]}),"\n",(0,t.jsxs)(n.p,{children:["Si une ",(0,t.jsx)(n.strong,{children:"promesse est retourn\xe9e"})," \xe0 partir de ",(0,t.jsx)(n.code,{children:"test"}),", Jest attendra que la promesse soit r\xe9solue avant de laisser le test se terminer. Par exemple, supposons que ",(0,t.jsx)(n.code,{children:"fetchBeverageList()"})," renvoie une promesse qui est cens\xe9e r\xe9soudre une liste qui contient ",(0,t.jsx)(n.code,{children:"lemon"}),". Vous pouvez tester ceci avec\xa0:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test('contient du lemon', () => {\n  return fetchBeverageList().then(list => {\n    expect(list).toContain('lemon');\n  });\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:["M\xeame si l'appel \xe0 ",(0,t.jsx)(n.code,{children:"test"})," retournera imm\xe9diatement, le test n'est pas termin\xe9 tant que la promesse n'est pas r\xe9solue. Pour plus de d\xe9tails, consultez la page ",(0,t.jsx)(n.a,{href:"/fr/docs/29.5/asynchronous",children:"Tester le code asynchrone"}),"."]}),"\n",(0,t.jsx)(n.admonition,{title:"astuce",type:"tip",children:(0,t.jsxs)(n.p,{children:["Jest attendra \xe9galement si vous ",(0,t.jsx)(n.strong,{children:"fournissez un argument \xe0 la fonction de test"}),", g\xe9n\xe9ralement appel\xe9 ",(0,t.jsx)(n.code,{children:"done"}),". Cela pourrait \xeatre pratique lorsque vous voulez tester les ",(0,t.jsx)(n.a,{href:"/fr/docs/29.5/asynchronous#callbacks",children:"callbacks"}),"."]})}),"\n",(0,t.jsx)(n.h3,{id:"testconcurrentname-fn-timeout",children:(0,t.jsx)(n.code,{children:"test.concurrent(name, fn, timeout)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous l'alias\xa0: ",(0,t.jsx)(n.code,{children:"it.concurrent(name, fn, timeout)"})]}),"\n",(0,t.jsx)(n.admonition,{title:"attention",type:"caution",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"test.concurrent"})," is considered experimental - see ",(0,t.jsx)(n.a,{href:"https://github.com/jestjs/jest/labels/Area%3A%20Concurrent",children:"here"})," for details on missing features and other issues."]})}),"\n",(0,t.jsxs)(n.p,{children:["Utilisez ",(0,t.jsx)(n.code,{children:"test.concurrent"})," si vous voulez que le test s'ex\xe9cute de mani\xe8re simultan\xe9e."]}),"\n",(0,t.jsxs)(n.p,{children:["Le premier argument est le nom du test ; le deuxi\xe8me argument est une fonction asynchrone qui contient les attentes \xe0 tester. Le troisi\xe8me argument (facultatif) est ",(0,t.jsx)(n.code,{children:"timeout"})," (en millisecondes) pour sp\xe9cifier combien de temps il faut attendre avant d'abandonner. The default timeout is 5 seconds."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.concurrent('addition de 2 nombres', async () => {\n  expect(5 + 3).toBe(8);\n});\n\ntest.concurrent('soustraction de 2 nombres', async () => {\n  expect(5 - 3).toBe(2);\n});\n"})}),"\n",(0,t.jsx)(n.admonition,{title:"astuce",type:"tip",children:(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.a,{href:"Configuration.md/#maxconcurrency-number",children:(0,t.jsx)(n.code,{children:"maxConcurrency"})})," configuration option to prevent Jest from executing more than the specified amount of tests at the same time."]})}),"\n",(0,t.jsx)(n.h3,{id:"testconcurrenteachtablename-fn-timeout",children:(0,t.jsx)(n.code,{children:"test.concurrent.each(table)(name, fn, timeout)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous l'alias\xa0: ",(0,t.jsx)(n.code,{children:"it.concurrent.each(table)(name, fn, timeout)"})]}),"\n",(0,t.jsxs)(n.p,{children:["Utilisez ",(0,t.jsx)(n.code,{children:"test.concurrent.each"})," si vous continuez \xe0 dupliquer les m\xeames tests avec des donn\xe9es diff\xe9rentes. ",(0,t.jsx)(n.code,{children:"test.each"})," vous permet d'\xe9crire le test une fois et de passer des donn\xe9es, les tests sont tous ex\xe9cut\xe9s de mani\xe8re asynchrone."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"test.concurrent.each"})," est disponible avec deux API\xa0:"]}),"\n",(0,t.jsxs)(n.h4,{id:"1-testconcurrenteachtablename-fn-timeout",children:["1. ",(0,t.jsx)(n.code,{children:"test.concurrent.each(table)(name, fn, timeout)"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"table"})," : ",(0,t.jsx)(n.code,{children:"Array"})," de tableaux avec les arguments qui sont pass\xe9s dans le test ",(0,t.jsx)(n.code,{children:"fn"})," pour chaque ligne. If you pass in a 1D array of primitives, internally it will be mapped to a table i.e. ",(0,t.jsx)(n.code,{children:"[1, 2, 3] -> [[1], [2], [3]]"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),"\xa0: ",(0,t.jsx)(n.code,{children:"String"})," le titre du bloc de test.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["G\xe9n\xe9rez des titres de test uniques en injectant de mani\xe8re plac\xe9e des param\xe8tres avec le ",(0,t.jsxs)(n.a,{href:"https://nodejs.org/api/util.html#util_util_format_format_args",children:["formatage de ",(0,t.jsx)(n.code,{children:"printf"})]}),"\xa0:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%p"})," - ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/pretty-format",children:"pretty-format"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%s"}),"- Cha\xeene."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%d"}),"- Nombre."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%i"})," - Entier."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%f"})," - Valeur \xe0 virgule flottante."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%j"})," - JSON."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%o"})," - Objet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%#"})," - Index du cas de test."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%%"})," - signe de pourcentage simple ('%'). Cela ne sert pas d'argument."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fn"}),": ",(0,t.jsx)(n.code,{children:"Function"})," the test to be run, this is the function that will receive the parameters in each row as function arguments, ",(0,t.jsx)(n.strong,{children:"this will have to be an asynchronous function"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["En option, vous pouvez fournir un ",(0,t.jsx)(n.code,{children:"timeout"})," (en millisecondes) pour sp\xe9cifier combien de temps attendre pour chaque ligne avant d'abandonner. The default timeout is 5 seconds."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Exemple\xa0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.concurrent.each([\n  [1, 1, 2],\n  [1, 2, 3],\n  [2, 1, 3],\n])('.add(%i, %i)', async (a, b, expected) => {\n  expect(a + b).toBe(expected);\n});\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"2-testconcurrenteachtablename-fn-timeout",children:["2. ",(0,t.jsx)(n.code,{children:"test.concurrent.each`table`(name, fn, timeout)"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"table"}),": ",(0,t.jsx)(n.code,{children:"Litt\xe9ral de template \xe9tiquet\xe9"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["La premi\xe8re ligne contient l'ent\xeates des colonnes avec les noms de variables s\xe9par\xe9s par ",(0,t.jsx)(n.code,{children:"|"})]}),"\n",(0,t.jsxs)(n.li,{children:["Une ou plusieurs lignes de donn\xe9es successives sont fournies sous forme d'expressions litt\xe9rales de template utilisant la syntaxe ",(0,t.jsx)(n.code,{children:"${value}"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),"\xa0: ",(0,t.jsx)(n.code,{children:"String"})," le titre du test, utilisez ",(0,t.jsx)(n.code,{children:"$variable"})," pour injecter des donn\xe9es de test dans le titre \xe0 partir des expressions de template \xe9tiquet\xe9es.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Pour injecter des valeurs d'objets imbriqu\xe9s, vous pouvez fournir un keyPath, c'est-\xe0-dire ",(0,t.jsx)(n.code,{children:"$variable.path.to.value"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fn"}),": ",(0,t.jsx)(n.code,{children:"Function"})," the test to be run, this is the function that will receive the test data object, ",(0,t.jsx)(n.strong,{children:"this will have to be an asynchronous function"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["En option, vous pouvez fournir un ",(0,t.jsx)(n.code,{children:"timeout"})," (en millisecondes) pour sp\xe9cifier combien de temps attendre pour chaque ligne avant d'abandonner. The default timeout is 5 seconds."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Exemple\xa0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.concurrent.each`\n  a    | b    | expected\n  ${1} | ${1} | ${2}\n  ${1} | ${2} | ${3}\n  ${2} | ${1} | ${3}\n`('returns $expected when $a is added to $b', async ({a, b, expected}) => {\n  expect(a + b).toBe(expected);\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testconcurrentonlyeachtablename-fn",children:(0,t.jsx)(n.code,{children:"test.concurrent.only.each(table)(name, fn)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous l'alias\xa0: ",(0,t.jsx)(n.code,{children:"it.concurrent.only.each(table)(name, fn)"})]}),"\n",(0,t.jsxs)(n.p,{children:["Utilisez ",(0,t.jsx)(n.code,{children:"test.concurrent.only.each"})," si vous souhaitez uniquement ex\xe9cuter simultan\xe9ment des tests sp\xe9cifiques avec des donn\xe9es de test diff\xe9rentes."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"test.concurrent.only.each"})," est disponible avec deux API\xa0:"]}),"\n",(0,t.jsx)(n.h4,{id:"testconcurrentonlyeachtablename-fn-1",children:(0,t.jsx)(n.code,{children:"test.concurrent.only.each(table)(name, fn)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.concurrent.only.each([\n  [1, 1, 2],\n  [1, 2, 3],\n  [2, 1, 3],\n])('.add(%i, %i)', async (a, b, expected) => {\n  expect(a + b).toBe(expected);\n});\n\ntest('will not be run', () => {\n  expect(1 / 0).toBe(Infinity);\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"testonlyeachtablename-fn",children:(0,t.jsx)(n.code,{children:"test.only.each`table`(name, fn)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.concurrent.only.each`\n  a    | b    | expected\n  ${1} | ${1} | ${2}\n  ${1} | ${2} | ${3}\n  ${2} | ${1} | ${3}\n`('returns $expected when $a is added to $b', async ({a, b, expected}) => {\n  expect(a + b).toBe(expected);\n});\n\ntest('will not be run', () => {\n  expect(1 / 0).toBe(Infinity);\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testconcurrentskipeachtablename-fn",children:(0,t.jsx)(n.code,{children:"test.concurrent.skip.each(table)(name, fn)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous l'alias\xa0: ",(0,t.jsx)(n.code,{children:"it.concurrent.skip.each(table)(name, fn)"})]}),"\n",(0,t.jsxs)(n.p,{children:["Utilisez ",(0,t.jsx)(n.code,{children:"test.concurrent.skip.each"})," si vous voulez arr\xeater l'ex\xe9cution d'une collection de tests asynchrones pilot\xe9s par les donn\xe9es."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"test.concurrent.skip.chaque"})," est disponible avec deux API\xa0:"]}),"\n",(0,t.jsx)(n.h4,{id:"testconcurrentskipeachtablename-fn-1",children:(0,t.jsx)(n.code,{children:"test.concurrent.skip.each(table)(name, fn)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.concurrent.skip.each([\n  [1, 1, 2],\n  [1, 2, 3],\n  [2, 1, 3],\n])('.add(%i, %i)', async (a, b, expected) => {\n  expect(a + b).toBe(expected); // will not be run\n});\n\ntest('will be run', () => {\n  expect(1 / 0).toBe(Infinity);\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"testconcurrentskipeachtablename-fn-2",children:(0,t.jsx)(n.code,{children:"test.concurrent.skip.each`table`(name, fn)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.concurrent.skip.each`\n  a    | b    | expected\n  ${1} | ${1} | ${2}\n  ${1} | ${2} | ${3}\n  ${2} | ${1} | ${3}\n`('returns $expected when $a is added to $b', async ({a, b, expected}) => {\n  expect(a + b).toBe(expected); // will not be run\n});\n\ntest('will be run', () => {\n  expect(1 / 0).toBe(Infinity);\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testeachtablename-fn-timeout",children:(0,t.jsx)(n.code,{children:"test.each(table)(name, fn, timeout)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous les alias\xa0: ",(0,t.jsx)(n.code,{children:"it.each(table)(name, fn)"})," et ",(0,t.jsx)(n.code,{children:"it.each`table`(name, fn)"})]}),"\n",(0,t.jsxs)(n.p,{children:["Utilisez ",(0,t.jsx)(n.code,{children:"test.each"})," si vous continuez \xe0 dupliquer les m\xeames tests avec des donn\xe9es diff\xe9rentes. ",(0,t.jsx)(n.code,{children:"test.each"})," permet d'\xe9crire le test une fois et de lui passer les donn\xe9es."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"test.each"})," est disponible avec deux API\xa0:"]}),"\n",(0,t.jsxs)(n.h4,{id:"1-testeachtablename-fn-timeout",children:["1. ",(0,t.jsx)(n.code,{children:"test.each(table)(name, fn, timeout)"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"table"})," : ",(0,t.jsx)(n.code,{children:"Array"})," de tableaux avec les arguments qui sont pass\xe9s dans le test ",(0,t.jsx)(n.code,{children:"fn"})," pour chaque ligne. If you pass in a 1D array of primitives, internally it will be mapped to a table i.e. ",(0,t.jsx)(n.code,{children:"[1, 2, 3] -> [[1], [2], [3]]"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),"\xa0: ",(0,t.jsx)(n.code,{children:"String"})," le titre du bloc de test.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["G\xe9n\xe9rez des titres de test uniques en injectant de mani\xe8re plac\xe9e des param\xe8tres avec le ",(0,t.jsxs)(n.a,{href:"https://nodejs.org/api/util.html#util_util_format_format_args",children:["formatage de ",(0,t.jsx)(n.code,{children:"printf"})]}),"\xa0:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%p"})," - ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/pretty-format",children:"pretty-format"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%s"}),"- Cha\xeene."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%d"}),"- Nombre."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%i"})," - Entier."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%f"})," - Valeur \xe0 virgule flottante."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%j"})," - JSON."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%o"})," - Objet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%#"})," - Index du cas de test."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%%"})," - signe de pourcentage simple ('%'). Cela ne sert pas d'argument."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Ou g\xe9n\xe9rez des titres de test uniques en injectant les propri\xe9t\xe9s de l'objet du cas de test avec ",(0,t.jsx)(n.code,{children:"$variable"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Pour injecter des valeurs d'objets imbriqu\xe9s, vous pouvez fournir un keyPath, c'est-\xe0-dire ",(0,t.jsx)(n.code,{children:"$variable.path.to.value"})]}),"\n",(0,t.jsxs)(n.li,{children:["Vous pouvez utiliser ",(0,t.jsx)(n.code,{children:"$#"})," pour injecter l'index du cas de test"]}),"\n",(0,t.jsxs)(n.li,{children:["Vous ne pouvez pas utiliser ",(0,t.jsx)(n.code,{children:"$variable"})," avec le formatage ",(0,t.jsx)(n.code,{children:"printf"})," sauf pour ",(0,t.jsx)(n.code,{children:"%%"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fn"}),": ",(0,t.jsx)(n.code,{children:"Function"})," the test to be run, this is the function that will receive the parameters in each row as function arguments."]}),"\n",(0,t.jsxs)(n.li,{children:["En option, vous pouvez fournir un ",(0,t.jsx)(n.code,{children:"timeout"})," (en millisecondes) pour sp\xe9cifier combien de temps attendre pour chaque ligne avant d'abandonner. The default timeout is 5 seconds."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Exemple\xa0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.each([\n  [1, 1, 2],\n  [1, 2, 3],\n  [2, 1, 3],\n])('.add(%i, %i)', (a, b, expected) => {\n  expect(a + b).toBe(expected);\n});\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.each([\n  {a: 1, b: 1, expected: 2},\n  {a: 1, b: 2, expected: 3},\n  {a: 2, b: 1, expected: 3},\n])('.add($a, $b)', ({a, b, expected}) => {\n  expect(a + b).toBe(expected);\n});\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"2-testeachtablename-fn-timeout",children:["2. ",(0,t.jsx)(n.code,{children:"test.each`table`(name, fn, timeout)"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"table"}),": ",(0,t.jsx)(n.code,{children:"Litt\xe9ral de template \xe9tiquet\xe9"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["La premi\xe8re ligne contient l'ent\xeates des colonnes avec les noms de variables s\xe9par\xe9s par ",(0,t.jsx)(n.code,{children:"|"})]}),"\n",(0,t.jsxs)(n.li,{children:["Une ou plusieurs lignes de donn\xe9es successives sont fournies sous forme d'expressions litt\xe9rales de template utilisant la syntaxe ",(0,t.jsx)(n.code,{children:"${value}"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),"\xa0: ",(0,t.jsx)(n.code,{children:"String"})," le titre du test, utilisez ",(0,t.jsx)(n.code,{children:"$variable"})," pour injecter des donn\xe9es de test dans le titre \xe0 partir des expressions de template \xe9tiquet\xe9es.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Pour injecter des valeurs d'objets imbriqu\xe9s, vous pouvez fournir un keyPath, c'est-\xe0-dire ",(0,t.jsx)(n.code,{children:"$variable.path.to.value"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fn"}),": ",(0,t.jsx)(n.code,{children:"Function"})," the test to be run, this is the function that will receive the test data object."]}),"\n",(0,t.jsxs)(n.li,{children:["En option, vous pouvez fournir un ",(0,t.jsx)(n.code,{children:"timeout"})," (en millisecondes) pour sp\xe9cifier combien de temps attendre pour chaque ligne avant d'abandonner. The default timeout is 5 seconds."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Exemple\xa0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.each`\n  a    | b    | expected\n  ${1} | ${1} | ${2}\n  ${1} | ${2} | ${3}\n  ${2} | ${1} | ${3}\n`('returns $expected when $a is added to $b', ({a, b, expected}) => {\n  expect(a + b).toBe(expected);\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testfailingname-fn-timeout",children:(0,t.jsx)(n.code,{children:"test.failing(name, fn, timeout)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous l'alias\xa0: ",(0,t.jsx)(n.code,{children:"it.failing(name, fn, timeout)"})]}),"\n",(0,t.jsx)(n.admonition,{title:"remarque",type:"note",children:(0,t.jsxs)(n.p,{children:["This is only available with the default ",(0,t.jsx)(n.a,{href:"https://github.com/jestjs/jest/tree/main/packages/jest-circus",children:"jest-circus"})," runner."]})}),"\n",(0,t.jsxs)(n.p,{children:["Utilisez ",(0,t.jsx)(n.code,{children:"test.fail"})," lorsque vous \xe9crivez un test et que vous attendez qu'il \xe9choue. Ces tests se comporteront de la m\xeame mani\xe8re que les tests normaux. Si le test ",(0,t.jsx)(n.code,{children:"failing"})," l\xe8ve n'importe quelle erreur, il passe. S'il n'en l\xe8ve pas, il \xe9chouera."]}),"\n",(0,t.jsxs)(n.admonition,{title:"astuce",type:"tip",children:[(0,t.jsxs)(n.p,{children:["You can use this type of test i.e. when writing code in a BDD way. Dans ce cas, les tests n'appara\xeetront pas comme ayant \xe9chou\xe9 tant qu'ils n'auront pas r\xe9ussi. Ensuite, vous pouvez simplement supprimer le modificateur ",(0,t.jsx)(n.code,{children:"failling"})," pour les faire passer."]}),(0,t.jsx)(n.p,{children:"Cela peut aussi \xeatre un bon moyen de contribuer \xe0 un projet par des tests d\xe9faillants, m\xeame si vous ne savez pas comment corriger le bogue."})]}),"\n",(0,t.jsx)(n.p,{children:"Exemple\xa0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.failing('il n\\'est pas \xe9gal', () => {\n  expect(5).toBe(6); // ce test passera\n});\n\ntest.failing('il est \xe9gal', () => {\n  expect(10).toBe(10); // ce test \xe9chouera\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testfailingeachname-fn-timeout",children:(0,t.jsx)(n.code,{children:"test.failing.each(name, fn, timeout)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous les alias\xa0: ",(0,t.jsx)(n.code,{children:"it.failing.each(table)(name, fn)"})," et ",(0,t.jsx)(n.code,{children:"it.failing.each`table`(name, fn)"})]}),"\n",(0,t.jsx)(n.admonition,{title:"remarque",type:"note",children:(0,t.jsxs)(n.p,{children:["This is only available with the default ",(0,t.jsx)(n.a,{href:"https://github.com/jestjs/jest/tree/main/packages/jest-circus",children:"jest-circus"})," runner."]})}),"\n",(0,t.jsxs)(n.p,{children:["Vous pouvez \xe9galement ex\xe9cuter plusieurs tests \xe0 la fois en ajoutant ",(0,t.jsx)(n.code,{children:"each"})," apr\xe8s ",(0,t.jsx)(n.code,{children:"failing"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Exemple\xa0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.failing.each([\n  {a: 1, b: 1, expected: 2},\n  {a: 1, b: 2, expected: 3},\n  {a: 2, b: 1, expected: 3},\n])('.add($a, $b)', ({a, b, expected}) => {\n  expect(a + b).toBe(expected);\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testonlyfailingname-fn-timeout",children:(0,t.jsx)(n.code,{children:"test.only.failing(name, fn, timeout)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous les alias\xa0: ",(0,t.jsx)(n.code,{children:"it.only.failing(name, fn, timeout)"}),", ",(0,t.jsx)(n.code,{children:"fit.failing(name, fn, timeout)"})]}),"\n",(0,t.jsx)(n.admonition,{title:"remarque",type:"note",children:(0,t.jsxs)(n.p,{children:["This is only available with the default ",(0,t.jsx)(n.a,{href:"https://github.com/jestjs/jest/tree/main/packages/jest-circus",children:"jest-circus"})," runner."]})}),"\n",(0,t.jsxs)(n.p,{children:["Utilisez ",(0,t.jsx)(n.code,{children:"test.only.failed"})," si vous voulez seulement ex\xe9cuter un test sp\xe9cifique d\xe9faillant."]}),"\n",(0,t.jsx)(n.h3,{id:"testskipfailingname-fn-timeout",children:(0,t.jsx)(n.code,{children:"test.skip.failing(name, fn, timeout)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous les alias\xa0: ",(0,t.jsx)(n.code,{children:"it.skip.failing(name, fn, timeout)"}),", ",(0,t.jsx)(n.code,{children:"xit.failing(name, fn, timeout)"}),", ",(0,t.jsx)(n.code,{children:"xtest.failing(name, fn, timeout)"})]}),"\n",(0,t.jsx)(n.admonition,{title:"remarque",type:"note",children:(0,t.jsxs)(n.p,{children:["This is only available with the default ",(0,t.jsx)(n.a,{href:"https://github.com/jestjs/jest/tree/main/packages/jest-circus",children:"jest-circus"})," runner."]})}),"\n",(0,t.jsxs)(n.p,{children:["Utilisez ",(0,t.jsx)(n.code,{children:"test.skip.failed"})," si vous voulez seulement ignorer un test sp\xe9cifique d\xe9faillant."]}),"\n",(0,t.jsx)(n.h3,{id:"testonlyname-fn-timeout",children:(0,t.jsx)(n.code,{children:"test.only(name, fn, timeout)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous les alias\xa0: ",(0,t.jsx)(n.code,{children:"it.only(name, fn, timeout)"}),", and ",(0,t.jsx)(n.code,{children:"fit(name, fn, timeout)"})]}),"\n",(0,t.jsxs)(n.p,{children:["Lorsque vous d\xe9boguez un grand fichier de test, vous ne souhaitez souvent ex\xe9cuter qu'un sous-ensemble de tests. Vous pouvez utiliser ",(0,t.jsx)(n.code,{children:".only"})," pour sp\xe9cifier les tests qui sont les seuls que vous voulez ex\xe9cuter dans ce fichier de test."]}),"\n",(0,t.jsxs)(n.p,{children:["En option, vous pouvez fournir un ",(0,t.jsx)(n.code,{children:"timeout"})," (en millisecondes) pour sp\xe9cifier le temps d'attente avant l'abandon. The default timeout is 5 seconds."]}),"\n",(0,t.jsx)(n.p,{children:"Par exemple, supposons que vous ayez ces tests\xa0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.only('il pleut', () => {\n  expect(inchesOfRain()).toBeGreaterThan(0);\n});\n\ntest('Il ne neige pas', () => {\n  expect(inchesOfSnow()).toBe(0);\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:['Seul le test "il pleut" sera ex\xe9cut\xe9 dans ce fichier de test, puisqu\'il est ex\xe9cut\xe9 avec ',(0,t.jsx)(n.code,{children:"test.only"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Habituellement, vous ne v\xe9rifiez pas le code utilisant ",(0,t.jsx)(n.code,{children:"test.only"})," dans le contr\xf4le de la source - vous l'utilisez pour le d\xe9bogage, et le supprimez une fois que vous avez corrig\xe9 les tests d\xe9fectueux."]}),"\n",(0,t.jsx)(n.h3,{id:"testonlyeachtablename-fn-1",children:(0,t.jsx)(n.code,{children:"test.only.each(table)(name, fn)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous les alias\xa0: ",(0,t.jsx)(n.code,{children:"it.only.each(table)(name, fn)"}),", ",(0,t.jsx)(n.code,{children:"fit.each(table)(name, fn)"}),", ",(0,t.jsx)(n.code,{children:"it.only.each`table`(name, fn)"})," and ",(0,t.jsx)(n.code,{children:"fit.each`table`(name, fn)"})]}),"\n",(0,t.jsxs)(n.p,{children:["Utilisez ",(0,t.jsx)(n.code,{children:"test.only.each"})," si vous souhaitez uniquement ex\xe9cuter des tests sp\xe9cifiques avec des donn\xe9es de test diff\xe9rentes."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"test.only.each"})," est disponible avec deux API\xa0:"]}),"\n",(0,t.jsx)(n.h4,{id:"testonlyeachtablename-fn-2",children:(0,t.jsx)(n.code,{children:"test.only.each(table)(name, fn)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.only.each([\n  [1, 1, 2],\n  [1, 2, 3],\n  [2, 1, 3],\n])('.add(%i, %i)', (a, b, expected) => {\n  expect(a + b).toBe(expected);\n});\n\ntest('will not be run', () => {\n  expect(1 / 0).toBe(Infinity);\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"testonlyeachtablename-fn-3",children:(0,t.jsx)(n.code,{children:"test.only.each`table`(name, fn)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.only.each`\n  a    | b    | expected\n  ${1} | ${1} | ${2}\n  ${1} | ${2} | ${3}\n  ${2} | ${1} | ${3}\n`('returns $expected when $a is added to $b', ({a, b, expected}) => {\n  expect(a + b).toBe(expected);\n});\n\ntest('will not be run', () => {\n  expect(1 / 0).toBe(Infinity);\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testskipname-fn",children:(0,t.jsx)(n.code,{children:"test.skip(name, fn)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous les alias\xa0: ",(0,t.jsx)(n.code,{children:"it.skip(name, fn)"}),", ",(0,t.jsx)(n.code,{children:"xit(name, fn)"}),", and ",(0,t.jsx)(n.code,{children:"xtest(name, fn)"})]}),"\n",(0,t.jsxs)(n.p,{children:["Lorsque vous maintenez une large base de code, vous pouvez parfois trouver un test qui est temporairement d\xe9fectueux pour une raison quelconque. Si vous voulez \xe9viter d'ex\xe9cuter ce test, mais que vous ne voulez pas supprimer ce code, vous pouvez utiliser ",(0,t.jsx)(n.code,{children:"test.skip"})," pour sp\xe9cifier certains tests \xe0 ignorer."]}),"\n",(0,t.jsx)(n.p,{children:"Par exemple, supposons que vous ayez ces tests\xa0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test('il pleut', () => {\n  expect(inchesOfRain()).toBeGreaterThan(0);\n});\n\ntest.skip('il ne neige pas', () => {\n  expect(inchesOfSnow()).toBe(0);\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:['Seul le test "il pleut" sera ex\xe9cut\xe9, puisque l\'autre test est ex\xe9cut\xe9 avec ',(0,t.jsx)(n.code,{children:"test.skip"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Vous pouvez commenter le test, mais il est souvent un peu plus agr\xe9able d'utiliser ",(0,t.jsx)(n.code,{children:"test.skip"})," car il maintiendra l'indentation et la coloration syntaxique."]}),"\n",(0,t.jsx)(n.h3,{id:"testskipeachtablename-fn",children:(0,t.jsx)(n.code,{children:"test.skip.each(table)(name, fn)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous les alias\xa0: ",(0,t.jsx)(n.code,{children:"it.skip.each(table)(name, fn)"}),", ",(0,t.jsx)(n.code,{children:"xit.each(table)(name, fn)"}),", ",(0,t.jsx)(n.code,{children:"xtest.each(table)(name, fn)"}),", ",(0,t.jsx)(n.code,{children:"it.skip.each`table`(name, fn)"}),", ",(0,t.jsx)(n.code,{children:"xit.each`table`(name, fn)"})," and ",(0,t.jsx)(n.code,{children:"xtest.each`table`(name, fn)"})]}),"\n",(0,t.jsxs)(n.p,{children:["Utilisez ",(0,t.jsx)(n.code,{children:"test.skip.each"})," si vous voulez arr\xeater d'ex\xe9cuter une collection de tests pilot\xe9s par les donn\xe9es."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"test.skip.chaque"})," est disponible avec deux API\xa0:"]}),"\n",(0,t.jsx)(n.h4,{id:"testskipeachtablename-fn-1",children:(0,t.jsx)(n.code,{children:"test.skip.each(table)(name, fn)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.skip.each([\n  [1, 1, 2],\n  [1, 2, 3],\n  [2, 1, 3],\n])('.add(%i, %i)', (a, b, expected) => {\n  expect(a + b).toBe(expected); // will not be run\n});\n\ntest('will be run', () => {\n  expect(1 / 0).toBe(Infinity);\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"testskipeachtablename-fn-2",children:(0,t.jsx)(n.code,{children:"test.skip.each`table`(name, fn)"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"test.skip.each`\n  a    | b    | expected\n  ${1} | ${1} | ${2}\n  ${1} | ${2} | ${3}\n  ${2} | ${1} | ${3}\n`('returns $expected when $a is added to $b', ({a, b, expected}) => {\n  expect(a + b).toBe(expected); // will not be run\n});\n\ntest('will be run', () => {\n  expect(1 / 0).toBe(Infinity);\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testtodoname",children:(0,t.jsx)(n.code,{children:"test.todo(name)"})}),"\n",(0,t.jsxs)(n.p,{children:["Aussi sous l'alias\xa0: ",(0,t.jsx)(n.code,{children:"it.todo(name)"})]}),"\n",(0,t.jsxs)(n.p,{children:["Utilisez ",(0,t.jsx)(n.code,{children:"test.todo"})," lorsque vous pr\xe9voyez d'\xe9crire des tests. Ces tests seront mis en \xe9vidence dans le r\xe9sum\xe9 de la sortie \xe0 la fin, afin que vous sachiez combien de tests il vous reste \xe0 faire."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"const add = (a, b) => a + b;\n\ntest.todo('add doit \xeatre associatif');\n"})}),"\n",(0,t.jsx)(n.admonition,{title:"astuce",type:"tip",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"test.todo"})," will throw an error if you pass it a test callback function. Use ",(0,t.jsx)(n.a,{href:"#testskipname-fn",children:(0,t.jsx)(n.code,{children:"test.skip"})})," instead, if you already implemented the test, but do not want it to run."]})}),"\n",(0,t.jsx)(n.h2,{id:"typescript-usage",children:"TypeScript Usage"}),"\n",(0,t.jsx)(c.ZP,{}),"\n",(0,t.jsx)(n.h3,{id:"each",children:(0,t.jsx)(n.code,{children:".each"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:".each"})," modifier offers few different ways to define a table of the test cases. Some of the APIs have caveats related with the type inference of the arguments which are passed to ",(0,t.jsx)(n.code,{children:"describe"})," or ",(0,t.jsx)(n.code,{children:"test"})," callback functions. Let's take a look at each of them."]}),"\n",(0,t.jsx)(n.admonition,{title:"remarque",type:"note",children:(0,t.jsxs)(n.p,{children:["For simplicity ",(0,t.jsx)(n.code,{children:"test.each"})," is picked for the examples, but the type inference is identical in all cases where ",(0,t.jsx)(n.code,{children:".each"})," modifier can be used: ",(0,t.jsx)(n.code,{children:"describe.each"}),", ",(0,t.jsx)(n.code,{children:"test.concurrent.only.each"}),", ",(0,t.jsx)(n.code,{children:"test.skip.each"}),", etc."]})}),"\n",(0,t.jsx)(n.h4,{id:"tableau-dobjets",children:"Tableau d'objets"}),"\n",(0,t.jsxs)(n.p,{children:["The array of objects API is most verbose, but it makes the type inference a painless task. A ",(0,t.jsx)(n.code,{children:"table"})," can be inlined:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import {test} from '@jest/globals';\n\ntest.each([\n  {name: 'a', path: 'path/to/a', count: 1, write: true},\n  {name: 'b', path: 'path/to/b', count: 3},\n])('inline table', ({name, path, count, write}) => {\n  // arguments are typed as expected, e.g. `write: boolean | undefined`\n});\n"})}),"\n",(0,t.jsx)(n.p,{children:"Or declared separately as a variable:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import {test} from '@jest/globals';\n\nconst table = [\n  {a: 1, b: 2, expected: 'three', extra: true},\n  {a: 3, b: 4, expected: 'seven', extra: false},\n  {a: 5, b: 6, expected: 'eleven'},\n];\n\ntest.each(table)('table as a variable', ({a, b, expected, extra}) => {\n  // again everything is typed as expected, e.g. `extra: boolean | undefined`\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"tableau-de-tableaux",children:"Tableau de tableaux"}),"\n",(0,t.jsx)(n.p,{children:"The array of arrays style will work smoothly with inlined tables:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import {test} from '@jest/globals';\n\ntest.each([\n  [1, 2, 'three', true],\n  [3, 4, 'seven', false],\n  [5, 6, 'eleven'],\n])('inline table example', (a, b, expected, extra) => {\n  // arguments are typed as expected, e.g. `extra: boolean | undefined`\n});\n"})}),"\n",(0,t.jsx)(n.p,{children:"However, if a table is declared as a separate variable, it must be typed as an array of tuples for correct type inference (this is not needed only if all elements of a row are of the same type):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import {test} from '@jest/globals';\n\nconst table: Array<[number, number, string, boolean?]> = [\n  [1, 2, 'three', true],\n  [3, 4, 'seven', false],\n  [5, 6, 'eleven'],\n];\n\ntest.each(table)('table as a variable example', (a, b, expected, extra) => {\n  // without the annotation types are incorrect, e.g. `a: number | string | boolean`\n});\n"})}),"\n",(0,t.jsx)(n.h4,{id:"litt\xe9ral-de-gabarit",children:"Litt\xe9ral de gabarit"}),"\n",(0,t.jsx)(n.p,{children:"If all values are of the same type, the template literal API will type the arguments correctly:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import {test} from '@jest/globals';\n\ntest.each`\n  a    | b    | expected\n  ${1} | ${2} | ${3}\n  ${3} | ${4} | ${7}\n  ${5} | ${6} | ${11}\n`('template literal example', ({a, b, expected}) => {\n  // all arguments are of type `number`\n});\n"})}),"\n",(0,t.jsx)(n.p,{children:"Otherwise it will require a generic type argument:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import {test} from '@jest/globals';\n\ntest.each<{a: number; b: number; expected: string; extra?: boolean}>`\n  a    | b    | expected    | extra\n  ${1} | ${2} | ${'three'}  | ${true}\n  ${3} | ${4} | ${'seven'}  | ${false}\n  ${5} | ${6} | ${'eleven'}\n`('template literal example', ({a, b, expected, extra}) => {\n  // without the generic argument in this case types would default to `unknown`\n});\n"})})]})}const x=function(e={}){const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(h,e)})):h(e)}},7860:(e,n,s)=>{s.d(n,{ZP:()=>a});var t=s(4246),i=s(1670);function c(e){const n=Object.assign({admonition:"admonition",p:"p",pre:"pre",code:"code",a:"a"},(0,i.ah)(),e.components);return(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"Les exemples TypeScript de cette page ne fonctionneront comme document\xe9 que si vous importez explicitement les API Jest\xa0:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import {expect, jest, test} from '@jest/globals';\n"})}),(0,t.jsxs)(n.p,{children:["Veuillez consulter le guide ",(0,t.jsx)(n.a,{href:"/fr/docs/29.5/getting-started#using-typescript",children:"Premiers pas"})," pour plus de d\xe9tails sur la fa\xe7on de configurer Jest avec TypeScript."]})]})}const a=function(e={}){const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(c,e)})):c(e)}},1670:(e,n,s)=>{s.d(n,{Zo:()=>l,ah:()=>c});var t=s(7378);const i=t.createContext({});function c(e){const n=t.useContext(i);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const a={};function l({components:e,children:n,disableParentContext:s}){let l;return l=s?"function"==typeof e?e({}):e||a:c(e),t.createElement(i.Provider,{value:l},n)}}}]);