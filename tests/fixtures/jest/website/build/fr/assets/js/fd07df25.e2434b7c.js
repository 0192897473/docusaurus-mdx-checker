"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[8910],{1391:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var s=r(4246),o=r(1670);const t={id:"code-transformation",title:"Transformation de code"},i=void 0,a={unversionedId:"code-transformation",id:"code-transformation",title:"Transformation de code",description:"Jest ex\xe9cute le code de votre projet en tant que JavaScript, mais si vous utilisez une syntaxe qui n'est pas prise en charge par Node (comme JSX, TypeScript, les templates Vue), vous devrez transformer ce code en JavaScript ordinaire, comme vous le feriez lors de la cr\xe9ation pour les navigateurs.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/CodeTransformation.md",sourceDirName:".",slug:"/code-transformation",permalink:"/fr/docs/next/code-transformation",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/jest-v2/fr",tags:[],version:"current",frontMatter:{id:"code-transformation",title:"Transformation de code"},sidebar:"api",previous:{title:"Variables d'environnement",permalink:"/fr/docs/next/environment-variables"}},c={},d=[{value:"Defaults",id:"defaults",level:2},{value:"\xc9criture de transformateurs personnalis\xe9s",id:"\xe9criture-de-transformateurs-personnalis\xe9s",level:2},{value:"Exemples",id:"exemples",level:3},{value:"TypeScript avec v\xe9rification de type",id:"typescript-avec-v\xe9rification-de-type",level:3},{value:"Transformation des images vers leur chemin",id:"transformation-des-images-vers-leur-chemin",level:4}];function l(e){const n=Object.assign({p:"p",a:"a",code:"code",h2:"h2",admonition:"admonition",pre:"pre",em:"em",h3:"h3",h4:"h4"},(0,o.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Jest ex\xe9cute le code de votre projet en tant que JavaScript, mais si vous utilisez une syntaxe qui n'est pas prise en charge par Node (comme JSX, TypeScript, les templates Vue), vous devrez transformer ce code en JavaScript ordinaire, comme vous le feriez lors de la cr\xe9ation pour les navigateurs."}),"\n",(0,s.jsxs)(n.p,{children:["Jest prend en charge ceci via l'option de configuration ",(0,s.jsx)(n.a,{href:"/fr/docs/next/configuration#transform-objectstring-pathtotransformer--pathtotransformer-object",children:(0,s.jsx)(n.code,{children:"transform"})}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Un transformateur est un module qui fournit une m\xe9thode pour transformer les fichiers source. Par exemple, si vous souhaitez pouvoir utiliser une nouvelle fonctionnalit\xe9 du langage dans vos modules ou tests qui n'est pas encore prise en charge par Node, vous pourriez int\xe9grer un pr\xe9processeur de code qui transposerait une future version de JavaScript dans une version actuelle."}),"\n",(0,s.jsx)(n.p,{children:"Jest mettra en cache le r\xe9sultat d'une transformation et tentera d'invalider ce r\xe9sultat en fonction d'un certain nombre de facteurs, comme la source du fichier transform\xe9 et la modification de la configuration."}),"\n",(0,s.jsx)(n.h2,{id:"defaults",children:"Defaults"}),"\n",(0,s.jsxs)(n.p,{children:["Jest ships with one transformer out of the box \u2013 ",(0,s.jsx)(n.a,{href:"https://github.com/jestjs/jest/tree/main/packages/babel-jest#setup",children:(0,s.jsx)(n.code,{children:"babel-jest"})}),". Il chargera la configuration Babel de votre projet et transformera tout fichier correspondant \xe0 la RegExp suivante ",(0,s.jsx)(n.code,{children:"/\\.[jt]sx?$/"})," (signifiant tout fichier ",(0,s.jsx)(n.code,{children:".js"}),", ",(0,s.jsx)(n.code,{children:".jsx"}),", ",(0,s.jsx)(n.code,{children:".ts"})," ou ",(0,s.jsx)(n.code,{children:".tsx"}),"). En outre, ",(0,s.jsx)(n.code,{children:"babel-jest"})," injectera le plugin Babel n\xe9cessaire pour le montage de simulation dont on parle dans ",(0,s.jsx)(n.a,{href:"/fr/docs/next/manual-mocks#using-with-es-module-imports",children:"Simulation module ES"}),"."]}),"\n",(0,s.jsxs)(n.admonition,{title:"astuce",type:"tip",children:[(0,s.jsxs)(n.p,{children:["N'oubliez pas d'inclure explicitement le transformateur par d\xe9faut ",(0,s.jsx)(n.code,{children:"babel-jest"}),", si vous souhaitez l'utiliser en parall\xe8le avec des pr\xe9processeurs de code suppl\xe9mentaires\xa0:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"transform": {\n  "\\\\.[jt]sx?$": "babel-jest",\n  "\\\\.css$": "some-css-transformer",\n}\n'})})]}),"\n",(0,s.jsx)(n.h2,{id:"\xe9criture-de-transformateurs-personnalis\xe9s",children:"\xc9criture de transformateurs personnalis\xe9s"}),"\n",(0,s.jsx)(n.p,{children:"Vous pouvez \xe9crire votre propre transformateur. L'API d'un transformateur est la suivante\xa0:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface TransformOptions<TransformerConfig = unknown> {\n  supportsDynamicImport: boolean;\n  supportsExportNamespaceFrom: boolean;\n  /**\n   * The value is:\n   * - `false` if Jest runs without Node ESM flag `--experimental-vm-modules`\n   * - `true` if the file extension is defined in [extensionsToTreatAsEsm](Configuration.md#extensionstotreatasesm-arraystring)\n   * and Jest runs with Node ESM flag `--experimental-vm-modules`\n   *\n   * See more at https://jestjs.io/docs/next/ecmascript-modules\n   */\n  supportsStaticESM: boolean;\n  supportsTopLevelAwait: boolean;\n  instrument: boolean;\n  /** Cached file system which is used by `jest-runtime` to improve performance. */\n  cacheFS: Map<string, string>;\n  /** Configuration de Jest du projet en cours d'ex\xe9cution. */\n  config: ProjectConfig;\n  /** Version stringifi\xe9e de `config` - utile pour la suppression du cache. */\n  configString: string;\n  /** Configuration du transformateur pass\xe9e par l'utilisateur via l'option `transform`. */\n  transformerConfig: TransformerConfig;\n}\n\ntype TransformedSource = {\n  code: string;\n  map?: RawSourceMap | string | null;\n};\n\ninterface SyncTransformer<TransformerConfig = unknown> {\n  canInstrument?: boolean;\n\n  getCacheKey?: (\n    sourceText: string,\n    sourcePath: string,\n    options: TransformOptions<TransformerConfig>,\n  ) => string;\n\n  getCacheKeyAsync?: (\n    sourceText: string,\n    sourcePath: string,\n    options: TransformOptions<TransformerConfig>,\n  ) => Promise<string>;\n\n  process: (\n    sourceText: string,\n    sourcePath: string,\n    options: TransformOptions<TransformerConfig>,\n  ) => TransformedSource;\n\n  processAsync?: (\n    sourceText: string,\n    sourcePath: string,\n    options: TransformOptions<TransformerConfig>,\n  ) => Promise<TransformedSource>;\n}\n\ninterface AsyncTransformer<TransformerConfig = unknown> {\n  canInstrument?: boolean;\n\n  getCacheKey?: (\n    sourceText: string,\n    sourcePath: string,\n    options: TransformOptions<TransformerConfig>,\n  ) => string;\n\n  getCacheKeyAsync?: (\n    sourceText: string,\n    sourcePath: string,\n    options: TransformOptions<TransformerConfig>,\n  ) => Promise<string>;\n\n  process?: (\n    sourceText: string,\n    sourcePath: string,\n    options: TransformOptions<TransformerConfig>,\n  ) => TransformedSource;\n\n  processAsync: (\n    sourceText: string,\n    sourcePath: string,\n    options: TransformOptions<TransformerConfig>,\n  ) => Promise<TransformedSource>;\n}\n\ntype Transformer<TransformerConfig = unknown> =\n  | SyncTransformer<TransformerConfig>\n  | AsyncTransformer<TransformerConfig>;\n\ntype TransformerCreator<\n  X extends Transformer<TransformerConfig>,\n  TransformerConfig = unknown,\n> = (transformerConfig?: TransformerConfig) => X;\n\ntype TransformerFactory<X extends Transformer> = {\n  createTransformer: TransformerCreator<X>;\n};\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"remarque",type:"note",children:(0,s.jsxs)(n.p,{children:["Les d\xe9finitions ci-dessus ont \xe9t\xe9 r\xe9duites par souci de concision. Full code can be found in ",(0,s.jsx)(n.a,{href:"https://github.com/jestjs/jest/blob/main/packages/jest-transform/src/types.ts",children:"Jest repo on GitHub"})," (remember to choose the right tag/commit for your version of Jest)."]})}),"\n",(0,s.jsxs)(n.p,{children:["Il y a deux fa\xe7ons d'importer du code dans Jest - en utilisant Common JS (",(0,s.jsx)(n.code,{children:"require"}),") ou des Modules ECMAScript (",(0,s.jsx)(n.code,{children:"import"})," - qui existe dans les versions statiques et dynamiques). Jest passe les fichiers \xe0 travers la transformation de code \xe0 la demande (par exemple quand un ",(0,s.jsx)(n.code,{children:"require"})," ou un ",(0,s.jsx)(n.code,{children:"import"})," est \xe9valu\xe9). Ce processus, \xe9galement appel\xe9 \xab\xa0transpilation\xa0\xbb, peut se d\xe9rouler de ",(0,s.jsx)(n.em,{children:"mani\xe8re synchrone"})," (dans le cas de ",(0,s.jsx)(n.code,{children:"require"}),"), ou ",(0,s.jsx)(n.em,{children:"asynchrone"})," (dans le cas de ",(0,s.jsx)(n.code,{children:"import"})," ou ",(0,s.jsx)(n.code,{children:"import()"}),", ce dernier fonctionnant \xe9galement \xe0 partir de modules Common JS). Pour cette raison, l'interface expose les deux paires de m\xe9thodes pour des processus asynchrones et synchrones\xa0: ",(0,s.jsx)(n.code,{children:"process{Async}"})," et ",(0,s.jsx)(n.code,{children:"getCacheKey{Async}"}),". Ce dernier est appel\xe9 pour savoir si nous devons appeler ",(0,s.jsx)(n.code,{children:"process{Async}"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Asynchronous transpilation can fall back to the synchronous ",(0,s.jsx)(n.code,{children:"process"})," call if ",(0,s.jsx)(n.code,{children:"processAsync"})," is unimplemented, but synchronous transpilation cannot use the asynchronous ",(0,s.jsx)(n.code,{children:"processAsync"})," call. If your codebase is ESM only, implementing the async variants are sufficient. Otherwise, if any code is loaded through ",(0,s.jsx)(n.code,{children:"require"})," (including ",(0,s.jsx)(n.code,{children:"createRequire"})," from within ESM), then you need to implement the synchronous ",(0,s.jsx)(n.code,{children:"process"})," variant."]}),"\n",(0,s.jsxs)(n.p,{children:["Be aware that ",(0,s.jsx)(n.code,{children:"node_modules"})," is not transpiled with default config, the ",(0,s.jsx)(n.code,{children:"transformIgnorePatterns"})," setting must be modified in order to do so."]}),"\n",(0,s.jsxs)(n.p,{children:["Semi-related to this are the supports flags we pass (see ",(0,s.jsx)(n.code,{children:"CallerTransformOptions"})," above), but those should be used within the transform to figure out if it should return ESM or CJS, and has no direct bearing on sync vs async"]}),"\n",(0,s.jsxs)(n.p,{children:["Though not required, we ",(0,s.jsx)(n.em,{children:"highly recommend"})," implementing ",(0,s.jsx)(n.code,{children:"getCacheKey"})," as well, so we do not waste resources transpiling when we could have read its previous result from disk. Vous pouvez utiliser ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/@jest/create-cache-key-function",children:(0,s.jsx)(n.code,{children:"@jest/create-cache-key-function"})})," pour vous aider \xe0 l'impl\xe9menter."]}),"\n",(0,s.jsxs)(n.p,{children:["Instead of having your custom transformer implement the ",(0,s.jsx)(n.code,{children:"Transformer"})," interface directly, you can choose to export ",(0,s.jsx)(n.code,{children:"createTransformer"}),", a factory function to dynamically create transformers. This is to allow having a transformer config in your jest config."]}),"\n",(0,s.jsx)(n.admonition,{title:"remarque",type:"note",children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/fr/docs/next/ecmascript-modules",children:"ECMAScript module"})," support is indicated by the passed in ",(0,s.jsx)(n.code,{children:"supports*"})," options. Sp\xe9cifiquement ",(0,s.jsx)(n.code,{children:"supportsDynamicImport : true"})," signifie que le transformateur peut retourner des expressions ",(0,s.jsx)(n.code,{children:"import()"})," , qui sont prises en charge par ESM et CJS. Si ",(0,s.jsx)(n.code,{children:"supportsStaticESM : true"})," cela signifie que les instructions de premier niveau ",(0,s.jsx)(n.code,{children:" import"})," sont prises en charge et que le code sera interpr\xe9t\xe9 comme ESM et non comme CJS. Consultez ",(0,s.jsx)(n.a,{href:"https://nodejs.org/api/esm.html#esm_differences_between_es_modules_and_commonjs",children:"la documentation de Node"})," pour plus de d\xe9tails sur les diff\xe9rences."]})}),"\n",(0,s.jsxs)(n.admonition,{title:"astuce",type:"tip",children:[(0,s.jsxs)(n.p,{children:["Assurez-vous que la m\xe9thode ",(0,s.jsx)(n.code,{children:"process{Async}"})," renvoie la source map avec le code transform\xe9, pour qu'il soit possible de reporter les informations de ligne avec pr\xe9cision dans la couverture de code et les erreurs de test. Les source maps en ligne fonctionnent \xe9galement mais sont plus lentes."]}),(0,s.jsxs)(n.p,{children:["Lors du d\xe9veloppement d'un transformateur, il peut \xeatre utile d'ex\xe9cuter Jest avec ",(0,s.jsx)(n.code,{children:"--no-cache"})," pour supprimer fr\xe9quemment ",(0,s.jsx)(n.a,{href:"/fr/docs/next/troubleshooting#caching-issues",children:"le cache"}),"."]})]}),"\n",(0,s.jsx)(n.h3,{id:"exemples",children:"Exemples"}),"\n",(0,s.jsx)(n.h3,{id:"typescript-avec-v\xe9rification-de-type",children:"TypeScript avec v\xe9rification de type"}),"\n",(0,s.jsxs)(n.p,{children:["Alors que ",(0,s.jsx)(n.code,{children:"babel-jest"})," transpile par d\xe9faut les fichiers TypeScript, Babel ne v\xe9rifie pas les types. Si vous le souhaitez, vous pouvez utiliser ",(0,s.jsx)(n.a,{href:"https://github.com/kulshekhar/ts-jest",children:(0,s.jsx)(n.code,{children:"ts-jest"})}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"transformation-des-images-vers-leur-chemin",children:"Transformation des images vers leur chemin"}),"\n",(0,s.jsx)(n.p,{children:"L'importation d'images est un moyen de les inclure dans le paquet de votre navigateur, mais elles ne sont pas du JavaScript valide. Une fa\xe7on de le g\xe9rer dans Jest est de remplacer la valeur import\xe9e par son nom de fichier."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="fileTransformer.js"',children:"const path = require('path');\n\nmodule.exports = {\n  process(sourceText, sourcePath, options) {\n    return {\n      code: `module.exports = ${JSON.stringify(path.basename(sourcePath))};`,\n    };\n  },\n};\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:'title="jest.config.js"',children:"module.exports = {\n  transform: {\n    '\\\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$':\n      '<rootDir>/fileTransformer.js',\n  },\n};\n"})})]})}const u=function(e={}){const{wrapper:n}=Object.assign({},(0,o.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(l,e)})):l(e)}},1670:(e,n,r)=>{r.d(n,{Zo:()=>a,ah:()=>t});var s=r(7378);const o=s.createContext({});function t(e){const n=s.useContext(o);return s.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const i={};function a({components:e,children:n,disableParentContext:r}){let a;return a=r?"function"==typeof e?e({}):e||i:t(e),s.createElement(o.Provider,{value:a},n)}}}]);