"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[7340],{6357:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var s=t(4246),r=t(1670);const i={id:"tutorial-react-native",title:"Tester des Applications React Native"},o=void 0,a={unversionedId:"tutorial-react-native",id:"version-29.4/tutorial-react-native",title:"Tester des Applications React Native",description:"Chez Facebook, nous utilisons Jest pour tester les applications React Native.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-29.4/TutorialReactNative.md",sourceDirName:".",slug:"/tutorial-react-native",permalink:"/fr/docs/29.4/tutorial-react-native",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/jest-v2/fr",tags:[],version:"29.4",frontMatter:{id:"tutorial-react-native",title:"Tester des Applications React Native"},sidebar:"docs",previous:{title:"Tester des Applications React",permalink:"/fr/docs/29.4/tutorial-react"},next:{title:"Test des frameworks web",permalink:"/fr/docs/29.4/testing-frameworks"}},c={},l=[{value:"Configuration",id:"configuration",level:2},{value:"Test Snapshot",id:"test-snapshot",level:2},{value:"Configuration pr\xe9d\xe9finie",id:"configuration-pr\xe9d\xe9finie",level:2},{value:"Environnement",id:"environnement",level:3},{value:"Personnalisation de transformIgnorePatterns",id:"personnalisation-de-transformignorepatterns",level:3},{value:"setupFiles",id:"setupfiles",level:3},{value:"moduleNameMapper",id:"modulenamemapper",level:3},{value:"Astuces",id:"astuces",level:2},{value:"Simuler des modules natifs en utilisant jest.mock",id:"simuler-des-modules-natifs-en-utilisant-jestmock",level:3}];function u(e){const n=Object.assign({p:"p",a:"a",h2:"h2",code:"code",pre:"pre",admonition:"admonition",h3:"h3",strong:"strong"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Chez Facebook, nous utilisons Jest pour tester les applications ",(0,s.jsx)(n.a,{href:"https://reactnative.dev/",children:"React Native"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["D\xe9couvrez plus en d\xe9tail comment tester un exemple d'application React Native fonctionnelle en lisant la s\xe9rie suivante\xa0: ",(0,s.jsx)(n.a,{href:"https://callstack.com/blog/testing-react-native-with-the-new-jest-part-1-snapshots-come-into-play/",children:"Partie 1\xa0: Jest - Les snapshots entrent en jeu"})," et ",(0,s.jsx)(n.a,{href:"https://callstack.com/blog/testing-react-native-with-the-new-jest-part-2-redux-snapshots-for-your-actions-and-reducers/",children:"Partie 2\xa0: Jest - Les snapshots Redux pour vos actions et vos r\xe9ducteurs"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["A partir de la version 0.38 de react-native, l'installation de Jest est inclus lorsque vous ex\xe9cutez ",(0,s.jsx)(n.code,{children:"react-native init"}),". La configuration suivante devrait \xeatre automatiquement ajout\xe9e \xe0 votre fichier package.json\xa0:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "test": "jest"\n  },\n  "jest": {\n    "preset": "react-native"\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Ex\xe9cutez ",(0,s.jsx)(n.code,{children:"yarn test"})," pour ex\xe9cuter des tests avec Jest."]}),"\n",(0,s.jsx)(n.admonition,{title:"astuce",type:"tip",children:(0,s.jsxs)(n.p,{children:["If you are upgrading your react-native application and previously used the ",(0,s.jsx)(n.code,{children:"jest-react-native"})," preset, remove the dependency from your ",(0,s.jsx)(n.code,{children:"package.json"})," file and change the preset to ",(0,s.jsx)(n.code,{children:"react-native"})," instead."]})}),"\n",(0,s.jsx)(n.h2,{id:"test-snapshot",children:"Test Snapshot"}),"\n",(0,s.jsxs)(n.p,{children:["Cr\xe9ons un ",(0,s.jsx)(n.a,{href:"/fr/docs/29.4/snapshot-testing",children:"test snapshot"})," pour un petit composant intro avec quelques vues et composants de texte et quelques styles\xa0:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",metastring:'title="Intro.js"',children:"import React, {Component} from 'react';\nimport {StyleSheet, Text, View} from 'react-native';\n\nclass Intro extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.welcome}>Bienvenue sur React Native\xa0!</Text>\n        <Text style={styles.instructions}>\n          C'est un test de snapshot pour React Native.\n        </Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    flex: 1,\n    justifyContent: 'center',\n  },\n  instructions: {\n    color: '#333333',\n    marginBottom: 5,\n    textAlign: 'center',\n  },\n  welcome: {\n    fontSize: 20,\n    margin: 10,\n    textAlign: 'center',\n  },\n});\n\nexport default Intro;\n"})}),"\n",(0,s.jsx)(n.p,{children:"Utilisons maintenant le moteur de rendu de React and la fonctionnalit\xe9 de snapshot de Jest pour capturer le rendu du composant dans un fichier:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",metastring:'title="__tests__/Intro-test.js"',children:"import React from 'react';\nimport renderer from 'react-test-renderer';\nimport Intro from '../Intro';\n\ntest('rend correctement', () => {\n  const tree = renderer.create(<Intro />).toJSON();\n  expect(tree).toMatchSnapshot();\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Lorsque vous ex\xe9cutez ",(0,s.jsx)(n.code,{children:"yarn test"})," ou ",(0,s.jsx)(n.code,{children:"jest"}),", cela produira un fichier de sortie comme ceci\xa0:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",metastring:'title="__tests__/__snapshots__/Intro-test.js.snap"',children:'exports[`Intro renders correctly 1`] = `\n<View\n  style={\n    Object {\n      "alignItems": "center",\n      "backgroundColor": "#F5FCFF",\n      "flex": 1,\n      "justifyContent": "center",\n    }\n  }>\n  <Text\n    style={\n      Object {\n        "fontSize": 20,\n        "margin": 10,\n        "textAlign": "center",\n      }\n    }>\n    Bienvenue sur React Native\xa0!\n  </Text>\n  <Text\n    style={\n      Object {\n        "color": "#333333",\n        "marginBottom": 5,\n        "textAlign": "center",\n      }\n    }>\n    C\'est un test de snapshot pour React Native.\n  </Text>\n</View>\n`;\n'})}),"\n",(0,s.jsxs)(n.p,{children:["La prochaine fois que vous ex\xe9cuterez les tests, la sortie rendue sera compar\xe9e au snapshot pr\xe9c\xe9demment cr\xe9\xe9. Le snapshot doit \xeatre committ\xe9 avec les changements de code. Lorsqu'un test de snapshot \xe9choue, vous devez v\xe9rifier s'il s'agit d'un changement intentionnel ou non intentionnel. Si le changement est attendu, vous pouvez appeler Jest avec ",(0,s.jsx)(n.code,{children:"jest -u"})," pour \xe9craser le snapshot existant."]}),"\n",(0,s.jsxs)(n.p,{children:["The code for this example is available at ",(0,s.jsx)(n.a,{href:"https://github.com/jestjs/jest/tree/main/examples/react-native",children:"examples/react-native"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"configuration-pr\xe9d\xe9finie",children:"Configuration pr\xe9d\xe9finie"}),"\n",(0,s.jsx)(n.p,{children:"Le pr\xe9r\xe9glage d\xe9finit l'environnement et il est tr\xe8s subjectif et bas\xe9 sur ce que nous avons trouv\xe9 d'utile sur Facebook. Toutes les options de configuration peuvent \xeatre \xe9cras\xe9es tout comme elles peuvent \xeatre personnalis\xe9es si aucun pr\xe9r\xe9glage n'est utilis\xe9."}),"\n",(0,s.jsx)(n.h3,{id:"environnement",children:"Environnement"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"react-native"})," est livr\xe9 avec un preset de Jest, donc le champ ",(0,s.jsx)(n.code,{children:"jest.preset"})," de votre ",(0,s.jsx)(n.code,{children:"package.json"})," devrait pointer vers ",(0,s.jsx)(n.code,{children:"react-native"}),". Le preset est un environnement node qui imite l'environnement d'une application React Native. Parce qu'il ne charge pas d'API DOM ou de navigateur, cela am\xe9liore grandement le temps de d\xe9marrage de Jest."]}),"\n",(0,s.jsx)(n.h3,{id:"personnalisation-de-transformignorepatterns",children:"Personnalisation de transformIgnorePatterns"}),"\n",(0,s.jsxs)(n.p,{children:["L'option ",(0,s.jsx)(n.a,{href:"configuration#transformignorepatterns-arraystring",children:(0,s.jsx)(n.code,{children:"transformIgnorePatterns"})})," peut \xeatre utilis\xe9e pour sp\xe9cifier quels fichiers doivent \xeatre transform\xe9s par Babel. Malheureusement, beaucoup de modules npm ",(0,s.jsx)(n.code,{children:"react-native"})," ne compilent pas leur code source avant la publication."]}),"\n",(0,s.jsxs)(n.p,{children:["Par d\xe9faut, le preset ",(0,s.jsx)(n.code,{children:"jest-react-native"})," ne traite que les propres fichiers source du projet et ",(0,s.jsx)(n.code,{children:"react-native"}),". Si vous avez des d\xe9pendances npm qui doivent \xeatre transform\xe9es, vous pouvez personnaliser cette option de configuration en incluant des modules autres que ",(0,s.jsx)(n.code,{children:"react-native"})," en les regroupant et en les s\xe9parant avec l'op\xe9rateur ",(0,s.jsx)(n.code,{children:"|"}),"\xa0:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "transformIgnorePatterns": [\n    "node_modules/(?!(react-native|my-project|react-native-button)/)"\n  ]\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Vous pouvez tester quels chemins correspondent (et donc qui sont exclus de la transformation) avec un outil ",(0,s.jsx)(n.a,{href:"https://regex101.com/r/JsLIDM/1",children:"comme celui-ci"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"transformIgnorePatterns"})," exclura un fichier de transformation si le chemin correspond ",(0,s.jsx)(n.strong,{children:"\xe0 un"})," pattern fourni. Le d\xe9coupage en plusieurs patterns pourrait donc avoir des r\xe9sultats inattendus si vous ne faites pas attention. Dans l'exemple ci-dessous, l'exclusion (\xe9galement connue sous le nom d'assertion pr\xe9visionnelle n\xe9gative) pour ",(0,s.jsx)(n.code,{children:"foo"})," et ",(0,s.jsx)(n.code,{children:"bar"})," s'annulent mutuellement\xa0:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "transformIgnorePatterns": ["node_modules/(?!foo/)", "node_modules/(?!bar/)"] // pas ce que vous voulez\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"setupfiles",children:"setupFiles"}),"\n",(0,s.jsxs)(n.p,{children:["Si vous souhaitez fournir une configuration suppl\xe9mentaire pour chaque fichier de test, ",(0,s.jsxs)(n.a,{href:"configuration#setupfiles-array",children:["l'option de configuration ",(0,s.jsx)(n.code,{children:"setupFiles"})]})," peut \xeatre utilis\xe9e pour sp\xe9cifier des scripts de configuration."]}),"\n",(0,s.jsx)(n.h3,{id:"modulenamemapper",children:"moduleNameMapper"}),"\n",(0,s.jsxs)(n.p,{children:["Le module ",(0,s.jsx)(n.a,{href:"configuration#modulenamemapper-objectstring-string--arraystring",children:(0,s.jsx)(n.code,{children:"moduleNameMapper"})})," peut \xeatre utilis\xe9 pour mapper un chemin de module \xe0 un autre module. Par d\xe9faut, le preset fait correspondre toutes les images \xe0 un module de base d'image, mais si un module ne peut \xeatre trouv\xe9, cette option de configuration peut aider\xa0:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "moduleNameMapper": {\n    "my-module.js": "<rootDir>/path/to/my-module.js"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"astuces",children:"Astuces"}),"\n",(0,s.jsx)(n.h3,{id:"simuler-des-modules-natifs-en-utilisant-jestmock",children:"Simuler des modules natifs en utilisant jest.mock"}),"\n",(0,s.jsxs)(n.p,{children:["Le preset Jest int\xe9gr\xe9 dans ",(0,s.jsx)(n.code,{children:"react-native"})," est fourni avec quelques simulations par d\xe9faut qui sont appliqu\xe9es sur un d\xe9p\xf4t react-native. Cependant, certains composants ou composants tiers reposent sur du code natif pour \xeatre rendus. Dans de tels cas, le syst\xe8me de simulation manuelle de Jest peut aider \xe0 d\xe9chiffrer l'impl\xe9mentation sous-jacente."]}),"\n",(0,s.jsxs)(n.p,{children:["Par exemple, si votre code d\xe9pend d'un composant vid\xe9o natif tiers appel\xe9 ",(0,s.jsx)(n.code,{children:"react-native-video"}),", vous pourriez vouloir le remplacer par une simulation manuelle comme celle-ci\xa0:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"jest.mock('react-native-video', () => 'Video');\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Cela rendra le composant en tant que ",(0,s.jsx)(n.code,{children:"<Video {...props} />"})," avec tous ses props dans la sortie de l'instantan\xe9. Consultez aussi les ",(0,s.jsx)(n.a,{href:"tutorial-react#snapshot-testing-with-mocks-enzyme-and-react-16",children:"avertissements autour d'Enzyme et React 16"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Parfois, vous devez fournir une simulation manuelle plus complexe. Par exemple, si vous souhaitez transf\xe9rer les types de prop ou les champs statiques d'un composant natif vers une simulation, vous pouvez retourner un composant React diff\xe9rent d'une simulation \xe0 travers cette fonction d'aide de jest-react-native\xa0:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"jest.mock('path/to/MyNativeComponent', () => {\n  const mockComponent = require('react-native/jest/mockComponent');\n  return mockComponent('path/to/MyNativeComponent');\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"Ou si vous souhaitez cr\xe9er votre propre simulation manuelle, vous pouvez faire quelque chose comme ceci\xa0:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"jest.mock('Text', () => {\n  const RealComponent = jest.requireActual('Text');\n  const React = require('react');\n  class Text extends React.Component {\n    render() {\n      return React.createElement('Text', this.props, this.props.children);\n    }\n  }\n  Text.propTypes = RealComponent.propTypes;\n  return Text;\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"Dans d'autres cas, vous pouvez souhaiter simuler un module natif qui n'est pas un composant React. La m\xeame technique peut \xeatre appliqu\xe9e. Nous recommandons d'inspecter le code source du module natif et de journaliser le module lors de l'ex\xe9cution d'une application react native sur un appareil bien r\xe9el, puis de mod\xe9liser une simulation manuelle d'apr\xe8s le module r\xe9el."}),"\n",(0,s.jsxs)(n.p,{children:["Si vous finissez par simuler les m\xeames modules encore et encore, il est recommand\xe9 de d\xe9finir ces simulations dans un fichier s\xe9par\xe9 et de l'ajouter \xe0 la liste de ",(0,s.jsx)(n.code,{children:"setupFiles"}),"."]})]})}const d=function(e={}){const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(u,e)})):u(e)}},1670:(e,n,t)=>{t.d(n,{Zo:()=>a,ah:()=>i});var s=t(7378);const r=s.createContext({});function i(e){const n=s.useContext(r);return s.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const o={};function a({components:e,children:n,disableParentContext:t}){let a;return a=t?"function"==typeof e?e({}):e||o:i(e),s.createElement(r.Provider,{value:a},n)}}}]);