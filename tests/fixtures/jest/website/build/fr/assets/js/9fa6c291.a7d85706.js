"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[4489],{7021:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>p});var r=n(4246),t=n(1670),i=n(8447),o=n(2599),a=n(6294);const l={id:"configuration",title:"Configuration de Jest"},c=void 0,d={unversionedId:"configuration",id:"version-29.4/configuration",title:"Configuration de Jest",description:"La philosophie de Jest est de fonctionner parfaitement par d\xe9faut, mais parfois vous avez besoin de plus de possibilit\xe9s de configuration.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-29.4/Configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/fr/docs/29.4/configuration",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/jest-v2/fr",tags:[],version:"29.4",frontMatter:{id:"configuration",title:"Configuration de Jest"},sidebar:"api",previous:{title:"L'objet Jest",permalink:"/fr/docs/29.4/jest-object"},next:{title:"Options de Jest CLI",permalink:"/fr/docs/29.4/cli"}},u={},p=[{value:"Options",id:"options",level:2},{value:"R\xe9f\xe9rence",id:"r\xe9f\xe9rence",level:2},{value:"<code>automock</code> [boolean]",id:"automock-boolean",level:3},{value:"<code>bail</code> [number | boolean]",id:"bail-number--boolean",level:3},{value:"<code>cacheDirectory</code> [string]",id:"cachedirectory-string",level:3},{value:"<code>clearMocks</code> [boolean]",id:"clearmocks-boolean",level:3},{value:"<code>collectCoverage</code> [boolean]",id:"collectcoverage-boolean",level:3},{value:"<code>collectCoverageFrom</code> [array]",id:"collectcoveragefrom-array",level:3},{value:"<code>coverageDirectory</code> [string]",id:"coveragedirectory-string",level:3},{value:"<code>coveragePathIgnorePatterns</code> [array&lt;string&gt;]",id:"coveragepathignorepatterns-arraystring",level:3},{value:"<code>coverageProvider</code> [string]",id:"coverageprovider-string",level:3},{value:"<code>coverageReporters</code> [array&lt;string | [string, options]&gt;]",id:"coveragereporters-arraystring--string-options",level:3},{value:"<code>coverageThreshold</code> [object]",id:"coveragethreshold-object",level:3},{value:"<code>dependencyExtractor</code> [string]",id:"dependencyextractor-string",level:3},{value:"<code>displayName</code> [string, object]",id:"displayname-string-object",level:3},{value:"<code>errorOnDeprecated</code> [boolean]",id:"errorondeprecated-boolean",level:3},{value:"<code>extensionsToTreatAsEsm</code> [array&lt;string&gt;]",id:"extensionstotreatasesm-arraystring",level:3},{value:"<code>fakeTimers</code> [object]",id:"faketimers-object",level:3},{value:"<code>forceCoverageMatch</code> [array&lt;string&gt;]",id:"forcecoveragematch-arraystring",level:3},{value:"<code>globals</code> [object]",id:"globals-object",level:3},{value:"<code>globalSetup</code> [string]",id:"globalsetup-string",level:3},{value:"<code>globalTeardown</code> [string]",id:"globalteardown-string",level:3},{value:"<code>haste</code> [object]",id:"haste-object",level:3},{value:"<code>injectGlobals</code> [boolean]",id:"injectglobals-boolean",level:3},{value:"<code>maxConcurrency</code> [number]",id:"maxconcurrency-number",level:3},{value:"<code>maxWorkers</code> [number | string]",id:"maxworkers-number--string",level:3},{value:"<code>moduleDirectories</code> [array&lt;string&gt;]",id:"moduledirectories-arraystring",level:3},{value:"<code>moduleFileExtensions</code> [array&lt;string&gt;]",id:"modulefileextensions-arraystring",level:3},{value:"<code>moduleNameMapper</code> [object&lt;string, string | array&lt;string&gt;&gt;]",id:"modulenamemapper-objectstring-string--arraystring",level:3},{value:"<code>modulePathIgnorePatterns</code> [array&lt;string&gt;]",id:"modulepathignorepatterns-arraystring",level:3},{value:"<code>modulePaths</code> [array&lt;string&gt;]",id:"modulepaths-arraystring",level:3},{value:"<code>notify</code> [boolean]",id:"notify-boolean",level:3},{value:"<code>notifyMode</code> [string]",id:"notifymode-string",level:3},{value:"Modes",id:"modes",level:4},{value:"<code>preset</code> [string]",id:"preset-string",level:3},{value:"<code>prettierPath</code> [string]",id:"prettierpath-string",level:3},{value:"<code>projects</code> [array&lt;string | ProjectConfig&gt;]",id:"projects-arraystring--projectconfig",level:3},{value:"<code>reporters</code> [array&lt;moduleName | [moduleName, options]&gt;]",id:"reporters-arraymodulename--modulename-options",level:3},{value:"Rapporteur par d\xe9faut",id:"rapporteur-par-d\xe9faut",level:4},{value:"Rapporteur GitHub Actions",id:"rapporteur-github-actions",level:4},{value:"Rapporteur summary",id:"rapporteur-summary",level:4},{value:"Rapporteurs personnalis\xe9s",id:"rapporteurs-personnalis\xe9s",level:4},{value:"<code>resetMocks</code> [boolean]",id:"resetmocks-boolean",level:3},{value:"<code>resetModules</code> [boolean]",id:"resetmodules-boolean",level:3},{value:"<code>resolver</code> [string]",id:"resolver-string",level:3},{value:"<code>restoreMocks</code> [boolean]",id:"restoremocks-boolean",level:3},{value:"<code>rootDir</code> [string]",id:"rootdir-string",level:3},{value:"<code>roots</code> [array&lt;string&gt;]",id:"roots-arraystring",level:3},{value:"<code>runner</code> [string]",id:"runner-string",level:3},{value:"<code>sandboxInjectedGlobals</code> [array&lt;string&gt;]",id:"sandboxinjectedglobals-arraystring",level:3},{value:"<code>setupFiles</code> [array]",id:"setupfiles-array",level:3},{value:"<code>setupFilesAfterEnv</code> [array]",id:"setupfilesafterenv-array",level:3},{value:"<code>showSeed</code> [boolean]",id:"showseed-boolean",level:3},{value:"<code>slowTestThreshold</code> [number]",id:"slowtestthreshold-number",level:3},{value:"<code>snapshotFormat</code> [object]",id:"snapshotformat-object",level:3},{value:"<code>snapshotResolver</code> [string]",id:"snapshotresolver-string",level:3},{value:"<code>snapshotSerializers</code> [array&lt;string&gt;]",id:"snapshotserializers-arraystring",level:3},{value:"<code>testEnvironment</code> [string]",id:"testenvironment-string",level:3},{value:"<code>testEnvironmentOptions</code> [Object]",id:"testenvironmentoptions-object",level:3},{value:"<code>testFailureExitCode</code> [number]",id:"testfailureexitcode-number",level:3},{value:"<code>testMatch</code> [array&lt;string&gt;]",id:"testmatch-arraystring",level:3},{value:"<code>testPathIgnorePatterns</code> [array&lt;string&gt;]",id:"testpathignorepatterns-arraystring",level:3},{value:"<code>testRegex</code> [string | array&lt;string&gt;]",id:"testregex-string--arraystring",level:3},{value:"<code>testResultsProcessor</code> [string]",id:"testresultsprocessor-string",level:3},{value:"<code>testRunner</code> [string]",id:"testrunner-string",level:3},{value:"<code>testSequencer</code> [string]",id:"testsequencer-string",level:3},{value:"<code>testTimeout</code> [number]",id:"testtimeout-number",level:3},{value:"<code>transform</code> [object&lt;string, pathToTransformer | [pathToTransformer, object]&gt;]",id:"transform-objectstring-pathtotransformer--pathtotransformer-object",level:3},{value:"<code>transformIgnorePatterns</code> [array&lt;string&gt;]",id:"transformignorepatterns-arraystring",level:3},{value:"<code>unmockedModulePathPatterns</code> [array&lt;string&gt;]",id:"unmockedmodulepathpatterns-arraystring",level:3},{value:"<code>verbose</code> [boolean]",id:"verbose-boolean",level:3},{value:"<code>watchPathIgnorePatterns</code> [array&lt;string&gt;]",id:"watchpathignorepatterns-arraystring",level:3},{value:"<code>watchPlugins</code> [array&lt;string | [string, Object]&gt;]",id:"watchplugins-arraystring--string-object",level:3},{value:"<code>watchman</code> [boolean]",id:"watchman-boolean",level:3},{value:"<code>workerIdleMemoryLimit</code> [number|string]",id:"workeridlememorylimit-numberstring",level:3},{value:"<code>//</code> [string]",id:"-string",level:3}];function h(e){const s=Object.assign({p:"p",code:"code",a:"a",admonition:"admonition",pre:"pre",h2:"h2",hr:"hr",h3:"h3",ul:"ul",li:"li",em:"em",strong:"strong",h4:"h4",ol:"ol"},(0,t.ah)(),e.components),{Details:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:"La philosophie de Jest est de fonctionner parfaitement par d\xe9faut, mais parfois vous avez besoin de plus de possibilit\xe9s de configuration."}),"\n",(0,r.jsxs)(s.p,{children:["Il est recommand\xe9 de d\xe9finir la configuration dans un fichier JavaScript d\xe9di\xe9, TypeScript ou JSON. Le fichier sera d\xe9tect\xe9 automatiquement, s'il est nomm\xe9 ",(0,r.jsx)(s.code,{children:"jest.config.js|ts|mjs|cjs|json"}),". Vous pouvez utiliser le drapeau ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/cli#--configpath",children:(0,r.jsx)(s.code,{children:"--config"})})," pour passer un chemin explicite vers le fichier."]}),"\n",(0,r.jsx)(s.admonition,{title:"remarque",type:"note",children:(0,r.jsx)(s.p,{children:"Gardez \xe0 l'esprit que l'objet de configuration qui en r\xe9sulte doit toujours \xeatre s\xe9rialisable en JSON."})}),"\n",(0,r.jsx)(s.p,{children:"Le fichier de configuration devrait simplement exporter un objet\xa0:"}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  verbose: true,\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  verbose: true,\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.p,{children:"Ou une fonction renvoyant un objet\xa0:"}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @returns {Promise<import('jest').Config>} */\nmodule.exports = async () => {\n  return {\n    verbose: true,\n  };\n};\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nexport default async (): Promise<Config> => {\n  return {\n    verbose: true,\n  };\n};\n"})})})]}),"\n",(0,r.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,r.jsxs)(s.p,{children:["Pour lire les fichiers de configuration TypeScript, Jest n\xe9cessite ",(0,r.jsx)(s.a,{href:"https://npmjs.com/package/ts-node",children:(0,r.jsx)(s.code,{children:"ts-node"})}),". Assurez-vous qu'il soit install\xe9 dans votre projet."]})}),"\n",(0,r.jsx)(s.p,{children:"La configuration peut \xe9galement \xeatre stock\xe9e dans un fichier JSON en tant qu'objet simple\xa0:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",metastring:'title="jest.config.json"',children:'{\n  "bail": 1,\n  "verbose": true\n}\n'})}),"\n",(0,r.jsxs)(s.p,{children:["Alternativement la configuration de Jest peut \xeatre d\xe9finie via la cl\xe9 ",(0,r.jsx)(s.code,{children:'"jest"'})," dans le ",(0,r.jsx)(s.code,{children:"package.json"})," de votre projet\xa0:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",metastring:'title="package.json"',children:'{\n  "name": "my-project",\n  "jest": {\n    "verbose": true\n  }\n}\n'})}),"\n",(0,r.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,r.jsxs)(s.admonition,{type:"info",children:[(0,r.jsxs)(s.p,{children:["Vous pouvez r\xe9cup\xe9rer les valeurs par d\xe9faut de Jest dans ",(0,r.jsx)(s.code,{children:"jest-config"})," pour les \xe9tendre si n\xe9cessaire\xa0:"]}),(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"const {defaults} = require('jest-config');\n\n/** @type {import('jest').Config} */\nconst config = {\n  moduleFileExtensions: [...defaults.moduleFileExtensions, 'mts', 'cts'],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\nimport {defaults} from 'jest-config';\n\nconst config: Config = {\n  moduleFileExtensions: [...defaults.moduleFileExtensions, 'mts'],\n};\n\nexport default config;\n"})})})]})]}),"\n","\n","\n",(0,r.jsx)(a.Z,{toc:p.slice(2)}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"r\xe9f\xe9rence",children:"R\xe9f\xe9rence"}),"\n",(0,r.jsxs)(s.h3,{id:"automock-boolean",children:[(0,r.jsx)(s.code,{children:"automock"})," [boolean]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"false"})]}),"\n",(0,r.jsx)(s.p,{children:"Cette option indique \xe0 Jest que tous les modules import\xe9s dans vos tests doivent \xeatre simul\xe9s automatiquement. Tous les modules utilis\xe9s dans vos tests auront une impl\xe9mentation de remplacement, en conservant la surface de l'API."}),"\n",(0,r.jsx)(s.p,{children:"Exemple\xa0:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:'title="utils.js"',children:"export default {\n  authorize: () => 'token',\n  isAuthorized: secret => secret === 'wizard',\n};\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:'title="__tests__/automock.test.js"',children:"import utils from '../utils';\n\ntest('if utils mocked automatically', () => {\n  // Les m\xe9thodes publiques de `utils` sont maintenant des fonctions simul\xe9es\n  expect(utils.authorize.mock).toBeTruthy();\n  expect(utils.isAuthorized.mock).toBeTruthy();\n\n  // Vous pouvez les fournir avec votre propre impl\xe9mentation\n  // ou passer la valeur de retour attendue\n  utils.authorize.mockReturnValue('mocked_token');\n  utils.isAuthorized.mockReturnValue(true);\n\n  expect(utils.authorize()).toBe('mocked_token');\n  expect(utils.isAuthorized('not_wizard')).toBeTruthy();\n});\n"})}),"\n",(0,r.jsxs)(s.admonition,{title:"remarque",type:"note",children:[(0,r.jsxs)(s.p,{children:["Les modules Node sont automatiquement simul\xe9s lorsque vous avez un simulateur manuel en place (par exemple : ",(0,r.jsx)(s.code,{children:"__mocks__/lodash.js"}),"). Plus d'infos ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/manual-mocks#mocking-node-modules",children:"ici"}),"."]}),(0,r.jsxs)(s.p,{children:["Les modules du noyau, comme ",(0,r.jsx)(s.code,{children:"fs"}),", ne sont pas simul\xe9s par d\xe9faut. Ils peuvent \xeatre simul\xe9s explicitement, par exemple ",(0,r.jsx)(s.code,{children:"jest.mock('fs')"}),"."]})]}),"\n",(0,r.jsxs)(s.h3,{id:"bail-number--boolean",children:[(0,r.jsx)(s.code,{children:"bail"})," [number | boolean]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"0"})]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut, Jest ex\xe9cute tous les tests et produit toutes les erreurs dans la console \xe0 la fin. L'option de configuration bail peut \xeatre utilis\xe9e ici pour que Jest arr\xeate de lancer des tests apr\xe8s ",(0,r.jsx)(s.code,{children:"n"})," \xe9checs. D\xe9finir bail \xe0 ",(0,r.jsx)(s.code,{children:"true"})," est la m\xeame chose que d\xe9finir bail \xe0 ",(0,r.jsx)(s.code,{children:"1"}),"."]}),"\n",(0,r.jsxs)(s.h3,{id:"cachedirectory-string",children:[(0,r.jsx)(s.code,{children:"cacheDirectory"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:'"/tmp/<path>"'})]}),"\n",(0,r.jsx)(s.p,{children:"Le r\xe9pertoire o\xf9 Jest doit stocker ses informations de d\xe9pendance en cache."}),"\n",(0,r.jsx)(s.p,{children:"Avant d'ex\xe9cuter les tests, Jest tente d\u2019analyser votre arborescence de d\xe9pendances (en amont) et met ces r\xe9sultats en cache afin d\u2019all\xe9ger les acc\xe8s au syst\xe8me de fichiers qui doivent se produire lors de l\u2019ex\xe9cution des tests. Cette option de configuration vous permet de personnaliser le r\xe9pertoire o\xf9 Jest stocke ces donn\xe9es."}),"\n",(0,r.jsxs)(s.h3,{id:"clearmocks-boolean",children:[(0,r.jsx)(s.code,{children:"clearMocks"})," [boolean]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"false"})]}),"\n",(0,r.jsxs)(s.p,{children:["Automatically clear mock calls, instances, contexts and results before every test. \xc9quivalent \xe0 l'appel de ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/jest-object#jestclearallmocks",children:(0,r.jsx)(s.code,{children:"jest.clearAllMocks()"})})," avant chaque test. Cela ne supprime aucune impl\xe9mentation simul\xe9e qui aurait pu \xeatre fournie."]}),"\n",(0,r.jsxs)(s.h3,{id:"collectcoverage-boolean",children:[(0,r.jsx)(s.code,{children:"collectCoverage"})," [boolean]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"false"})]}),"\n",(0,r.jsx)(s.p,{children:"Indique si les informations de couverture doivent \xeatre collect\xe9es lors de l'ex\xe9cution du test. \xc9tant donn\xe9 que cette op\xe9ration modifie tous les fichiers ex\xe9cut\xe9s avec des instructions de collecte de couverture, elle peut ralentir consid\xe9rablement vos tests."}),"\n",(0,r.jsxs)(s.p,{children:["Jest est livr\xe9 avec deux fournisseurs de couverture\xa0: ",(0,r.jsx)(s.code,{children:"babel"})," (par d\xe9faut) et ",(0,r.jsx)(s.code,{children:"v8"}),". Consultez l'option ",(0,r.jsx)(s.a,{href:"#coverageprovider-string",children:(0,r.jsx)(s.code,{children:"coverageProvider"})})," pour plus de d\xe9tails."]}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["Les fournisseurs de couverture ",(0,r.jsx)(s.code,{children:"babel"})," et ",(0,r.jsx)(s.code,{children:"v8"})," utilisent ",(0,r.jsx)(s.code,{children:"/* istanbul ignorent la suivante */"})," et ",(0,r.jsx)(s.code,{children:"/* c8 ignorent les commentaires suivants */"})," pour exclure les lignes des rapports de couverture, respectivement. Pour plus d'informations, vous pouvez consulter la documentation ",(0,r.jsx)(s.a,{href:"https://github.com/istanbuljs/nyc#parsing-hints-ignoring-lines",children:(0,r.jsx)(s.code,{children:"istanbuljs"})})," et la documentation ",(0,r.jsx)(s.a,{href:"https://github.com/bcoe/c8#ignoring-uncovered-lines-functions-and-blocks",children:(0,r.jsx)(s.code,{children:"c8"})}),"."]})}),"\n",(0,r.jsxs)(s.h3,{id:"collectcoveragefrom-array",children:[(0,r.jsx)(s.code,{children:"collectCoverageFrom"})," [array]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsxs)(s.p,{children:["Un tableau de ",(0,r.jsx)(s.a,{href:"https://github.com/micromatch/micromatch",children:"patterns glob"})," indiquant un ensemble de fichiers pour lesquels des informations de couverture doivent \xeatre collect\xe9es. Si un fichier correspond au pattern glob sp\xe9cifi\xe9, des informations de couverture seront collect\xe9es pour ce fichier, m\xeame si aucun test n'existe pour ce fichier et qu'il n'est jamais requis dans la suite de tests."]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  collectCoverageFrom: [\n    '**/*.{js,jsx}',\n    '!**/node_modules/**',\n    '!**/vendor/**',\n  ],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  collectCoverageFrom: [\n    '**/*.{js,jsx}',\n    '!**/node_modules/**',\n    '!**/vendor/**',\n  ],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.p,{children:["Ceci collectera les informations de couverture pour tous les fichiers \xe0 l'int\xe9rieur du ",(0,r.jsx)(s.code,{children:"rootDir"})," du projet, sauf ceux qui correspondent \xe0 ",(0,r.jsx)(s.code,{children:"**/node_modules/**"})," ou ",(0,r.jsx)(s.code,{children:"**/vendor/**"}),"."]}),"\n",(0,r.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,r.jsxs)(s.p,{children:["Chaque pattern glob est appliqu\xe9 dans l'ordre dans lequel ils sont sp\xe9cifi\xe9s dans la configuration. Par exemple ",(0,r.jsx)(s.code,{children:'["!**/__tests__/**", "**/*.js"]'})," n'exclura pas ",(0,r.jsx)(s.code,{children:"__tests__"})," car la n\xe9gation est \xe9cras\xe9e par le second pattern. Pour que le glob n\xe9gatif fonctionne dans cet exemple, il doit venir apr\xe8s ",(0,r.jsx)(s.code,{children:"**/*.js"}),"."]})}),"\n",(0,r.jsx)(s.admonition,{title:"remarque",type:"note",children:(0,r.jsxs)(s.p,{children:["Cette option n\xe9cessite que ",(0,r.jsx)(s.code,{children:"collectCoverage"})," soit d\xe9fini \xe0 ",(0,r.jsx)(s.code,{children:"true"})," ou que Jest ait \xe9t\xe9 appel\xe9 avec l'option ",(0,r.jsx)(s.code,{children:"--coverage"}),"."]})}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Help:"}),(0,r.jsx)(s.p,{children:"If you are seeing coverage output such as..."}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"=============================== Coverage summary ===============================\nStatements   : Unknown% ( 0/0 )\nBranches     : Unknown% ( 0/0 )\nFunctions    : Unknown% ( 0/0 )\nLines        : Unknown% ( 0/0 )\n================================================================================\nJest: Coverage data for global was not found.\n"})}),(0,r.jsxs)(s.p,{children:["Il est tr\xe8s probable que vos patterns glob ne correspondent \xe0 aucun fichier. Reportez-vous \xe0 la documentation de ",(0,r.jsx)(s.a,{href:"https://github.com/micromatch/micromatch",children:"micromatch"})," pour vous assurer que vos globs sont compatibles."]})]}),"\n",(0,r.jsxs)(s.h3,{id:"coveragedirectory-string",children:[(0,r.jsx)(s.code,{children:"coverageDirectory"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsx)(s.p,{children:"Le r\xe9pertoire o\xf9 Jest doit \xe9crire les fichiers de couverture."}),"\n",(0,r.jsxs)(s.h3,{id:"coveragepathignorepatterns-arraystring",children:[(0,r.jsx)(s.code,{children:"coveragePathIgnorePatterns"})," [array<string>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:'["/node_modules/"]'})]}),"\n",(0,r.jsx)(s.p,{children:"Un tableau de cha\xeenes de patterns regexp qui sont compar\xe9es \xe0 tous les chemins de fichiers avant d'ex\xe9cuter le test. Si le chemin du fichier correspond \xe0 l'un des patterns, l'information de couverture sera ignor\xe9e."}),"\n",(0,r.jsxs)(s.p,{children:["Ces cha\xeenes de patterns correspondent au chemin d'acc\xe8s complet. Utilisez la chaine de caract\xe8re ",(0,r.jsx)(s.code,{children:"<rootDir>"})," pour inclure le chemin vers la racine de votre projet, pour l'emp\xeacher d'ignorer accidentellement tous vos fichiers dans les environnements qui auraient un r\xe9pertoire racine diff\xe9rent. Exemple\xa0: ",(0,r.jsx)(s.code,{children:'["<rootDir>/build/", "<rootDir>/node_modules/"]'}),"."]}),"\n",(0,r.jsxs)(s.h3,{id:"coverageprovider-string",children:[(0,r.jsx)(s.code,{children:"coverageProvider"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Indique quel fournisseur doit \xeatre utilis\xe9 pour instrumenter le code pour la couverture. Les valeurs autoris\xe9es sont ",(0,r.jsx)(s.code,{children:"babel"})," (par d\xe9faut) ou ",(0,r.jsx)(s.code,{children:"v8"}),"."]}),"\n",(0,r.jsxs)(s.h3,{id:"coveragereporters-arraystring--string-options",children:[(0,r.jsx)(s.code,{children:"coverageReporters"})," [array<string | [string, options]>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Default: ",(0,r.jsx)(s.code,{children:'["clover", "json", "lcov", "text"]'})]}),"\n",(0,r.jsxs)(s.p,{children:["Une liste de noms de rapporteurs que Jest utilise lors de la r\xe9daction de rapports de couverture. N'importe quel ",(0,r.jsx)(s.a,{href:"https://github.com/istanbuljs/istanbuljs/tree/master/packages/istanbul-reports/lib",children:"rapporteur istanbul"})," peut \xeatre utilis\xe9."]}),"\n",(0,r.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,r.jsxs)(s.p,{children:["La configuration de cette option remplace les valeurs par d\xe9faut. Ajoutez ",(0,r.jsx)(s.code,{children:'"text"'})," ou ",(0,r.jsx)(s.code,{children:'"text-summary"'})," pour voir un r\xe9sum\xe9 de la couverture dans la sortie console."]})}),"\n",(0,r.jsx)(s.p,{children:"Des options suppl\xe9mentaires peuvent \xeatre pass\xe9es en utilisant la forme tuple. Par exemple, vous pouvez cacher les lignes de d\xe9claration de couverture pour tous les fichiers couverts\xa0:"}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  coverageReporters: ['clover', 'json', 'lcov', ['text', {skipFull: true}]],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  coverageReporters: ['clover', 'json', 'lcov', ['text', {skipFull: true}]],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.p,{children:["For more information about the options object shape refer to ",(0,r.jsx)(s.code,{children:"CoverageReporterWithOptions"})," type in the ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/tree/main/packages/jest-types/src/Config.ts",children:"type definitions"}),"."]}),"\n",(0,r.jsxs)(s.h3,{id:"coveragethreshold-object",children:[(0,r.jsx)(s.code,{children:"coverageThreshold"})," [object]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsxs)(s.p,{children:["Cela servira \xe0 configurer le seuil minimum pour les r\xe9sultats de la couverture. Les seuils peuvent \xeatre sp\xe9cifi\xe9s comme ",(0,r.jsx)(s.code,{children:"global"}),", comme ",(0,r.jsx)(s.a,{href:"https://github.com/isaacs/node-glob#glob-primer",children:"glob"}),", et comme un r\xe9pertoire ou un chemin de fichier. Si les seuils ne sont pas atteints, jest \xe9chouera. Les seuils sp\xe9cifi\xe9s en tant que nombre positif sont consid\xe9r\xe9s comme le pourcentage minimum requis. Les seuils sp\xe9cifi\xe9s comme un nombre n\xe9gatif repr\xe9sentent le nombre maximum d'entit\xe9s non couvertes autoris\xe9es."]}),"\n",(0,r.jsx)(s.p,{children:"Par exemple, avec la configuration suivante, jest \xe9chouera si la couverture des branches, des lignes et des fonctions est inf\xe9rieure \xe0 80%, ou s'il y a plus de 10 d\xe9clarations non couvertes\xa0:"}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  coverageThreshold: {\n    global: {\n      branches: 80,\n      functions: 80,\n      lines: 80,\n      statements: -10,\n    },\n  },\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  coverageThreshold: {\n    global: {\n      branches: 80,\n      functions: 80,\n      lines: 80,\n      statements: -10,\n    },\n  },\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.p,{children:["Si des globs ou des chemins sont sp\xe9cifi\xe9s \xe0 c\xf4t\xe9 de ",(0,r.jsx)(s.code,{children:"global"}),", les donn\xe9es de couverture pour les chemins correspondants seront soustraites de la couverture globale et les seuils seront appliqu\xe9s ind\xe9pendamment. Les seuils pour les globs sont appliqu\xe9s \xe0 tous les fichiers correspondant \xe0 la glob. Si le fichier sp\xe9cifi\xe9 par le chemin d'acc\xe8s n'est pas trouv\xe9, une erreur sera retourn\xe9e."]}),"\n",(0,r.jsx)(s.p,{children:"Par exemple, avec la configuration suivante\xa0:"}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  coverageThreshold: {\n    global: {\n      branches: 50,\n      functions: 50,\n      lines: 50,\n      statements: 50,\n    },\n    './src/components/': {\n      branches: 40,\n      statements: 40,\n    },\n    './src/reducers/**/*.js': {\n      statements: 90,\n    },\n    './src/api/very-important-module.js': {\n      branches: 100,\n      functions: 100,\n      lines: 100,\n      statements: 100,\n    },\n  },\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  coverageThreshold: {\n    global: {\n      branches: 50,\n      functions: 50,\n      lines: 50,\n      statements: 50,\n    },\n    './src/components/': {\n      branches: 40,\n      statements: 40,\n    },\n    './src/reducers/**/*.js': {\n      statements: 90,\n    },\n    './src/api/very-important-module.js': {\n      branches: 100,\n      functions: 100,\n      lines: 100,\n      statements: 100,\n    },\n  },\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.p,{children:"Jest \xe9chouera si\xa0:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Le r\xe9pertoire ",(0,r.jsx)(s.code,{children:"./src/composants"})," a une couverture de branche ou pour les instructions inf\xe9rieure \xe0 40%."]}),"\n",(0,r.jsxs)(s.li,{children:["Un des fichiers correspondant au glob ",(0,r.jsx)(s.code,{children:"./src/reducers/**/*.js"})," a une couverture des instructions inf\xe9rieure \xe0 90%."]}),"\n",(0,r.jsxs)(s.li,{children:["Le fichier ",(0,r.jsx)(s.code,{children:"./src/api/very-important-module.js"})," a une couverture inf\xe9rieure \xe0 100%."]}),"\n",(0,r.jsxs)(s.li,{children:["Tous les autres fichiers combin\xe9s ont une couverture inf\xe9rieure \xe0 50% (",(0,r.jsx)(s.code,{children:"global"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"dependencyextractor-string",children:[(0,r.jsx)(s.code,{children:"dependencyExtractor"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsxs)(s.p,{children:["Cette option permet l'utilisation d'un extracteur de d\xe9pendance personnalis\xe9. Il doit s'agir d'un module de node qui exporte un objet avec une fonction ",(0,r.jsx)(s.code,{children:"extract"}),". Par exemple\xa0:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-javascript",children:"const crypto = require('crypto');\nconst fs = require('fs');\n\nmodule.exports = {\n  extract(code, filePath, defaultExtract) {\n    const deps = defaultExtract(code, filePath);\n    // Scanne le fichier et ajoute les d\xe9pendances dans `deps` (qui est un `Set`)\n    return deps;\n  },\n  getCacheKey() {\n    return crypto\n      .createHash('md5')\n      .update(fs.readFileSync(__filename))\n      .digest('hex');\n  },\n};\n"})}),"\n",(0,r.jsxs)(s.p,{children:["La fonction ",(0,r.jsx)(s.code,{children:"extract"})," doit retourner un it\xe9rable (",(0,r.jsx)(s.code,{children:"Array"}),", ",(0,r.jsx)(s.code,{children:"Set"}),", etc.) avec les d\xe9pendances trouv\xe9es dans le code."]}),"\n",(0,r.jsxs)(s.p,{children:["Ce module peut \xe9galement contenir une fonction ",(0,r.jsx)(s.code,{children:"getCacheKey"})," pour g\xe9n\xe9rer une cl\xe9 de cache afin de d\xe9terminer si la logique a chang\xe9 et si tous les artefacts mis en cache qui s'appuient sur elle doivent \xeatre retir\xe9s."]}),"\n",(0,r.jsxs)(s.h3,{id:"displayname-string-object",children:[(0,r.jsx)(s.code,{children:"displayName"})," [string, object]"]}),"\n",(0,r.jsxs)(s.p,{children:["par d\xe9faut : ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsx)(s.p,{children:"Permet de placer un libell\xe9 \xe0 c\xf4t\xe9 d'un test en cours d'ex\xe9cution. Cela devient plus utile dans les d\xe9p\xf4ts multi-projets o\xf9 il peut y avoir de nombreux fichiers de configuration jest. Ceci indique visuellement \xe0 quel projet appartient un test."}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  displayName: 'CLIENT',\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  displayName: 'CLIENT',\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.p,{children:["Alternativement, un objet avec les propri\xe9t\xe9s ",(0,r.jsx)(s.code,{children:"name"})," et ",(0,r.jsx)(s.code,{children:"color"})," peut \xeatre pass\xe9. Cela permet une configuration personnalis\xe9e de la couleur de fond de displayName. ",(0,r.jsx)(s.code,{children:"displayName"})," est blanc par d\xe9faut quand sa valeur est une cha\xeene. Jest utilise ",(0,r.jsx)(s.a,{href:"https://github.com/chalk/chalk",children:(0,r.jsx)(s.code,{children:"chalk"})})," pour fournir la couleur. Ainsi, toutes les options valides pour les couleurs support\xe9es par ",(0,r.jsx)(s.code,{children:"chalk"})," sont \xe9galement support\xe9es par jest."]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  displayName: {\n    name: 'CLIENT',\n    color: 'blue',\n  },\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  displayName: {\n    name: 'CLIENT',\n    color: 'blue',\n  },\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.h3,{id:"errorondeprecated-boolean",children:[(0,r.jsx)(s.code,{children:"errorOnDeprecated"})," [boolean]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"false"})]}),"\n",(0,r.jsx)(s.p,{children:"Fait en sorte que l'appel d'API obsol\xe8tes g\xe9n\xe8re des messages d'erreur utiles. Utile pour faciliter le processus de mise \xe0 jour."}),"\n",(0,r.jsxs)(s.h3,{id:"extensionstotreatasesm-arraystring",children:[(0,r.jsx)(s.code,{children:"extensionsToTreatAsEsm"})," [array<string>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"[]"})]}),"\n",(0,r.jsxs)(s.p,{children:["Jest ex\xe9cutera les fichiers ",(0,r.jsx)(s.code,{children:".mjs"})," et ",(0,r.jsx)(s.code,{children:".js"})," avec le champ ",(0,r.jsx)(s.code,{children:"type"})," de ",(0,r.jsx)(s.code,{children:"package.json"})," le plus proche d\xe9fini sur ",(0,r.jsx)(s.code,{children:"module"})," en tant que modules ECMAScript. Si vous avez d'autres fichiers qui devraient s'ex\xe9cuter avec ESM natif, vous devez sp\xe9cifier leur extension de fichier ici."]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  extensionsToTreatAsEsm: ['.ts'],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  extensionsToTreatAsEsm: ['.ts'],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.admonition,{title:"attention",type:"caution",children:(0,r.jsxs)(s.p,{children:["Le support ESM de Jest est encore exp\xe9rimental, voir ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/ecmascript-modules",children:"sa documentation pour plus de d\xe9tails"}),"."]})}),"\n",(0,r.jsxs)(s.h3,{id:"faketimers-object",children:[(0,r.jsx)(s.code,{children:"fakeTimers"})," [object]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"{}"})]}),"\n",(0,r.jsxs)(s.p,{children:["Les faux temporisateurs peuvent \xeatre utiles lorsqu'un morceau de code d\xe9finit un long d\xe9lai d'attente que nous ne voulons pas attendre dans un test. Pour plus de d\xe9tails, consultez le ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/timer-mocks",children:"guide des faux temporisateurs"})," et la ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/jest-object#fake-timers",children:"documentation API"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Cette option fournit la configuration par d\xe9faut des faux temporisateurs pour tous les tests. L'appel \xe0 ",(0,r.jsx)(s.code,{children:"jest.useFakeTimers()"})," dans un fichier de test utilisera ces options ou les remplacera si un objet de configuration est pass\xe9. Par exemple, vous pouvez dire \xe0 Jest de conserver l'impl\xe9mentation originale de ",(0,r.jsx)(s.code,{children:"process.nextTick()"})," et ajuster la limite des temporisateurs r\xe9cursifs qui seront ex\xe9cut\xe9s\xa0:"]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  fakeTimers: {\n    doNotFake: ['nextTick'],\n    timerLimit: 1000,\n  },\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  fakeTimers: {\n    doNotFake: ['nextTick'],\n    timerLimit: 1000,\n  },\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:'title="fakeTime.test.js"',children:"// installe de faux temporisateurs pour ce fichier en utilisant les options de la configuration Jest\njest.useFakeTimers();\n\ntest('augmente la limite des temporisateurs r\xe9cursifs pour ce test et les tests suivants', () => {\n  jest.useFakeTimers({timerLimit: 5000});\n  // ...\n});\n"})}),"\n",(0,r.jsxs)(s.admonition,{title:"astuce",type:"tip",children:[(0,r.jsxs)(s.p,{children:["Au lieu d'inclure ",(0,r.jsx)(s.code,{children:"jest.useFakeTimers()"})," dans chaque fichier de test, vous pouvez activer les faux temporisateurs globalement pour tous les tests dans votre configuration de Jest\xa0:"]}),(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  fakeTimers: {\n    enableGlobally: true,\n  },\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  fakeTimers: {\n    enableGlobally: true,\n  },\n};\n\nexport default config;\n"})})})]})]}),"\n",(0,r.jsx)(s.p,{children:"Options de configuration\xa0:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"type FakeableAPI =\n  | 'Date'\n  | 'hrtime'\n  | 'nextTick'\n  | 'performance'\n  | 'queueMicrotask'\n  | 'requestAnimationFrame'\n  | 'cancelAnimationFrame'\n  | 'requestIdleCallback'\n  | 'cancelIdleCallback'\n  | 'setImmediate'\n  | 'clearImmediate'\n  | 'setInterval'\n  | 'clearInterval'\n  | 'setTimeout'\n  | 'clearTimeout';\n\ntype ModernFakeTimersConfig = {\n  /**\n   * Si d\xe9fini \xe0 `true` tous les temporisateurs seront automatiquement avanc\xe9s de 20 millisecondes\n   * toutes les 20 millisecondes. Un delta de temps personnalis\xe9 peut \xeatre fourni en passant un nombre.\n   * La valeur par d\xe9faut est `false`.\n   */\n  advanceTimers?: boolean | number;\n  /**\n   * Liste des noms des APIs qui ne doivent pas \xeatre falsifi\xe9s. La valeur par d\xe9faut est `[]`, ce qui signifie que\n   * toutes les APIs sont falsifi\xe9es.\n   */\n  doNotFake?: Array<FakeableAPI>;\n  /** Si les faux temporisateurs doivent \xeatre activ\xe9s pour tous les fichiers de test. La valeur par d\xe9faut est `false`. */\n  enableGlobally?: boolean;\n  /**\n   * Utilise l'ancienne impl\xe9mentation des faux temporisateurs au lieu de celle support\xe9e par `@sinonjs/fake-timers`.\n   * La valeur par d\xe9faut est `false`.\n   */\n  legacyFakeTimers?: boolean;\n  /** D\xe9finit l'heure actuelle du syst\xe8me \xe0 utiliser par de faux temporisateurs. La valeur par d\xe9faut est `Date.now()`. */\n  now?: number;\n  /** Nombre maximum de temporisateurs r\xe9cursifs qui seront ex\xe9cut\xe9s. La valeur par d\xe9faut est `100_000` temporisateurs. */\n  timerLimit?: number;\n};\n"})}),"\n",(0,r.jsxs)(s.admonition,{title:"Les anciens faux temporisateurs",type:"info",children:[(0,r.jsx)(s.p,{children:"Pour certaines raisons, il se peut que vous deviez utiliser une ancienne impl\xe9mentation de faux temporisateurs. Voici comment l'activer globalement (les options suppl\xe9mentaires ne sont pas prises en charge)\xa0:"}),(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  fakeTimers: {\n    enableGlobally: true,\n    legacyFakeTimers: true,\n  },\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  fakeTimers: {\n    enableGlobally: true,\n    legacyFakeTimers: true,\n  },\n};\n\nexport default config;\n"})})})]})]}),"\n",(0,r.jsxs)(s.h3,{id:"forcecoveragematch-arraystring",children:[(0,r.jsx)(s.code,{children:"forceCoverageMatch"})," [array<string>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"['']"})]}),"\n",(0,r.jsx)(s.p,{children:"Les fichiers de test sont normalement ignor\xe9s de la collecte de la couverture de code. Avec cette option, vous pouvez \xe9craser ce comportement et inclure les fichiers ignor\xe9s dans la couverture de code."}),"\n",(0,r.jsxs)(s.p,{children:["Par exemple, si vous avez des tests dans des fichiers sources nomm\xe9s avec l'extension ",(0,r.jsx)(s.code,{children:".t.js"})," comme suit :"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-javascript",metastring:'title="sum.t.js"',children:"export function sum(a, b) {\n  return a + b;\n}\n\nif (process.env.NODE_ENV === 'test') {\n  test('sum', () => {\n    expect(sum(1, 2)).toBe(3);\n  });\n}\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Vous pouvez collecter la couverture de ces fichiers avec le param\xe8tre ",(0,r.jsx)(s.code,{children:"forceCoverageMatch"}),"."]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  forceCoverageMatch: ['**/*.t.js'],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  forceCoverageMatch: ['**/*.t.js'],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.h3,{id:"globals-object",children:[(0,r.jsx)(s.code,{children:"globals"})," [object]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"{}"})]}),"\n",(0,r.jsx)(s.p,{children:"Un ensemble de variables globales qui doivent \xeatre disponibles dans tous les environnements de test."}),"\n",(0,r.jsxs)(s.p,{children:["Par exemple, ce qui suit cr\xe9e une variable globale ",(0,r.jsx)(s.code,{children:"__DEV__"})," d\xe9finie \xe0 ",(0,r.jsx)(s.code,{children:"true"})," dans tous les environnements de test\xa0:"]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  globals: {\n    __DEV__: true,\n  },\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  globals: {\n    __DEV__: true,\n  },\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.admonition,{title:"remarque",type:"note",children:(0,r.jsxs)(s.p,{children:["If you specify a global reference value (like an object or array) here, and some code mutates that value in the midst of running a test, that mutation will ",(0,r.jsx)(s.em,{children:"not"})," be persisted across test runs for other test files. De plus, l'objet ",(0,r.jsx)(s.code,{children:"globals"})," doit \xeatre s\xe9rialisable en json, donc il ne peut pas \xeatre utilis\xe9 pour sp\xe9cifier des fonctions globales. Pour cela, vous devez utiliser ",(0,r.jsx)(s.code,{children:"setupFiles"}),"."]})}),"\n",(0,r.jsxs)(s.h3,{id:"globalsetup-string",children:[(0,r.jsx)(s.code,{children:"globalSetup"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsxs)(s.p,{children:["Cette option permet l'utilisation d'un module de configuration global personnalis\xe9, qui doit exporter une fonction (elle peut \xeatre sync ou async). The function will be triggered once before all test suites and it will receive two arguments: Jest's ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/blob/v29.2.1/packages/jest-types/src/Config.ts#L358-L422",children:(0,r.jsx)(s.code,{children:"globalConfig"})})," and ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/blob/v29.2.1/packages/jest-types/src/Config.ts#L424-L481",children:(0,r.jsx)(s.code,{children:"projectConfig"})}),"."]}),"\n",(0,r.jsxs)(s.admonition,{type:"info",children:[(0,r.jsx)(s.p,{children:"Un module de configuration global configur\xe9 dans un projet (\xe0 l'aide d'un runner multi-projets) ne sera d\xe9clench\xe9 que lorsque vous ex\xe9cuterez au moins un test de ce projet."}),(0,r.jsxs)(s.p,{children:["Toute variable globale d\xe9finie par ",(0,r.jsx)(s.code,{children:"globalSetup"})," ne peut \xeatre lue que dans ",(0,r.jsx)(s.code,{children:"globalTeardown"}),". Vous ne pouvez pas r\xe9cup\xe9rer les globales d\xe9finies ici dans vos suites de test."]}),(0,r.jsxs)(s.p,{children:["Alors que la transformation du code est appliqu\xe9e au fichier d'installation li\xe9, Jest ",(0,r.jsx)(s.strong,{children:"ne transformera pas"})," tout code dans ",(0,r.jsx)(s.code,{children:"node_modules"}),". Cela est d\xfb \xe0 la n\xe9cessit\xe9 de charger les transformateurs r\xe9els (par exemple ",(0,r.jsx)(s.code,{children:"babel"})," ou ",(0,r.jsx)(s.code,{children:"typescript"}),") pour effectuer la transformation."]})]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:'title="setup.js"',children:"module.exports = async function (globalConfig, projectConfig) {\n  console.log(globalConfig.testPathPattern);\n  console.log(projectConfig.cache);\n\n  // D\xe9finit la r\xe9f\xe9rence \xe0 mongod afin de fermer le serveur pendant le nettoyage.\n  globalThis.__MONGOD__ = mongod;\n};\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:'title="teardown.js"',children:"module.exports = async function (globalConfig, projectConfig) {\n  console.log(globalConfig.testPathPattern);\n  console.log(projectConfig.cache);\n\n  await globalThis.__MONGOD__.stop();\n};\n"})}),"\n",(0,r.jsxs)(s.h3,{id:"globalteardown-string",children:[(0,r.jsx)(s.code,{children:"globalTeardown"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsxs)(s.p,{children:["Cette option permet l'utilisation d'un module de nettoyage global personnalis\xe9, qui doit exporter une fonction (elle peut \xeatre sync ou async). The function will be triggered once after all test suites and it will receive two arguments: Jest's ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/blob/v29.2.1/packages/jest-types/src/Config.ts#L358-L422",children:(0,r.jsx)(s.code,{children:"globalConfig"})})," and ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/blob/v29.2.1/packages/jest-types/src/Config.ts#L424-L481",children:(0,r.jsx)(s.code,{children:"projectConfig"})}),"."]}),"\n",(0,r.jsxs)(s.admonition,{type:"info",children:[(0,r.jsx)(s.p,{children:"Un module de nettoyage global configur\xe9 dans un projet (\xe0 l'aide d'un runner multi-projets) ne sera d\xe9clench\xe9 que lorsque vous ex\xe9cuterez au moins un test de ce projet."}),(0,r.jsxs)(s.p,{children:["La m\xeame mise en garde concernant la transformation des ",(0,r.jsx)(s.code,{children:"node_modules"})," que pour ",(0,r.jsx)(s.code,{children:"globalSetup"})," s'applique \xe0 ",(0,r.jsx)(s.code,{children:"globalTeardown"}),"."]})]}),"\n",(0,r.jsxs)(s.h3,{id:"haste-object",children:[(0,r.jsx)(s.code,{children:"haste"})," [object]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsxs)(s.p,{children:["Ceci sera utilis\xe9 pour configurer le comportement de ",(0,r.jsx)(s.code,{children:"jest-haste-map"}),", le syst\xe8me d'exploration de fichiers internes de Jest. Les options suivantes sont prises en charges\xa0:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"type HasteConfig = {\n  /** Si vous souhaitez hacher les fichiers en utilisant SHA-1. */\n  computeSha1?: boolean;\n  /** La plateforme \xe0 utiliser par d\xe9faut, par exemple 'ios'. */\n  defaultPlatform?: string | null;\n  /** Forcer l'utilisation des API `fs` de Node plut\xf4t que de se lancer dans `find` */\n  forceNodeFilesystemAPI? boolean ;\n  /**\n   * Suivre ou non les liens symboliques lors de l'indexation des fichiers.\n   * Cette option ne peut pas \xeatre utilis\xe9e dans les projets qui utilisent watchman.\n   * Les projets avec la valeur `watchman` \xe0 true seront en erreur si cette option est d\xe9finie \xe0 true.\n   */\n  enableSymlinks?: boolean;\n  /** Chemin vers une impl\xe9mentation personnalis\xe9e de Haste. */\n  hasteImplModulePath?: string;\n  /** Toutes les plateformes \xe0 cibler, par exemple ['ios', 'android']. */\n  platforms?: Array<string>;\n  /** S'il faut lancer une erreur en cas de collision de module. */\n  throwOnModuleCollision?: boolean;\n  /** Module HasteMap personnalis\xe9 */\n  hasteMapModulePath?: string;\n  /** S'il faut conserver tous les fichiers, autorisant par exemple la recherche des tests dans `node_modules`. */\n  retainAllFiles?: boolean;\n};\n"})}),"\n",(0,r.jsxs)(s.h3,{id:"injectglobals-boolean",children:[(0,r.jsx)(s.code,{children:"injectGlobals"})," [boolean]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"true"})]}),"\n",(0,r.jsxs)(s.p,{children:["Ins\xe9re les globales de Jest (",(0,r.jsx)(s.code,{children:"expect"}),", ",(0,r.jsx)(s.code,{children:"test"}),", ",(0,r.jsx)(s.code,{children:"describe"}),", ",(0,r.jsx)(s.code,{children:"beforeEach"})," etc.) dans l'environnement global. Si vous d\xe9finissez cette valeur \xe0 ",(0,r.jsx)(s.code,{children:"false"}),", vous devez par exemple importer \xe0 partir de ",(0,r.jsx)(s.code,{children:"@jest/globals"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"import {expect, jest, test} from '@jest/globals';\n\njest.useFakeTimers();\n\ntest('un test', () => {\n  expect(Date.now()).toBe(0);\n});\n"})}),"\n",(0,r.jsx)(s.admonition,{title:"remarque",type:"note",children:(0,r.jsxs)(s.p,{children:["Cette option n'est prise en charge qu'en utilisant le runner de test ",(0,r.jsx)(s.code,{children:"jest-circus"})," par d\xe9faut."]})}),"\n",(0,r.jsxs)(s.h3,{id:"maxconcurrency-number",children:[(0,r.jsx)(s.code,{children:"maxConcurrency"})," [number]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"5"})]}),"\n",(0,r.jsxs)(s.p,{children:["Un nombre limitant le nombre de tests qui sont autoris\xe9s \xe0 s'ex\xe9cuter en m\xeame temps lors de l'utilisation de ",(0,r.jsx)(s.code,{children:"test.concurrent"}),". Tout test d\xe9passant cette limite sera mis en file d'attente et ex\xe9cut\xe9 d\xe8s qu'un sera lib\xe9r\xe9."]}),"\n",(0,r.jsxs)(s.h3,{id:"maxworkers-number--string",children:[(0,r.jsx)(s.code,{children:"maxWorkers"})," [number | string]"]}),"\n",(0,r.jsx)(s.p,{children:"Sp\xe9cifie le maximum de processus que l'orchestrateur de processus lancera pour ex\xe9cuter les tests. En mode d'ex\xe9cution simple, il s'agit par d\xe9faut du nombre de c\u0153urs disponibles sur votre machine, moins un pour le thread principal. En mode surveillance, il s'agit par d\xe9faut de la moiti\xe9 des c\u0153urs disponibles sur votre machine afin de s'assurer que Jest reste discret et ne paralyse pas votre machine. Il peut \xeatre utile d'utiliser cette option dans les environnements avec des ressources limit\xe9es comme les environnements de CI, mais la valeur par d\xe9faut devrait \xeatre suffisante pour la plupart des cas d\u2019utilisation."}),"\n",(0,r.jsx)(s.p,{children:"Pour les environnements avec des processeurs disponibles variables, vous pouvez utiliser une configuration bas\xe9e sur le pourcentage\xa0:"}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  maxWorkers: '50%',\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  maxWorkers: '50%',\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.h3,{id:"moduledirectories-arraystring",children:[(0,r.jsx)(s.code,{children:"moduleDirectories"})," [array<string>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:'["node_modules"]'})]}),"\n",(0,r.jsxs)(s.p,{children:["Un tableau de noms de r\xe9pertoires \xe0 rechercher de mani\xe8re r\xe9cursive \xe0 partir de l'emplacement du module requis. D\xe9finir cette option va ",(0,r.jsx)(s.em,{children:"surcharger"})," la valeur par d\xe9faut, si vous souhaitez toujours rechercher ",(0,r.jsx)(s.code,{children:"node_modules"})," pour les paquets, incluez-le avec toutes les autres options\xa0:"]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  moduleDirectories: ['node_modules', 'bower_components'],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  moduleDirectories: ['node_modules', 'bower_components'],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.h3,{id:"modulefileextensions-arraystring",children:[(0,r.jsx)(s.code,{children:"moduleFileExtensions"})," [array<string>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:'["js", "mjs", "cjs", "jsx", "ts", "tsx", "json", "node"]'})]}),"\n",(0,r.jsx)(s.p,{children:"Un tableau d'extensions de fichiers que vos modules utilisent. Si vous demandez des modules sans sp\xe9cifier d'extension de fichier, voici les extensions que Jest recherchera, dans l'ordre de gauche \xe0 droite."}),"\n",(0,r.jsx)(s.p,{children:'Nous recommandons de placer les extensions les plus couramment utilis\xe9es dans votre projet sur la gauche, donc si vous utilisez TypeScript, vous pouvez envisager de d\xe9placer "ts" et/ou "tsx" au d\xe9but du tableau.'}),"\n",(0,r.jsxs)(s.h3,{id:"modulenamemapper-objectstring-string--arraystring",children:[(0,r.jsx)(s.code,{children:"moduleNameMapper"})," [object<string, string | array<string>>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"null"})]}),"\n",(0,r.jsx)(s.p,{children:"Une correspondance entre les expressions r\xe9guli\xe8res et les noms de modules ou les tableaux de noms de modules, qui permet d'extraire des ressources, comme des images ou des styles, avec un seul module."}),"\n",(0,r.jsx)(s.p,{children:"Les modules qui sont associ\xe9s \xe0 un alias sont d\xe9-simul\xe9s par d\xe9faut, que la simulation automatique soit activ\xe9 ou non."}),"\n",(0,r.jsxs)(s.p,{children:["Utilisez le jeton de cha\xeene ",(0,r.jsx)(s.code,{children:"<rootDir>"})," pour faire r\xe9f\xe9rence \xe0 la valeur ",(0,r.jsx)(s.a,{href:"#rootdir-string",children:(0,r.jsx)(s.code,{children:"rootDir"})})," si vous souhaitez utiliser les chemins d'acc\xe8s aux fichiers."]}),"\n",(0,r.jsx)(s.p,{children:"En outre, vous pouvez substituer des groupes de regex captur\xe9s en utilisant des r\xe9tro r\xe9f\xe9rences num\xe9rot\xe9es."}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  moduleNameMapper: {\n    '^image![a-zA-Z0-9$_-]+$': 'GlobalImageStub',\n    '^[./a-zA-Z0-9$_-]+\\\\.png$': '<rootDir>/RelativeImageStub.js',\n    'module_name_(.*)': '<rootDir>/substituted_module_$1.js',\n    'assets/(.*)': [\n      '<rootDir>/images/$1',\n      '<rootDir>/photos/$1',\n      '<rootDir>/recipes/$1',\n    ],\n  },\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  moduleNameMapper: {\n    '^image![a-zA-Z0-9$_-]+$': 'GlobalImageStub',\n    '^[./a-zA-Z0-9$_-]+\\\\.png$': '<rootDir>/RelativeImageStub.js',\n    'module_name_(.*)': '<rootDir>/substituted_module_$1.js',\n    'assets/(.*)': [\n      '<rootDir>/images/$1',\n      '<rootDir>/photos/$1',\n      '<rootDir>/recipes/$1',\n    ],\n  },\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.p,{children:"L'ordre dans lequel les correspondances sont d\xe9finies est important. Les patterns sont v\xe9rifi\xe9s un par un jusqu'\xe0 ce qu'il y en ait un qui convienne. La r\xe8gle la plus sp\xe9cifique doit \xeatre cit\xe9e en premier. C'est \xe9galement vrai pour les tableaux de noms de modules."}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["Si vous fournissez le nom du module sans les limites ",(0,r.jsx)(s.code,{children:"^$"}),", cela peut provoquer des erreurs difficiles \xe0 rep\xe9rer. Par exemple\xa0: ",(0,r.jsx)(s.code,{children:"relay"})," remplacera tous les modules qui contiennent ",(0,r.jsx)(s.code,{children:"relay"})," comme une sous-cha\xeene dans son nom : ",(0,r.jsx)(s.code,{children:"relay"}),", ",(0,r.jsx)(s.code,{children:"react-relay"})," et ",(0,r.jsx)(s.code,{children:"graphql-relay"})," seront tous point\xe9s sur votre stub."]})}),"\n",(0,r.jsxs)(s.h3,{id:"modulepathignorepatterns-arraystring",children:[(0,r.jsx)(s.code,{children:"modulePathIgnorePatterns"})," [array<string>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"[]"})]}),"\n",(0,r.jsxs)(s.p,{children:["Un tableau de cha\xeenes de patterns regexp qui sont compar\xe9es \xe0 tous les chemins de modules avant que ces chemins ne soient consid\xe9r\xe9s comme \xab\xa0visibles\xa0\xbb par le chargeur de modules. Si le chemin d'un module correspond \xe0 un des patterns, il ne sera pas possible de faire un ",(0,r.jsx)(s.code,{children:"require()"})," dans l'environnement de test."]}),"\n",(0,r.jsxs)(s.p,{children:["Ces cha\xeenes de patterns correspondent au chemin d'acc\xe8s complet. Utilisez la chaine de caract\xe8re ",(0,r.jsx)(s.code,{children:"<rootDir>"})," pour inclure le chemin vers la racine de votre projet, pour l'emp\xeacher d'ignorer accidentellement tous vos fichiers dans les environnements qui auraient un r\xe9pertoire racine diff\xe9rent."]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  modulePathIgnorePatterns: ['<rootDir>/build/'],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  modulePathIgnorePatterns: ['<rootDir>/build/'],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.h3,{id:"modulepaths-arraystring",children:[(0,r.jsx)(s.code,{children:"modulePaths"})," [array<string>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"[]"})]}),"\n",(0,r.jsxs)(s.p,{children:["C'est une API alternative \xe0 la d\xe9finition de la variable d'environnement ",(0,r.jsx)(s.code,{children:"NODE_PATH"}),", ",(0,r.jsx)(s.code,{children:"modulePaths"})," est un tableau de chemins absolus vers des emplacements suppl\xe9mentaires \xe0 rechercher lors de la r\xe9solution des modules. Utilisez le jeton de cha\xeene ",(0,r.jsx)(s.code,{children:"<rootDir>"})," pour inclure le chemin vers le r\xe9pertoire racine de votre projet."]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  modulePaths: ['<rootDir>/app/'],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  modulePaths: ['<rootDir>/app/'],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.h3,{id:"notify-boolean",children:[(0,r.jsx)(s.code,{children:"notify"})," [boolean]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"false"})]}),"\n",(0,r.jsxs)(s.p,{children:["Active les notifications de l'OS pour les r\xe9sultats de test. Pour afficher les notifications, Jest a besoin du package ",(0,r.jsx)(s.a,{href:"https://github.com/mikaelbr/node-notifier",children:(0,r.jsx)(s.code,{children:"node-notifier"})})," qui doit \xeatre install\xe9 en plus\xa0:"]}),"\n",(0,r.jsxs)(i.Z,{groupId:"npm2yarn",children:[(0,r.jsx)(o.Z,{value:"npm",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"npm install --save-dev node-notifier\n"})})}),(0,r.jsx)(o.Z,{value:"yarn",label:"Yarn",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"yarn add --dev node-notifier\n"})})}),(0,r.jsx)(o.Z,{value:"pnpm",label:"pnpm",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"pnpm add --save-dev node-notifier\n"})})})]}),"\n",(0,r.jsxs)(s.admonition,{title:"astuce",type:"tip",children:[(0,r.jsxs)(s.p,{children:["Sur macOS, n'oubliez pas d'autoriser les notifications depuis le ",(0,r.jsx)(s.code,{children:"terminal-notifier"})," sous Pr\xe9f\xe9rences Syst\xe8me > Notifications & Focus."]}),(0,r.jsxs)(s.p,{children:["Sous Windows, ",(0,r.jsx)(s.code,{children:"node-notifier"})," cr\xe9e une nouvelle entr\xe9e dans le menu de d\xe9marrage \xe0 la premi\xe8re utilisation et n'affiche pas la notification. Les notifications seront affich\xe9es correctement lors des ex\xe9cutions suivantes."]})]}),"\n",(0,r.jsxs)(s.h3,{id:"notifymode-string",children:[(0,r.jsx)(s.code,{children:"notifyMode"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"failure-change"})]}),"\n",(0,r.jsxs)(s.p,{children:["Sp\xe9cifie le mode de notification. N\xe9cessite ",(0,r.jsx)(s.code,{children:"notify : true"}),"."]}),"\n",(0,r.jsx)(s.h4,{id:"modes",children:"Modes"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"always"}),"\xa0: toujours envoyer une notification."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"failure"}),"\xa0: envoyer une notification lorsque les tests \xe9chouent."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"success"}),"\xa0: envoyer une notification lorsque les tests r\xe9ussissent."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"change"}),"\xa0: envoyer une notification lorsque le statut a chang\xe9."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"success-change"}),"\xa0: envoyer une notification lorsque les tests r\xe9ussissent ou une fois lorsqu'ils \xe9chouent."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"failure-change"}),"\xa0: envoyer une notification lorsque les tests \xe9chouent ou une fois lorsqu'ils r\xe9ussissent."]}),"\n"]}),"\n",(0,r.jsxs)(s.h3,{id:"preset-string",children:[(0,r.jsx)(s.code,{children:"preset"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsxs)(s.p,{children:["Un preset qui est utilis\xe9 comme base pour la configuration de Jest. Un preset doit pointer vers un module npm qui a un fichier ",(0,r.jsx)(s.code,{children:"jest-preset.json"}),", ",(0,r.jsx)(s.code,{children:"jest-preset.js"}),", ",(0,r.jsx)(s.code,{children:"jest-preset.cjs"})," ou ",(0,r.jsx)(s.code,{children:"jest-preset.mjs"})," \xe0 la racine."]}),"\n",(0,r.jsxs)(s.p,{children:["Par exemple, ce preset ",(0,r.jsx)(s.code,{children:"foo-bar/jest-preset.js"})," sera configur\xe9 comme suit\xa0:"]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  preset: 'foo-bar',\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  preset: 'foo-bar',\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.p,{children:"Les presets peuvent \xe9galement \xeatre relatifs aux chemins du syst\xe8me de fichiers:"}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  preset: './node_modules/foo-bar/jest-preset.js',\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  preset: './node_modules/foo-bar/jest-preset.js',\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["If you also have specified ",(0,r.jsx)(s.a,{href:"#rootdir-string",children:(0,r.jsx)(s.code,{children:"rootDir"})}),", the resolution of this file will be relative to that root directory."]})}),"\n",(0,r.jsxs)(s.h3,{id:"prettierpath-string",children:[(0,r.jsx)(s.code,{children:"prettierPath"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"'prettier'"})]}),"\n",(0,r.jsxs)(s.p,{children:["D\xe9finit le chemin vers le module de node ",(0,r.jsx)(s.a,{href:"https://prettier.io/",children:(0,r.jsx)(s.code,{children:"prettier"})})," utilis\xe9 pour mettre \xe0 jour les snapshots en ligne."]}),"\n",(0,r.jsxs)(s.h3,{id:"projects-arraystring--projectconfig",children:[(0,r.jsx)(s.code,{children:"projects"})," [array<string | ProjectConfig>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsxs)(s.p,{children:["Lorsque la configuration ",(0,r.jsx)(s.code,{children:"projects"})," est fournie avec un tableau de chemins ou de patterns glob, Jest ex\xe9cutera les tests dans tous les projets sp\xe9cifi\xe9s en m\xeame temps. C'est id\xe9al pour les monorepos ou lorsque vous travaillez sur plusieurs projets en m\xeame temps."]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  projects: ['<rootDir>', '<rootDir>/examples/*'],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  projects: ['<rootDir>', '<rootDir>/examples/*'],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.p,{children:"Cet exemple de configuration ex\xe9cutera Jest dans le r\xe9pertoire racine ainsi que dans tous les dossiers du r\xe9pertoire examples. Vous pouvez avoir un nombre illimit\xe9 de projets en cours d'ex\xe9cution dans la m\xeame instance Jest."}),"\n",(0,r.jsxs)(s.p,{children:["La fonctionnalit\xe9 des projets peut \xe9galement \xeatre utilis\xe9e pour ex\xe9cuter plusieurs configurations ou plusieurs ",(0,r.jsx)(s.a,{href:"#runner-string",children:"runners"}),". Pour cela, vous pouvez passer un tableau d'objets de configuration. Par exemple, pour ex\xe9cuter \xe0 la fois des tests et ESLint (via ",(0,r.jsx)(s.a,{href:"https://github.com/jest-community/jest-runner-eslint",children:"jest-runner-eslint"}),") dans la m\xeame invocation de Jest\xa0:"]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  projects: [\n    {\n      displayName: 'test',\n    },\n    {\n      displayName: 'lint',\n      runner: 'jest-runner-eslint',\n      testMatch: ['<rootDir>/**/*.js'],\n    },\n  ],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  projects: [\n    {\n      displayName: 'test',\n    },\n    {\n      displayName: 'lint',\n      runner: 'jest-runner-eslint',\n      testMatch: ['<rootDir>/**/*.js'],\n    },\n  ],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,r.jsxs)(s.p,{children:["Lors de l'utilisation d'un runner multi-projets, il est recommand\xe9 d'ajouter un ",(0,r.jsx)(s.code,{children:"displayName"})," pour chaque projet. Cela affichera le ",(0,r.jsx)(s.code,{children:"displayName"})," d'un projet \xe0 c\xf4t\xe9 de ses tests."]})}),"\n",(0,r.jsx)(s.admonition,{title:"remarque",type:"note",children:(0,r.jsxs)(s.p,{children:["With the ",(0,r.jsx)(s.code,{children:"projects"})," option enabled, Jest will copy the root-level configuration options to each individual child configuration during the test run, resolving its values in the child's context. This means that string tokens like ",(0,r.jsx)(s.code,{children:"<rootDir>"})," will point to the ",(0,r.jsx)(s.em,{children:"child's root directory"})," even if they are defined in the root-level configuration."]})}),"\n",(0,r.jsxs)(s.h3,{id:"reporters-arraymodulename--modulename-options",children:[(0,r.jsx)(s.code,{children:"reporters"})," [array<moduleName | [moduleName, options]>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsx)(s.p,{children:"Utilisez cette option de configuration pour ajouter des rapporteurs \xe0 Jest. Il doit s'agir d'une liste de noms de rapporteurs, des options suppl\xe9mentaires peuvent \xeatre pass\xe9es \xe0 un rapporteur en utilisant la forme tuple :"}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  reporters: [\n    'default',\n    ['<rootDir>/custom-reporter.js', {banana: 'yes', pineapple: 'no'}],\n  ],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  reporters: [\n    'default',\n    ['<rootDir>/custom-reporter.js', {banana: 'yes', pineapple: 'no'}],\n  ],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.h4,{id:"rapporteur-par-d\xe9faut",children:"Rapporteur par d\xe9faut"}),"\n",(0,r.jsxs)(s.p,{children:["Si des rapporteurs personnalis\xe9s sont sp\xe9cifi\xe9s, le rapporteur par d\xe9faut de Jest sera \xe9cras\xe9. Si vous souhaitez le conserver, ",(0,r.jsx)(s.code,{children:"'default'"})," doit \xeatre pass\xe9 comme nom de rapporteur\xa0:"]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  reporters: [\n    'default',\n    ['jest-junit', {outputDirectory: 'reports', outputName: 'report.xml'}],\n  ],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  reporters: [\n    'default',\n    ['jest-junit', {outputDirectory: 'reports', outputName: 'report.xml'}],\n  ],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.h4,{id:"rapporteur-github-actions",children:"Rapporteur GitHub Actions"}),"\n",(0,r.jsxs)(s.p,{children:["If included in the list, the built-in GitHub Actions Reporter will annotate changed files with test failure messages and (if used with ",(0,r.jsx)(s.code,{children:"'silent: false'"}),") print logs with github group features for easy navigation. Note that ",(0,r.jsx)(s.code,{children:"'default'"})," should not be used in this case as ",(0,r.jsx)(s.code,{children:"'github-actions'"})," will handle that already, so remember to also include ",(0,r.jsx)(s.code,{children:"'summary'"}),". If you wish to use it only for annotations simply leave only the reporter without options as the default value of ",(0,r.jsx)(s.code,{children:"'silent'"})," is ",(0,r.jsx)(s.code,{children:"'true'"}),":"]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  reporters: [['github-actions', {silent: false}], 'summary'],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  reporters: [['github-actions', {silent: false}], 'summary'],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.h4,{id:"rapporteur-summary",children:"Rapporteur summary"}),"\n",(0,r.jsxs)(s.p,{children:["Le rapport summary affiche le r\xe9sum\xe9 de tous les tests. Il fait partie du rapporteur par d\xe9faut, donc il sera activ\xe9 si ",(0,r.jsx)(s.code,{children:"'default'"})," est inclus dans la liste. Par exemple, vous pouvez l'utiliser en tant que rapporteur autonome au lieu de celui par d\xe9faut, ou en combinaison avec le ",(0,r.jsx)(s.a,{href:"https://github.com/rickhanlonii/jest-silent-reporter",children:"rapporteur Silent"}),"\xa0:"]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  reporters: ['jest-silent-reporter', 'summary'],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  reporters: ['jest-silent-reporter', 'summary'],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.h4,{id:"rapporteurs-personnalis\xe9s",children:"Rapporteurs personnalis\xe9s"}),"\n",(0,r.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,r.jsxs)(s.p,{children:["Vous avez faim de rapporteurs\xa0? Jetez un coup d'\u0153il \xe0 la longue liste de ",(0,r.jsx)(s.a,{href:"https://github.com/jest-community/awesome-jest/blob/main/README.md#reporters",children:"rapporteurs g\xe9niaux"})," de Awesome Jest."]})}),"\n",(0,r.jsxs)(s.p,{children:["Custom reporter module must export a class that takes ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/blob/v29.2.1/packages/jest-types/src/Config.ts#L358-L422",children:(0,r.jsx)(s.code,{children:"globalConfig"})}),", ",(0,r.jsx)(s.code,{children:"reporterOptions"})," and ",(0,r.jsx)(s.code,{children:"reporterContext"})," as constructor arguments:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:'title="custom-reporter.js"',children:"class CustomReporter {\n  constructor(globalConfig, reporterOptions, reporterContext) {\n    this._globalConfig = globalConfig;\n    this._options = reporterOptions;\n    this._context = reporterContext;\n  }\n\n  onRunComplete(testContexts, results) {\n    console.log('Sortie du rapporteur personnalis\xe9\xa0:');\n    console.log('config globale\xa0: ', this._globalConfig);\n    console.log('options pour ce rapporteur \xe0 partir de la configuration de Jest\xa0: ', this._options);\n    console.log('contexte du rapporteur transmis par le planificateur de test\xa0: ', this._context);\n  }\n\n  // En option, les rapporteurs peuvent forcer Jest \xe0 sortir avec un code diff\xe9rent de z\xe9ro en retournant\n  // une `Error` de la m\xe9thode `getLastError()`.\n  getLastError() {\n    if (this._shouldFail) {\n      return new Error('Erreur personnalis\xe9e signal\xe9e\xa0!');\n    }\n  }\n}\n\nmodule.exports = CustomReporter;\n"})}),"\n",(0,r.jsx)(s.admonition,{title:"remarque",type:"note",children:(0,r.jsxs)(s.p,{children:["For the full list of hooks and argument types see the ",(0,r.jsx)(s.code,{children:"Reporter"})," interface in ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/blob/main/packages/jest-reporters/src/types.ts",children:"packages/jest-reporters/src/types.ts"}),"."]})}),"\n",(0,r.jsxs)(s.h3,{id:"resetmocks-boolean",children:[(0,r.jsx)(s.code,{children:"resetMocks"})," [boolean]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"false"})]}),"\n",(0,r.jsxs)(s.p,{children:["R\xe9initialisation automatique de l'\xe9tat de la simulation avant chaque test. \xc9quivalent \xe0 l'appel de ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/jest-object#jestresetallmocks",children:(0,r.jsx)(s.code,{children:"jest.resetAllMocks()"})})," avant chaque test. Cela conduira \xe0 la destruction des impl\xe9mentations fictives des simulations, mais ne r\xe9tablira pas leur impl\xe9mentation initiale."]}),"\n",(0,r.jsxs)(s.h3,{id:"resetmodules-boolean",children:[(0,r.jsx)(s.code,{children:"resetModules"})," [boolean]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"false"})]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut, chaque fichier de test obtient son propre registre de modules ind\xe9pendant. L'activation de ",(0,r.jsx)(s.code,{children:"resetModules"})," va un peu plus loin et r\xe9initialise le registre des modules avant d'ex\xe9cuter chaque test individuel. Ceci est utile pour isoler les modules pour chaque test afin que l'\xe9tat du module local n'entre pas en conflit entre les tests. Cela peut \xeatre fait par programmation en utilisant ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/jest-object#jestresetmodules",children:(0,r.jsx)(s.code,{children:"jest.resetModules()"})}),"."]}),"\n",(0,r.jsxs)(s.h3,{id:"resolver-string",children:[(0,r.jsx)(s.code,{children:"resolver"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsxs)(s.p,{children:["Cette option permet d'utiliser un r\xe9solveur personnalis\xe9. Ce r\xe9solveur doit \xeatre un module qui exporte ",(0,r.jsx)(s.em,{children:"soit"}),"\xa0:"]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["une fonction qui attend une cha\xeene comme premier argument pour le chemin \xe0 r\xe9soudre et un objet d'options comme second argument. La fonction doit soit retourner un chemin d'acc\xe8s au module qui doit \xeatre r\xe9solu, soit lancer une erreur si le module est introuvable. ",(0,r.jsx)(s.em,{children:"ou"})]}),"\n",(0,r.jsxs)(s.li,{children:["un objet contenant des propri\xe9t\xe9s ",(0,r.jsx)(s.code,{children:"async"})," et/ou ",(0,r.jsx)(s.code,{children:"sync"}),". La propri\xe9t\xe9 ",(0,r.jsx)(s.code,{children:"sync"})," doit \xeatre une fonction avec la forme expliqu\xe9e ci-dessus, et la propri\xe9t\xe9 ",(0,r.jsx)(s.code,{children:"async"})," doit \xe9galement \xeatre une fonction qui accepte les m\xeames arguments, mais renvoie une promesse qui se r\xe9sout avec le chemin vers le module ou se rejette avec une erreur."]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"L'objet d'options fourni aux r\xe9solveurs a la forme suivante\xa0:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"type ResolverOptions = {\n  /** R\xe9pertoire \xe0 partir duquel commencer la r\xe9solution. */\n  basedir: string;\n  /** Liste des conditions d'exportation. */\n  conditions?: Array<string>;\n  /** Instance du r\xe9solveur par d\xe9faut. */\n  defaultResolver: (path: string, options: ResolverOptions) => string;\n  /** Liste des extensions de fichiers \xe0 rechercher dans l'ordre. */\n  extensions?: Array<string>;\n  /** Liste des noms de r\xe9pertoires \xe0 rechercher dans les modules r\xe9cursivement. */\n  moduleDirectory?: Array<string>;\n  /** Liste de `require.paths` \xe0 utiliser si rien n'est trouv\xe9 dans `node_modules`. */\n  paths?: Array<string>;\n  /** Permet de transformer le contenu du `package.json` analys\xe9. */\n  packageFilter?: (pkg: PackageJSON, file: string, dir: string) => PackageJSON;\n  /** Permet de transformer un chemin dans un package. */\n  pathFilter?: (pkg: PackageJSON, path: string, relativePath: string) => string;\n  /** R\xe9pertoire racine actuel. */\n  rootDir?: string;\n};\n"})}),"\n",(0,r.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,r.jsxs)(s.p,{children:["Le ",(0,r.jsx)(s.code,{children:"defaultResolver"})," pass\xe9 en option est le r\xe9solveur par d\xe9faut de Jest, ce qui peut \xeatre utile lorsque vous \xe9crivez votre propre r\xe9solveur. Il prend les m\xeames arguments que votre synchrone personnalis\xe9, par exemple ",(0,r.jsx)(s.code,{children:"(path, options)"})," et renvoie une cha\xeene ou des exceptions."]})}),"\n",(0,r.jsxs)(s.p,{children:["Par exemple, si vous voulez respecter le champ ",(0,r.jsx)(s.a,{href:"https://github.com/browserify/browserify-handbook/blob/master/readme.markdown#browser-field",children:(0,r.jsx)(s.code,{children:'"browser"'})})," de Browserify, vous pouvez utiliser le r\xe9solveur suivant\xa0:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:'title="resolver.js"',children:"const browserResolve = require('browser-resolve');\n\nmodule.exports = browserResolve.sync;\n"})}),"\n",(0,r.jsx)(s.p,{children:"Et ajoutez-le \xe0 la configuration de Jest\xa0:"}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  resolver: '<rootDir>/resolver.js',\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  resolver: '<rootDir>/resolver.js',\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.p,{children:["En combinant ",(0,r.jsx)(s.code,{children:"defaultResolver"})," et ",(0,r.jsx)(s.code,{children:"packageFilter"})," nous pouvons impl\xe9menter un ",(0,r.jsx)(s.code,{children:"package.json"})," \xab\xa0pr\xe9-processeur\xa0\xbb qui nous permet de changer la fa\xe7on dont le r\xe9solveur par d\xe9faut va r\xe9soudre les modules. Par exemple, imaginons que nous souhaitons utiliser le champ ",(0,r.jsx)(s.code,{children:'"module"'})," s'il est pr\xe9sent, sinon se rabattre sur ",(0,r.jsx)(s.code,{children:'"main"'})," :"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"module.exports = (path, options) => {\n  // Apelle defaultResolver, ainsi nous utilisons son cache, sa gestion d'erreur, etc.\n  return options.defaultResolver(path, {\n    ...options,\n    // Utilise packageFilter pour traiter `package.json` avant la r\xe9solution (voir https://www.npmjs.com/package/resolve#resolveid-opts-cb)\n    packageFilter: pkg => {\n      return {\n        ...pkg,\n        // Modifie la valeur de `main` avant la r\xe9solution du paquet\n        main: pkg.module || pkg.main,\n      };\n    },\n  });\n};\n"})}),"\n",(0,r.jsxs)(s.h3,{id:"restoremocks-boolean",children:[(0,r.jsx)(s.code,{children:"restoreMocks"})," [boolean]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"false"})]}),"\n",(0,r.jsxs)(s.p,{children:["Restauration automatique de l'\xe9tat de la simulation et l'impl\xe9mentation avant chaque test. \xc9quivalent \xe0 l'appel de ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/jest-object#jestrestoreallmocks",children:(0,r.jsx)(s.code,{children:"jest.restoreAllMocks()"})})," avant chaque test. Cela conduira \xe0 la destruction des impl\xe9mentations de tous les simulations et r\xe9tablira leur impl\xe9mentation initiale."]}),"\n",(0,r.jsxs)(s.h3,{id:"rootdir-string",children:[(0,r.jsx)(s.code,{children:"rootDir"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: La racine du r\xe9pertoire contenant votre ",(0,r.jsx)(s.a,{href:"#",children:"fichier de configuration"})," ",(0,r.jsx)(s.em,{children:"ou"})," le ",(0,r.jsx)(s.code,{children:"package.json"})," ",(0,r.jsx)(s.em,{children:"ou"})," le ",(0,r.jsx)(s.a,{href:"http://en.wikipedia.org/wiki/Pwd",children:(0,r.jsx)(s.code,{children:"pwd"})})," si aucun ",(0,r.jsx)(s.code,{children:"package.json"})," n'est trouv\xe9"]}),"\n",(0,r.jsxs)(s.p,{children:["Le r\xe9pertoire racine dans lequel Jest doit rechercher les tests et les modules. Si vous placez votre configuration Jest \xe0 l'int\xe9rieur de votre ",(0,r.jsx)(s.code,{children:"package.json"})," et que vous souhaitez que le r\xe9pertoire racine soit celui de votre d\xe9p\xf4t, la valeur de ce param\xe8tre de configuration sera par d\xe9faut le r\xe9pertoire du ",(0,r.jsx)(s.code,{children:"package.json"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Souvent, vous voudrez d\xe9finir ce param\xe8tre sur ",(0,r.jsx)(s.code,{children:"'src'"})," ou ",(0,r.jsx)(s.code,{children:"'lib'"}),", correspondant \xe0 l'endroit o\xf9 le code est stock\xe9 dans votre d\xe9p\xf4t."]}),"\n",(0,r.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,r.jsxs)(s.p,{children:["L'utilisation de ",(0,r.jsx)(s.code,{children:"'<rootDir>'"})," comme jeton de cha\xeene dans tout autre param\xe8tre de configuration bas\xe9 sur le chemin fera r\xe9f\xe9rence \xe0 cette valeur. Par exemple, si vous voulez que l'entr\xe9e ",(0,r.jsx)(s.a,{href:"#setupfiles-array",children:(0,r.jsx)(s.code,{children:"setupFiles"})})," pointe vers le fichier ",(0,r.jsx)(s.code,{children:"some-setup.js"})," \xe0 la racine de votre projet, vous pouvez d\xe9finir sa valeur \xe0 ",(0,r.jsx)(s.code,{children:"'<rootDir>/some-setup.js'"}),"."]})}),"\n",(0,r.jsxs)(s.h3,{id:"roots-arraystring",children:[(0,r.jsx)(s.code,{children:"roots"})," [array<string>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:'["<rootDir>"]'})]}),"\n",(0,r.jsx)(s.p,{children:"Une liste de chemins vers des r\xe9pertoires que Jest devrait utiliser pour rechercher des fichiers."}),"\n",(0,r.jsxs)(s.p,{children:["Il y a des cas o\xf9 vous souhaitez que Jest ne cherche que dans un seul sous-r\xe9pertoire (comme le cas o\xf9 vous avez un r\xe9pertoire ",(0,r.jsx)(s.code,{children:"src/"})," dans votre d\xe9p\xf4t), mais l'emp\xeache d'acc\xe9der au reste du d\xe9p\xf4t."]}),"\n",(0,r.jsxs)(s.admonition,{type:"info",children:[(0,r.jsxs)(s.p,{children:["Tandis que ",(0,r.jsx)(s.code,{children:"rootDir"})," est surtout utilis\xe9 comme un jeton \xe0 r\xe9utiliser dans d'autres options de configuration, ",(0,r.jsx)(s.code,{children:"roots"})," est utilis\xe9 par les internes de Jest pour localiser ",(0,r.jsx)(s.strong,{children:"les fichiers de test et les fichiers sources"}),". Cela s'applique \xe9galement lors de la recherche de simulations manuelles pour les modules de ",(0,r.jsx)(s.code,{children:"node_modules"})," (",(0,r.jsx)(s.code,{children:"__mocks__"})," devra r\xe9sider dans l'une des ",(0,r.jsx)(s.code,{children:"roots"}),")."]}),(0,r.jsxs)(s.p,{children:["Par d\xe9faut, ",(0,r.jsx)(s.code,{children:"roots"})," a une seule entr\xe9e ",(0,r.jsx)(s.code,{children:"<rootDir>"})," mais il y a des cas o\xf9 vous souhaitez avoir plusieurs racines dans un m\xeame projet, par exemple ",(0,r.jsx)(s.code,{children:'roots : ["<rootDir>/src/", "<rootDir>/tests/"]'}),"."]})]}),"\n",(0,r.jsxs)(s.h3,{id:"runner-string",children:[(0,r.jsx)(s.code,{children:"runner"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:'"jest-runner"'})]}),"\n",(0,r.jsx)(s.p,{children:"Cette option vous permet d'utiliser un runner personnalis\xe9 au lieu du runner de test par d\xe9faut de Jest. Exemples de runners inclus\xa0:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://github.com/jest-community/jest-runner-eslint",children:(0,r.jsx)(s.code,{children:"jest-runner-eslint"})})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://github.com/rogeliog/jest-runner-mocha",children:(0,r.jsx)(s.code,{children:"jest-runner-mocha"})})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://github.com/azz/jest-runner-tsc",children:(0,r.jsx)(s.code,{children:"jest-runner-tsc"})})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://github.com/keplersj/jest-runner-prettier",children:(0,r.jsx)(s.code,{children:"jest-runner-prettier"})})}),"\n"]}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["La valeur de la propri\xe9t\xe9 ",(0,r.jsx)(s.code,{children:"runner"})," peut omettre le pr\xe9fixe ",(0,r.jsx)(s.code,{children:"jest-runner-"})," du nom du paquet."]})}),"\n",(0,r.jsxs)(s.p,{children:["To write a test-runner, export a class with which accepts ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/blob/v29.2.1/packages/jest-types/src/Config.ts#L358-L422",children:(0,r.jsx)(s.code,{children:"globalConfig"})})," in the constructor, and has a ",(0,r.jsx)(s.code,{children:"runTests"})," method with the signature:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"async function runTests(\n  tests: Array<Test>,\n  watcher: TestWatcher,\n  onStart: OnTestStart,\n  onResult: OnTestSuccess,\n  onFailure: OnTestFailure,\n  options: TestRunnerOptions,\n): Promise<void>;\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Si vous avez besoin de restreindre votre test-runner pour qu'il ne s'ex\xe9cute qu'en s\xe9rie plut\xf4t que d'\xeatre ex\xe9cut\xe9 en parall\xe8le, votre classe doit avoir la propri\xe9t\xe9 ",(0,r.jsx)(s.code,{children:"isSerial"})," d\xe9finie \xe0 ",(0,r.jsx)(s.code,{children:"true"}),"."]}),"\n",(0,r.jsxs)(s.h3,{id:"sandboxinjectedglobals-arraystring",children:[(0,r.jsx)(s.code,{children:"sandboxInjectedGlobals"})," [array<string>]"]}),"\n",(0,r.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,r.jsxs)(s.p,{children:["Renomm\xe9 en ",(0,r.jsx)(s.code,{children:"extraGlobals"})," dans Jest 28."]})}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsxs)(s.p,{children:["Les fichiers de test s'ex\xe9cutent \xe0 l'int\xe9rieur d'une ",(0,r.jsx)(s.a,{href:"https://nodejs.org/api/vm.html",children:"vm"}),", ce qui ralentit les appels aux propri\xe9t\xe9s contextuelles globales (par exemple ",(0,r.jsx)(s.code,{children:"Math"}),"). Avec cette option, vous pouvez sp\xe9cifier des propri\xe9t\xe9s suppl\xe9mentaires \xe0 d\xe9finir \xe0 l'int\xe9rieur de la vm pour des recherches plus rapides."]}),"\n",(0,r.jsxs)(s.p,{children:["Par exemple, si vos tests appellent souvent ",(0,r.jsx)(s.code,{children:"Math"}),", vous pouvez le passer en d\xe9finissant ",(0,r.jsx)(s.code,{children:"sandboxInjectedGlobals"}),"."]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  sandboxInjectedGlobals: ['Math'],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  sandboxInjectedGlobals: ['Math'],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.admonition,{title:"remarque",type:"note",children:(0,r.jsxs)(s.p,{children:["Cette option n'a aucun effet si vous utilisez l'",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/ecmascript-modules",children:"ESM natif"}),"."]})}),"\n",(0,r.jsxs)(s.h3,{id:"setupfiles-array",children:[(0,r.jsx)(s.code,{children:"setupFiles"})," [array]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"[]"})]}),"\n",(0,r.jsxs)(s.p,{children:["Une liste de chemins vers des modules qui ex\xe9cutent du code pour configurer ou mettre en place l'environnement de test. Chaque setupFile sera ex\xe9cut\xe9 une fois par fichier de test. Puisque chaque test s'ex\xe9cute dans son propre environnement, ces scripts seront ex\xe9cut\xe9s dans l'environnement de test avant d'ex\xe9cuter ",(0,r.jsx)(s.a,{href:"#setupfilesafterenv-array",children:(0,r.jsx)(s.code,{children:"setupFilesAfterEnv"})})," et avant le code du test lui-m\xeame."]}),"\n",(0,r.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,r.jsx)(s.p,{children:"Si votre script de configuration est un module CJS, il peut exporter une fonction asynchrone. Jest appellera la fonction et attendra son r\xe9sultat. Cela peut \xeatre utile pour r\xe9cup\xe9rer des donn\xe9es de mani\xe8re asynchrone. Si le fichier est un module ESM, il suffit d'utiliser le await de niveau sup\xe9rieur pour obtenir le m\xeame r\xe9sultat."})}),"\n",(0,r.jsxs)(s.h3,{id:"setupfilesafterenv-array",children:[(0,r.jsx)(s.code,{children:"setupFilesAfterEnv"})," [array]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"[]"})]}),"\n",(0,r.jsxs)(s.p,{children:["Une liste de chemins vers des modules qui ex\xe9cutent du code pour configurer ou param\xe9trer le framework de test avant l'ex\xe9cution de chaque fichier de test de la suite. Puisque ",(0,r.jsx)(s.a,{href:"#setupfiles-array",children:(0,r.jsx)(s.code,{children:"setupFiles"})})," s'ex\xe9cute avant que le framework de test soit install\xe9 dans l'environnement, ce fichier script vous pr\xe9sente l'opportunit\xe9 d'ex\xe9cuter du code imm\xe9diatement apr\xe8s l'installation du framework de test dans l'environnement mais avant le code du test lui-m\xeame."]}),"\n",(0,r.jsxs)(s.p,{children:["En d'autres termes, les modules ",(0,r.jsx)(s.code,{children:"setupFilesAfterEnv"})," sont destin\xe9s au code qui se r\xe9p\xe8te dans chaque fichier de test. L'installation du framework de test rend les ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/api",children:"globaux"})," Jest, les ",(0,r.jsxs)(s.a,{href:"/fr/docs/29.4/jest-object",children:["objets ",(0,r.jsx)(s.code,{children:"jest"})]})," et l'",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/expect",children:(0,r.jsx)(s.code,{children:"expect"})})," accessibles dans les modules. Par exemple, vous pouvez ajouter des comparateurs suppl\xe9mentaires depuis la biblioth\xe8que ",(0,r.jsx)(s.a,{href:"https://github.com/jest-community/jest-extended",children:(0,r.jsx)(s.code,{children:"jest-extended"})})," ou appeler les hooks de ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/setup-teardown",children:"param\xe9trage et de d\xe9montage"}),"\xa0:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:'title="setup-jest.js"',children:"const matchers = require('jest-extended');\nexpect.extend(matchers);\n\nafterEach(() => {\n  jest.useRealTimers();\n});\n"})}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  setupFilesAfterEnv: ['<rootDir>/setup-jest.js'],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  setupFilesAfterEnv: ['<rootDir>/setup-jest.js'],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.h3,{id:"showseed-boolean",children:[(0,r.jsx)(s.code,{children:"showSeed"})," [boolean]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"false"})]}),"\n",(0,r.jsxs)(s.p,{children:["The equivalent of the ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/cli#--showseed",children:(0,r.jsx)(s.code,{children:"--showSeed"})})," flag to print the seed in the test report summary."]}),"\n",(0,r.jsxs)(s.h3,{id:"slowtestthreshold-number",children:[(0,r.jsx)(s.code,{children:"slowTestThreshold"})," [number]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"5"})]}),"\n",(0,r.jsx)(s.p,{children:"Le nombre de secondes apr\xe8s lequel un test est consid\xe9r\xe9 comme lent et signal\xe9 comme tel dans les r\xe9sultats."}),"\n",(0,r.jsxs)(s.h3,{id:"snapshotformat-object",children:[(0,r.jsx)(s.code,{children:"snapshotFormat"})," [object]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"{escapeString: false, printBasicPrototype: false}"})]}),"\n",(0,r.jsxs)(s.p,{children:["Permet de remplacer les options de formatage de snapshots sp\xe9cifiques document\xe9es dans le ",(0,r.jsx)(s.a,{href:"https://www.npmjs.com/package/pretty-format#usage-with-options",children:"readme de pretty-format"}),", \xe0 l'exception de ",(0,r.jsx)(s.code,{children:"compareKeys"})," et ",(0,r.jsx)(s.code,{children:"plugins"}),'. Par exemple, cette configuration permet au formateur de snapshot de ne pas afficher de pr\xe9fixe pour "Object" et "Array"\xa0:']}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  snapshotFormat: {\n    printBasicPrototype: false,\n  },\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  snapshotFormat: {\n    printBasicPrototype: false,\n  },\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:'title="some.test.js"',children:'test(\'does not show prototypes for object and array inline\', () => {\n  const object = {\n    array: [{hello: \'Danger\'}],\n  };\n  expect(object).toMatchInlineSnapshot(`\n{\n  "array": [\n    {\n      "hello": "Danger",\n    },\n  ],\n}\n    `);\n});\n'})}),"\n",(0,r.jsxs)(s.h3,{id:"snapshotresolver-string",children:[(0,r.jsx)(s.code,{children:"snapshotResolver"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsx)(s.p,{children:"The path to a module that can resolve test<->snapshot path. Cette option de configuration vous permet de personnaliser l'endroit o\xf9 Jest stocke les fichiers snapshot sur le disque."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:'title="custom-resolver.js"',children:"module.exports = {\n  // r\xe9sout le chemin d'acc\xe8s de test au snapshot\n  resolveSnapshotPath: (testPath, snapshotExtension) =>\n    testPath.replace('__tests__', '__snapshots__') + snapshotExtension,\n\n  //r\xe9sout depuis le snapshot vers le chemin de test\n  resolveTestPath: (snapshotFilePath, snapshotExtension) =>\n    snapshotFilePath\n      .replace('__snapshots__', '__tests__')\n      .slice(0, -snapshotExtension.length),\n\n  // Exemple de chemin de test, utilis\xe9 pour v\xe9rifier la coh\xe9rence de l'impl\xe9mentation ci-dessus\n  testPathForConsistencyCheck: 'some/__tests__/example.test.js',\n};\n"})}),"\n",(0,r.jsxs)(s.h3,{id:"snapshotserializers-arraystring",children:[(0,r.jsx)(s.code,{children:"snapshotSerializers"})," [array<string>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"[]"})]}),"\n",(0,r.jsx)(s.p,{children:"Une liste de chemins d'acc\xe8s aux modules de s\xe9rialisation des snapshots que Jest doit utiliser pour tester les snapshots."}),"\n",(0,r.jsxs)(s.p,{children:["Jest poss\xe8de des s\xe9rialiseurs par d\xe9faut pour les types JavaScript int\xe9gr\xe9s, les \xe9l\xe9ments HTML (Jest 20.0.0+), ImmutableJS (Jest 20.0.0+) et pour les \xe9l\xe9ments React. Consultez le ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/tutorial-react-native#snapshot-test",children:"tutoriel sur le test de snapshot"})," pour plus d'informations."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:'title="custom-serializer.js"',children:"module.exports = {\n  serialize(val, config, indentation, depth, refs, printer) {\n    return `Pretty foo: ${printer(val.foo)}`;\n  },\n\n  test(val) {\n    return val && Object.prototype.hasOwnProperty.call(val, 'foo');\n  },\n};\n"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"printer"})," est une fonction qui s\xe9rialise une valeur en utilisant les plugins existants."]}),"\n",(0,r.jsxs)(s.p,{children:["Ajoutez ",(0,r.jsx)(s.code,{children:"custom-serializer"})," \xe0 votre configuration Jest\xa0:"]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  snapshotSerializers: ['path/to/custom-serializer.js'],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  snapshotSerializers: ['path/to/custom-serializer.js'],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsx)(s.p,{children:"Enfin les tests ressembleraient \xe0 ceci\xa0:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"test(() => {\n  const bar = {\n    foo: {\n      x: 1,\n      y: 2,\n    },\n  };\n\n  expect(bar).toMatchSnapshot();\n});\n"})}),"\n",(0,r.jsx)(s.p,{children:"Snapshot rendu\xa0:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'Pretty foo: Object {\n  "x": 1,\n  "y": 2,\n}\n'})}),"\n",(0,r.jsxs)(s.admonition,{title:"astuce",type:"tip",children:[(0,r.jsxs)(s.p,{children:["Pour rendre une d\xe9pendance explicite au lieu d'\xeatre implicite, vous pouvez appeler ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/expect#expectaddsnapshotserializerserializer",children:(0,r.jsx)(s.code,{children:"expect.addSnapshotSerializer"})})," pour ajouter un module pour un fichier de test individuel au lieu d'ajouter son chemin \xe0 ",(0,r.jsx)(s.code,{children:"snapshotSerializers"})," dans la configuration de Jest."]}),(0,r.jsxs)(s.p,{children:["More about serializers API can be found ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/tree/main/packages/pretty-format/README.md#serialize",children:"here"}),"."]})]}),"\n",(0,r.jsxs)(s.h3,{id:"testenvironment-string",children:[(0,r.jsx)(s.code,{children:"testEnvironment"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:'"node"'})]}),"\n",(0,r.jsxs)(s.p,{children:["L'environnement de test qui sera utilis\xe9 pour les tests. L'environnement par d\xe9faut dans Jest est un environnement Node.js. Si vous construisez une application web, vous pouvez utiliser \xe0 la place un environnement de type navigateur via ",(0,r.jsx)(s.a,{href:"https://github.com/jsdom/jsdom",children:(0,r.jsx)(s.code,{children:"jsdom"})}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["En ajoutant un docblock ",(0,r.jsx)(s.code,{children:"@jest-environment"})," en haut du fichier, vous pouvez sp\xe9cifier un autre environnement \xe0 utiliser pour tous les tests de ce fichier\xa0:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"/**\n * @jest-environment jsdom\n */\n\ntest('utilise jsdom dans ce fichier de test', () => {\n  const element = document.createElement('div');\n  expect(element).not.toBeNull();\n});\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Vous pouvez cr\xe9er votre propre module qui sera utilis\xe9 pour configurer l'environnement de test. Le module doit exporter une classe avec les m\xe9thodes ",(0,r.jsx)(s.code,{children:"setup"}),", ",(0,r.jsx)(s.code,{children:"teardown"})," et ",(0,r.jsx)(s.code,{children:"getVmContext"}),". Vous pouvez \xe9galement passer des variables de ce module \xe0 vos suites de test en les assignant \xe0 l'objet ",(0,r.jsx)(s.code,{children:"this.global"})," \u2013 ceci les rendra disponibles dans vos suites de test comme variables globales. The constructor is passed ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/blob/v29.2.1/packages/jest-types/src/Config.ts#L358-L422",children:(0,r.jsx)(s.code,{children:"globalConfig"})})," and ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/blob/v29.2.1/packages/jest-types/src/Config.ts#L424-L481",children:(0,r.jsx)(s.code,{children:"projectConfig"})})," as its first argument, and ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/blob/491e7cb0f2daa8263caccc72d48bdce7ba759b11/packages/jest-environment/src/index.ts#L13",children:(0,r.jsx)(s.code,{children:"testEnvironmentContext"})})," as its second."]}),"\n",(0,r.jsxs)(s.p,{children:["The class may optionally expose an asynchronous ",(0,r.jsx)(s.code,{children:"handleTestEvent"})," method to bind to events fired by ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/tree/main/packages/jest-circus",children:(0,r.jsx)(s.code,{children:"jest-circus"})}),". Normally, ",(0,r.jsx)(s.code,{children:"jest-circus"})," test runner would pause until a promise returned from ",(0,r.jsx)(s.code,{children:"handleTestEvent"})," gets fulfilled, ",(0,r.jsx)(s.strong,{children:"except for the next events"}),": ",(0,r.jsx)(s.code,{children:"start_describe_definition"}),", ",(0,r.jsx)(s.code,{children:"finish_describe_definition"}),", ",(0,r.jsx)(s.code,{children:"add_hook"}),", ",(0,r.jsx)(s.code,{children:"add_test"})," or ",(0,r.jsx)(s.code,{children:"error"})," (for the up-to-date list you can look at ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/tree/main/packages/jest-types/src/Circus.ts",children:"SyncEvent type in the types definitions"}),"). Cela est d\xfb \xe0 des raisons de r\xe9trocompatibilit\xe9 et \xe0 la signature ",(0,r.jsx)(s.code,{children:"process.on('unhandledRejection', callback)"}),", mais cela ne devrait pas poser de probl\xe8me pour la plupart des cas d'utilisation."]}),"\n",(0,r.jsx)(s.p,{children:"Tous les directives du docblock dans les fichiers de test seront transmises au constructeur de l'environnement et peuvent \xeatre utilis\xe9es pour la configuration de chaque test. Si la directive n'a pas de valeur, elle sera pr\xe9sente dans l'objet avec sa valeur \xe9gale \xe0 une cha\xeene vide. Si la directive n'est pas pr\xe9sente, elle ne sera pas pr\xe9sente dans l'objet."}),"\n",(0,r.jsxs)(s.p,{children:["Pour utiliser cette classe comme environnement personnalis\xe9, faites-y r\xe9f\xe9rence par son chemin complet dans le projet. Par exemple, si votre classe est stock\xe9e dans ",(0,r.jsx)(s.code,{children:"my-custom-environment.js"})," dans un sous-dossier de votre projet, l'annotation pourrait ressembler \xe0 ceci\xa0:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"/**\n * @jest-environment ./src/test/my-custom-environment\n */\n"})}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsx)(s.p,{children:"TestEnvironment est un environnement de type bac \xe0 sable. Chaque suite de test d\xe9clenchera l'installation et le nettoyage dans son propre TestEnvironment."})}),"\n",(0,r.jsx)(s.p,{children:"Exemple\xa0:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"// my-custom-environment\nconst NodeEnvironment = require('jest-environment-node').TestEnvironment;\n\nclass CustomEnvironment extends NodeEnvironment {\n  constructor(config, context) {\n    super(config, context);\n    console.log(config.globalConfig);\n    console.log(config.projectConfig);\n    this.testPath = context.testPath;\n    this.docblockPragmas = context.docblockPragmas;\n  }\n\n  async setup() {\n    await super.setup();\n    await someSetupTasks(this.testPath);\n    this.global.someGlobalObject = createGlobalObject();\n\n    // Will trigger if docblock contains @my-custom-pragma my-pragma-value\n    if (this.docblockPragmas['my-custom-pragma'] === 'my-pragma-value') {\n      // ...\n    }\n  }\n\n  async teardown() {\n    this.global.someGlobalObject = destroyGlobalObject();\n    await someTeardownTasks();\n    await super.teardown();\n  }\n\n  getVmContext() {\n    return super.getVmContext();\n  }\n\n  async handleTestEvent(event, state) {\n    if (event.name === 'test_start') {\n      // ...\n    }\n  }\n}\n\nmodule.exports = CustomEnvironment;\n"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"// my-test-suite\n/**\n * @jest-environment ./my-custom-environment\n */\nlet someGlobalObject;\n\nbeforeAll(() => {\n  someGlobalObject = globalThis.someGlobalObject;\n});\n"})}),"\n",(0,r.jsxs)(s.h3,{id:"testenvironmentoptions-object",children:[(0,r.jsx)(s.code,{children:"testEnvironmentOptions"})," [Object]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"{}"})]}),"\n",(0,r.jsxs)(s.p,{children:["Options de l'environnement de test qui seront transmises \xe0 ",(0,r.jsx)(s.code,{children:"testEnvironment"}),". Les options pertinentes d\xe9pendent de l'environnement."]}),"\n",(0,r.jsxs)(s.p,{children:["For example, you can override options passed to ",(0,r.jsx)(s.a,{href:"https://github.com/jsdom/jsdom",children:(0,r.jsx)(s.code,{children:"jsdom"})}),":"]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  testEnvironment: 'jsdom',\n  testEnvironmentOptions: {\n    html: '<html lang=\"zh-cmn-Hant\"></html>',\n    url: 'https://jestjs.io/',\n    userAgent: 'Agent/007',\n  },\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  testEnvironment: 'jsdom',\n  testEnvironmentOptions: {\n    html: '<html lang=\"zh-cmn-Hant\"></html>',\n    url: 'https://jestjs.io/',\n    userAgent: 'Agent/007',\n  },\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.p,{children:["Les ",(0,r.jsx)(s.code,{children:"jest-environment-jsdom"})," et ",(0,r.jsx)(s.code,{children:"jest-environment-node"})," permettent tous deux de sp\xe9cifier des ",(0,r.jsx)(s.code,{children:"customExportConditions"}),", qui permettent de contr\xf4ler quelles versions d'une biblioth\xe8que sont charg\xe9es \xe0 partir des ",(0,r.jsx)(s.code,{children:"exports"})," dans ",(0,r.jsx)(s.code,{children:"package.json"}),". ",(0,r.jsx)(s.code,{children:"jest-environment-jsdom"})," a par d\xe9faut ",(0,r.jsx)(s.code,{children:"['browser']"}),". ",(0,r.jsx)(s.code,{children:"jest-environment-node"})," a par d\xe9faut ",(0,r.jsx)(s.code,{children:"['node', 'node-addons']"}),"."]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  testEnvironment: 'jsdom',\n  testEnvironmentOptions: {\n    customExportConditions: ['react-native'],\n  },\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  testEnvironment: 'jsdom',\n  testEnvironmentOptions: {\n    customExportConditions: ['react-native'],\n  },\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.p,{children:["Ces options peuvent \xe9galement \xeatre pass\xe9es dans un docblock, similaire \xe0 ",(0,r.jsx)(s.code,{children:"testEnvironment"}),". The string with options must be parseable by ",(0,r.jsx)(s.code,{children:"JSON.parse"}),":"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"/**\n * @jest-environment jsdom\n * @jest-environment-options {\"url\": \"https://jestjs.io/\"}\n */\n\ntest('utilisez jsdom et d\xe9finissez l\\'URL dans ce fichier de test', () => {\n  expect(window.location.href).toBe('https://jestjs.io/');\n});\n"})}),"\n",(0,r.jsxs)(s.h3,{id:"testfailureexitcode-number",children:[(0,r.jsx)(s.code,{children:"testFailureExitCode"})," [number]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"1"})]}),"\n",(0,r.jsx)(s.p,{children:"Le code de sortie que Jest renvoie en cas d'\xe9chec du test."}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsx)(s.p,{children:"Cela ne change pas le code de sortie en cas d'erreurs de Jest (par exemple, une configuration invalide)."})}),"\n",(0,r.jsxs)(s.h3,{id:"testmatch-arraystring",children:[(0,r.jsx)(s.code,{children:"testMatch"})," [array<string>]"]}),"\n",(0,r.jsxs)(s.p,{children:["(par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:'[ "**/__tests__/**/*.[jt]s?(x)", "**/?(*.)+(spec|test).[jt]s?(x)" ]'}),")"]}),"\n",(0,r.jsxs)(s.p,{children:["Les patterns de glob que Jest utilise pour d\xe9tecter les fichiers de test. Par d\xe9faut, il recherche les fichiers ",(0,r.jsx)(s.code,{children:".js"}),", ",(0,r.jsx)(s.code,{children:".jsx"}),", ",(0,r.jsx)(s.code,{children:".ts"})," et ",(0,r.jsx)(s.code,{children:".tsx"})," \xe0 l'int\xe9rieur des dossiers ",(0,r.jsx)(s.code,{children:"__tests__"}),", ainsi que tout fichier dont le suffixe est ",(0,r.jsx)(s.code,{children:".test"})," ou ",(0,r.jsx)(s.code,{children:".spec"})," (par exemple ",(0,r.jsx)(s.code,{children:"Composant.test.js"})," ou ",(0,r.jsx)(s.code,{children:"Composant.spec.js"}),"). Il trouvera \xe9galement les fichiers appel\xe9s ",(0,r.jsx)(s.code,{children:"test.js"})," ou ",(0,r.jsx)(s.code,{children:"spec.js"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Consultez le paquet ",(0,r.jsx)(s.a,{href:"https://github.com/micromatch/micromatch",children:"micromatch"})," pour obtenir des d\xe9tails sur les patterns que vous pouvez sp\xe9cifier."]}),"\n",(0,r.jsxs)(s.p,{children:["Voir aussi ",(0,r.jsxs)(s.a,{href:"#testregex-string--arraystring",children:[(0,r.jsx)(s.code,{children:"testRegex"})," [string | array<string>]"]}),", mais notez que vous ne pouvez pas sp\xe9cifier les deux options."]}),"\n",(0,r.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,r.jsxs)(s.p,{children:["Chaque pattern glob est appliqu\xe9 dans l'ordre dans lequel ils sont sp\xe9cifi\xe9s dans la configuration. Par exemple ",(0,r.jsx)(s.code,{children:'["!**/__fixtures__/**", "**/__tests__/**/*.js"]'})," n'exclura pas ",(0,r.jsx)(s.code,{children:"__fixtures__"})," car la n\xe9gation est remplac\xe9e par le second pattern. Pour que le glob n\xe9gatif fonctionne dans cet exemple, il doit venir apr\xe8s ",(0,r.jsx)(s.code,{children:"**/__tests__/**/*.js"}),"."]})}),"\n",(0,r.jsxs)(s.h3,{id:"testpathignorepatterns-arraystring",children:[(0,r.jsx)(s.code,{children:"testPathIgnorePatterns"})," [array<string>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:'["/node_modules/"]'})]}),"\n",(0,r.jsx)(s.p,{children:"Un tableau de cha\xeenes de patterns regexp qui sont compar\xe9es \xe0 tous les chemins de tests avant d'ex\xe9cuter le test. Si le chemin du test correspond \xe0 un des patterns, il sera ignor\xe9."}),"\n",(0,r.jsxs)(s.p,{children:["Ces cha\xeenes de patterns correspondent au chemin d'acc\xe8s complet. Utilisez la chaine de caract\xe8re ",(0,r.jsx)(s.code,{children:"<rootDir>"})," pour inclure le chemin vers la racine de votre projet, pour l'emp\xeacher d'ignorer accidentellement tous vos fichiers dans les environnements qui auraient un r\xe9pertoire racine diff\xe9rent. Exemple\xa0: ",(0,r.jsx)(s.code,{children:'["<rootDir>/build/", "<rootDir>/node_modules/"]'}),"."]}),"\n",(0,r.jsxs)(s.h3,{id:"testregex-string--arraystring",children:[(0,r.jsx)(s.code,{children:"testRegex"})," [string | array<string>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"(/__tests__/.*|(\\\\.|/)(test|spec))\\\\.[jt]sx?$"})]}),"\n",(0,r.jsxs)(s.p,{children:["Le ou les patterns que Jest utilise pour d\xe9tecter les fichiers de test. Par d\xe9faut, il recherche les fichiers ",(0,r.jsx)(s.code,{children:".js"}),", ",(0,r.jsx)(s.code,{children:".jsx"}),", ",(0,r.jsx)(s.code,{children:".ts"})," et ",(0,r.jsx)(s.code,{children:".tsx"})," \xe0 l'int\xe9rieur des dossiers ",(0,r.jsx)(s.code,{children:"__tests__"}),", ainsi que tout fichier dont le suffixe est ",(0,r.jsx)(s.code,{children:".test"})," ou ",(0,r.jsx)(s.code,{children:".spec"})," (par exemple ",(0,r.jsx)(s.code,{children:"Composant.test.js"})," ou ",(0,r.jsx)(s.code,{children:"Composant.spec.js"}),"). Il trouvera \xe9galement les fichiers appel\xe9s ",(0,r.jsx)(s.code,{children:"test.js"})," ou ",(0,r.jsx)(s.code,{children:"spec.js"}),". Voir aussi ",(0,r.jsxs)(s.a,{href:"#testmatch-arraystring",children:[(0,r.jsx)(s.code,{children:"testMatch"})," [array<string>]"]}),", mais notez que vous ne pouvez pas sp\xe9cifier les deux options."]}),"\n",(0,r.jsx)(s.p,{children:"Ce qui suit est une visualisation des expressions r\xe9guli\xe8res par d\xe9faut\xa0:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"\u251c\u2500\u2500 __tests__\n\u2502   \u2514\u2500\u2500 component.spec.js # test\n\u2502   \u2514\u2500\u2500 anything # test\n\u251c\u2500\u2500 package.json # not test\n\u251c\u2500\u2500 foo.test.js # test\n\u251c\u2500\u2500 bar.spec.jsx # test\n\u2514\u2500\u2500 component.js # not test\n"})}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"testRegex"})," essaiera de d\xe9tecter les fichiers de test en utilisant le ",(0,r.jsx)(s.strong,{children:"chemin de fichier absolu"}),", par cons\xe9quent, avoir un dossier avec un nom qui correspond \xe0 celui-ci ex\xe9cutera tous les fichiers comme des tests."]})}),"\n",(0,r.jsxs)(s.h3,{id:"testresultsprocessor-string",children:[(0,r.jsx)(s.code,{children:"testResultsProcessor"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsx)(s.p,{children:"Cette option permet l'utilisation d'un processeur de r\xe9sultats personnalis\xe9. Ce processeur doit \xeatre un module de node qui exporte une fonction qui attend un objet avec la structure suivante comme premier argument et le retourne\xa0:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'{\n  "success": boolean,\n  "startTime": epoch,\n  "numTotalTestSuites": number,\n  "numPassedTestSuites": number,\n  "numFailedTestSuites": number,\n  "numRuntimeErrorTestSuites": number,\n  "numTotalTests": number,\n  "numPassedTests": number,\n  "numFailedTests": number,\n  "numPendingTests": number,\n  "numTodoTests": number,\n  "openHandles": Array<Error>,\n  "testResults": [{\n    "numFailingTests": number,\n    "numPassingTests": number,\n    "numPendingTests": number,\n    "testResults": [{\n      "title": string (message in it block),\n      "status": "failed" | "pending" | "passed",\n      "ancestorTitles": [string (message in describe blocks)],\n      "failureMessages": [string],\n      "numPassingAsserts": number,\n      "location": {\n        "column": number,\n        "line": number\n      },\n      "duration": number | null\n    },\n    ...\n    ],\n    "perfStats": {\n      "start": epoch,\n      "end": epoch\n    },\n    "testFilePath": chemin absolu vers le fichier de test,\n    "coverage": {}\n  },\n  "testExecError:" (existe s\'il y a eu un \xe9chec de niveau sup\xe9rieur) {\n    "message": string\n    "stack": string\n  }\n  ...\n  ]\n}\n'})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"testResultsProcessor"})," et ",(0,r.jsx)(s.code,{children:"reporters"})," sont tr\xe8s similaires l'un \xe0 l'autre. Une diff\xe9rence est que le processeur de r\xe9sultats de test n'est appel\xe9 qu'une fois apr\xe8s que tous les tests soient termin\xe9s. Alors qu'un rapporteur a la possibilit\xe9 de recevoir les r\xe9sultats des tests apr\xe8s que les tests individuels et/ou les suites de tests soient termin\xe9s."]}),"\n",(0,r.jsxs)(s.h3,{id:"testrunner-string",children:[(0,r.jsx)(s.code,{children:"testRunner"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"jest-circus/runner"})]}),"\n",(0,r.jsxs)(s.p,{children:["Cette option permet d'utiliser un runner de test personnalis\xe9. La valeur par d\xe9faut est ",(0,r.jsx)(s.code,{children:"jest-circus"}),". Un runner de test personnalis\xe9 peut \xeatre fourni en sp\xe9cifiant un chemin vers une impl\xe9mentation d'un runner de test."]}),"\n",(0,r.jsx)(s.p,{children:"Le module de runner de test doit exporter une fonction avec la signature suivante\xa0:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",children:"function testRunner(\n  globalConfig: GlobalConfig,\n  config: ProjectConfig,\n  environment: Environment,\n  runtime: Runtime,\n  testPath: string,\n): Promise<TestResult>;\n"})}),"\n",(0,r.jsxs)(s.p,{children:["An example of such function can be found in our default ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/blob/main/packages/jest-jasmine2/src/index.ts",children:"jasmine2 test runner package"}),"."]}),"\n",(0,r.jsxs)(s.h3,{id:"testsequencer-string",children:[(0,r.jsx)(s.code,{children:"testSequencer"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"@jest/test-sequencer"})]}),"\n",(0,r.jsx)(s.p,{children:"Cette option vous permet d'utiliser un s\xe9quenceur personnalis\xe9 au lieu de celui par d\xe9faut de Jest."}),"\n",(0,r.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,r.jsxs)(s.p,{children:["Les deux ",(0,r.jsx)(s.code,{children:"sort"})," et ",(0,r.jsx)(s.code,{children:"shard"})," peuvent \xe9ventuellement retourner une ",(0,r.jsx)(s.code,{children:"Promise"}),"."]})}),"\n",(0,r.jsx)(s.p,{children:"Par exemple, vous pouvez trier les chemins de test par ordre alphab\xe9tique\xa0:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:'title="custom-sequencer.js"',children:"const Sequencer = require('@jest/test-sequencer').default;\n\nclass CustomSequencer extends Sequencer {\n  /**\n   * Select tests for shard requested via --shard=shardIndex/shardCount\n   * Sharding is applied before sorting\n   */\n  shard(tests, {shardIndex, shardCount}) {\n    const shardSize = Math.ceil(tests.length / shardCount);\n    const shardStart = shardSize * (shardIndex - 1);\n    const shardEnd = shardSize * shardIndex;\n\n    return [...tests]\n      .sort((a, b) => (a.path > b.path ? 1 : -1))\n      .slice(shardStart, shardEnd);\n  }\n\n  /**\n   * Sort test to determine order of execution\n   * Sorting is applied after sharding\n   */\n  sort(tests) {\n    // Test structure information\n    // https://github.com/jestjs/jest/blob/6b8b1404a1d9254e7d5d90a8934087a9c9899dab/packages/jest-runner/src/types.ts#L17-L21\n    const copyTests = Array.from(tests);\n    return copyTests.sort((testA, testB) => (testA.path > testB.path ? 1 : -1));\n  }\n}\n\nmodule.exports = CustomSequencer;\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Ajouter ",(0,r.jsx)(s.code,{children:"custom-sequencer"})," \xe0 votre configuration Jest\xa0:"]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  testSequencer: 'path/to/custom-sequencer.js',\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  testSequencer: 'path/to/custom-sequencer.js',\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.h3,{id:"testtimeout-number",children:[(0,r.jsx)(s.code,{children:"testTimeout"})," [number]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"5000"})]}),"\n",(0,r.jsx)(s.p,{children:"D\xe9lai par d\xe9faut d'un test en millisecondes."}),"\n",(0,r.jsxs)(s.h3,{id:"transform-objectstring-pathtotransformer--pathtotransformer-object",children:[(0,r.jsx)(s.code,{children:"transform"})," [object<string, pathToTransformer | [pathToTransformer, object]>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:'{"\\\\.[jt]sx?$": "babel-jest"}'})]}),"\n",(0,r.jsxs)(s.p,{children:["Une correspondance entre les expressions r\xe9guli\xe8res, les chemins et les transformateurs. De mani\xe8re facultative, un tuple avec des options de configuration peut \xeatre pass\xe9 comme deuxi\xe8me argument\xa0: ",(0,r.jsx)(s.code,{children:"{filePattern : ['path-to-transformer', {options}]}"}),". Par exemple, voici comment vous pouvez configurer ",(0,r.jsx)(s.code,{children:"babel-jest"})," pour un comportement diff\xe9rent de celui par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"{'\\\\.js$': ['babel-jest', {rootMode: 'upward'}]}"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Jest ex\xe9cute le code de votre projet en tant que JavaScript, donc un transformateur est n\xe9cessaire si vous utilisez une syntaxe non support\xe9e par Node hors de la bo\xeete (comme les mod\xe8les JSX, TypeScript, Vue). By default, Jest will use ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/tree/main/packages/babel-jest#setup",children:(0,r.jsx)(s.code,{children:"babel-jest"})})," transformer, which will load your project's Babel configuration and transform any file matching the ",(0,r.jsx)(s.code,{children:"/\\.[jt]sx?$/"})," RegExp (in other words, any ",(0,r.jsx)(s.code,{children:".js"}),", ",(0,r.jsx)(s.code,{children:".jsx"}),", ",(0,r.jsx)(s.code,{children:".ts"})," or ",(0,r.jsx)(s.code,{children:".tsx"})," file). En outre, ",(0,r.jsx)(s.code,{children:"babel-jest"})," injectera le plugin Babel n\xe9cessaire pour le montage de simulation dont on parle dans ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/manual-mocks#using-with-es-module-imports",children:"Simulation module ES"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Reportez-vous \xe0 la section ",(0,r.jsx)(s.a,{href:"/fr/docs/29.4/code-transformation",children:"Code Transformation"})," pour plus de d\xe9tails et des instructions sur la construction de votre propre transformateur."]}),"\n",(0,r.jsxs)(s.admonition,{title:"astuce",type:"tip",children:[(0,r.jsx)(s.p,{children:"Gardez \xe0 l'esprit qu'un transformateur n'est ex\xe9cut\xe9 qu'une seule fois par fichier, sauf si le fichier a chang\xe9."}),(0,r.jsxs)(s.p,{children:["N'oubliez pas d'inclure explicitement le transformateur par d\xe9faut ",(0,r.jsx)(s.code,{children:"babel-jest"}),", si vous souhaitez l'utiliser en parall\xe8le avec des pr\xe9processeurs de code suppl\xe9mentaires\xa0:"]}),(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  transform: {\n    '\\\\.[jt]sx?$': 'babel-jest',\n    '\\\\.css$': 'some-css-transformer',\n  },\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  transform: {\n    '\\\\.[jt]sx?$': 'babel-jest',\n    '\\\\.css$': 'some-css-transformer',\n  },\n};\n\nexport default config;\n"})})})]})]}),"\n",(0,r.jsxs)(s.h3,{id:"transformignorepatterns-arraystring",children:[(0,r.jsx)(s.code,{children:"transformIgnorePatterns"})," [array<string>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:'["/node_modules/", "\\\\.pnp\\\\.[^\\\\\\/]+$"]'})]}),"\n",(0,r.jsxs)(s.p,{children:["Un tableau de cha\xeenes de patterns regexp qui sont compar\xe9es \xe0 tous les chemins de fichier source avant transformation. Si le chemin du fichier correspond ",(0,r.jsx)(s.strong,{children:"\xe0 un"})," des patterns, il ne sera pas transform\xe9."]}),"\n",(0,r.jsx)(s.p,{children:"Fournir des patterns regexp qui se chevauchent les uns avec les autres peut avoir pour cons\xe9quence que les fichiers que vous vous attendiez \xe0 \xeatre transform\xe9s ne le soient pas. Par exemple\xa0:"}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  transformIgnorePatterns: ['/node_modules/(?!(foo|bar)/)', '/bar/'],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  transformIgnorePatterns: ['/node_modules/(?!(foo|bar)/)', '/bar/'],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.p,{children:["Le premier pattern correspondra (et donc ne transformera pas) les fichiers \xe0 l'int\xe9rieur de ",(0,r.jsx)(s.code,{children:"/node_modules"})," \xe0 l'exception de ceux de ",(0,r.jsx)(s.code,{children:"/node_modules/foo/"})," et ",(0,r.jsx)(s.code,{children:"/node_modules/bar/"}),". Le second pattern correspondra (et donc ne transformera pas) les fichiers \xe0 l'int\xe9rieur d'un chemin avec ",(0,r.jsx)(s.code,{children:"/bar/"})," dedans. Avec les deux combin\xe9s, les fichiers dans ",(0,r.jsx)(s.code,{children:"/node_modules/bar/"})," ne seront pas transform\xe9s car ils correspondent au second motif, m\xeame s'ils ont \xe9t\xe9 exclus par le premier."]}),"\n",(0,r.jsxs)(s.p,{children:["Parfois, il arrive (en particulier dans les projets React Native ou TypeScript) que des modules tiers soient publi\xe9s comme du code non transpil\xe9s. Comme tous les fichiers \xe0 l'int\xe9rieur de ",(0,r.jsx)(s.code,{children:"node_modules"})," ne sont pas transform\xe9s par d\xe9faut, Jest ne comprendra pas le code de ces modules, ce qui entra\xeenera des erreurs de syntaxe. Pour surmonter cela, vous pouvez utiliser ",(0,r.jsx)(s.code,{children:"transformIgnorePatterns"})," pour permettre la transpilation de tels modules. Vous trouverez un bon exemple de ce cas d'utilisation dans le ",(0,r.jsx)(s.a,{href:"/docs/tutorial-react-native#transformignorepatterns-customization",children:"Guide React Native"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Ces cha\xeenes de patterns correspondent au chemin d'acc\xe8s complet. Utilisez la chaine de caract\xe8re ",(0,r.jsx)(s.code,{children:"<rootDir>"})," pour inclure le chemin vers la racine de votre projet, pour l'emp\xeacher d'ignorer accidentellement tous vos fichiers dans les environnements qui auraient un r\xe9pertoire racine diff\xe9rent."]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  transformIgnorePatterns: [\n    '<rootDir>/bower_components/',\n    '<rootDir>/node_modules/',\n  ],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  transformIgnorePatterns: [\n    '<rootDir>/bower_components/',\n    '<rootDir>/node_modules/',\n  ],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.admonition,{title:"astuce",type:"tip",children:[(0,r.jsxs)(s.p,{children:["If you use ",(0,r.jsx)(s.code,{children:"pnpm"})," and need to convert some packages under ",(0,r.jsx)(s.code,{children:"node_modules"}),", you need to note that the packages in this folder (e.g. ",(0,r.jsx)(s.code,{children:"node_modules/package-a/"}),") have been symlinked to the path under ",(0,r.jsx)(s.code,{children:".pnpm"})," (e.g. ",(0,r.jsx)(s.code,{children:"node_modules/.pnpm/package-a@x.x.x/node_modules/package-a/"}),"), so using ",(0,r.jsx)(s.code,{children:"<rootDir>/node_modules/(?!(package-a|@scope/pkg-b)/)"})," directly will not be recognized, while is to use:"]}),(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  transformIgnorePatterns: [\n    '<rootDir>/node_modules/.pnpm/(?!(package-a|@scope\\\\+pkg-b)@)',\n    /* if config file is under '~/packages/lib-a/' */\n    `${path.join(\n      __dirname,\n      '../..',\n    )}/node_modules/.pnpm/(?!(package-a|@scope\\\\+pkg-b)@)`,\n    /* or using relative pattern to match the second 'node_modules/' in 'node_modules/.pnpm/@scope+pkg-b@x.x.x/node_modules/@scope/pkg-b/' */\n    'node_modules/(?!.pnpm|package-a|@scope/pkg-b)',\n  ],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  transformIgnorePatterns: [\n    '<rootDir>/node_modules/.pnpm/(?!(package-a|@scope\\\\+pkg-b)@)',\n    /* if config file is under '~/packages/lib-a/' */\n    `${path.join(\n      __dirname,\n      '../..',\n    )}/node_modules/.pnpm/(?!(package-a|@scope\\\\+pkg-b)@)`,\n    /* or using relative path to match the second 'node_modules/' in 'node_modules/.pnpm/@scope+pkg-b@x.x.x/node_modules/@scope/pkg-b/' */\n    'node_modules/(?!.pnpm|package-a|@scope/pkg-b)',\n  ],\n};\n\nexport default config;\n"})})})]}),(0,r.jsxs)(s.p,{children:["It should be noted that the folder name of pnpm under ",(0,r.jsx)(s.code,{children:".pnpm"})," is the package name plus ",(0,r.jsx)(s.code,{children:"@"})," and version number, so writing ",(0,r.jsx)(s.code,{children:"/"})," will not be recognized, but using ",(0,r.jsx)(s.code,{children:"@"})," can."]})]}),"\n",(0,r.jsxs)(s.h3,{id:"unmockedmodulepathpatterns-arraystring",children:[(0,r.jsx)(s.code,{children:"unmockedModulePathPatterns"})," [array<string>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"[]"})]}),"\n",(0,r.jsx)(s.p,{children:"Un tableau de cha\xeenes de patterns regexp qui sont compar\xe9es \xe0 tous les modules avant que le chargeur de modules ne retourne automatiquement une simulation pour eux. Si le chemin d'un module correspond \xe0 l'un des patterns de cette liste, il ne sera pas automatiquement simul\xe9 par le chargeur de module."}),"\n",(0,r.jsxs)(s.p,{children:["This is useful for some commonly used 'utility' modules that are almost always used as implementation details almost all the time (like ",(0,r.jsx)(s.code,{children:"underscore"}),", ",(0,r.jsx)(s.code,{children:"lodash"}),", etc). C'est g\xe9n\xe9ralement une bonne pratique de garder cette liste aussi petite que possible et de toujours utiliser des appels explicites ",(0,r.jsx)(s.code,{children:"jest.mock()"}),"/",(0,r.jsx)(s.code,{children:"jest.unmock()"})," dans les tests individuels. La configuration explicite par test est beaucoup plus facile pour les autres lecteurs du test pour comprendre sur quel environnement le test s'ex\xe9cutera."]}),"\n",(0,r.jsxs)(s.p,{children:["Il est possible d'\xe9craser ce param\xe8tre par des tests individuels en appelant explicitement ",(0,r.jsx)(s.code,{children:"jest.mock()"})," en haut du fichier de test."]}),"\n",(0,r.jsxs)(s.h3,{id:"verbose-boolean",children:[(0,r.jsx)(s.code,{children:"verbose"})," [boolean]"]}),"\n",(0,r.jsxs)(s.p,{children:["Default: ",(0,r.jsx)(s.code,{children:"false"})," or ",(0,r.jsx)(s.code,{children:"true"})," if there is only one test file to run"]}),"\n",(0,r.jsx)(s.p,{children:"Indique si chaque test individuel doit \xeatre report\xe9 pendant l'ex\xe9cution. Toutes les erreurs seront \xe9galement affich\xe9es en bas apr\xe8s l'ex\xe9cution."}),"\n",(0,r.jsxs)(s.h3,{id:"watchpathignorepatterns-arraystring",children:[(0,r.jsx)(s.code,{children:"watchPathIgnorePatterns"})," [array<string>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"[]"})]}),"\n",(0,r.jsx)(s.p,{children:"Un tableau de patterns RegExp qui sont compar\xe9s \xe0 tous les chemins des fichiers sources avant de r\xe9ex\xe9cuter les tests en mode surveillance (watch). Si le chemin du fichier correspond \xe0 l'un des patterns, quand il est mis \xe0 jour, il ne d\xe9clenchera pas une nouvelle ex\xe9cution de tests."}),"\n",(0,r.jsxs)(s.p,{children:["Ces patterns correspondent au chemin complet. Utilisez la chaine de caract\xe8re ",(0,r.jsx)(s.code,{children:"<rootDir>"})," pour inclure le chemin vers la racine de votre projet, pour l'emp\xeacher d'ignorer accidentellement tous vos fichiers dans les environnements qui auraient un r\xe9pertoire racine diff\xe9rent. Exemple\xa0: ",(0,r.jsx)(s.code,{children:'["<rootDir>/node_modules/"]'}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Even if nothing is specified here, the watcher will ignore changes to the version control folders (.git, .hg, .sl). Les autres fichiers et r\xe9pertoires cach\xe9s, c'est-\xe0-dire ceux qui commencent par un point (",(0,r.jsx)(s.code,{children:"."}),"), sont surveill\xe9s par d\xe9faut. N'oubliez pas d'\xe9chapper le point lorsque vous les ajoutez \xe0 ",(0,r.jsx)(s.code,{children:"watchPathIgnorePatterns"})," car il s'agit d'un caract\xe8re sp\xe9cial de RegExp."]}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  watchPathIgnorePatterns: ['<rootDir>/\\\\.tmp/', '<rootDir>/bar/'],\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  watchPathIgnorePatterns: ['<rootDir>/\\\\.tmp/', '<rootDir>/bar/'],\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.h3,{id:"watchplugins-arraystring--string-object",children:[(0,r.jsx)(s.code,{children:"watchPlugins"})," [array<string | [string, Object]>]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"[]"})]}),"\n",(0,r.jsxs)(s.p,{children:["Cette option vous permet d'utiliser des plugins de surveillance personnalis\xe9s. Pour en savoir plus sur les plugins de surveillance, naviguez ",(0,r.jsx)(s.a,{href:"watch-plugins",children:"ici"}),"."]}),"\n",(0,r.jsx)(s.p,{children:"Les exemples de plugins de surveillance incluent\xa0:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://github.com/rickhanlonii/jest-watch-master",children:(0,r.jsx)(s.code,{children:"jest-watch-master"})})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://github.com/rogeliog/jest-watch-select-projects",children:(0,r.jsx)(s.code,{children:"jest-watch-select-projects"})})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://github.com/unional/jest-watch-suspend",children:(0,r.jsx)(s.code,{children:"jest-watch-suspend"})})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://github.com/jest-community/jest-watch-typeahead",children:(0,r.jsx)(s.code,{children:"jest-watch-typeahead"})})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://github.com/cameronhunter/jest-watch-directories/tree/master/packages/jest-watch-yarn-workspaces",children:(0,r.jsx)(s.code,{children:"jest-watch-yarn-workspaces"})})}),"\n"]}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["Les valeurs de la propri\xe9t\xe9 ",(0,r.jsx)(s.code,{children:"watchPlugins"})," peuvent omettre le pr\xe9fixe ",(0,r.jsx)(s.code,{children:"jest-watch-"})," du nom du paquet."]})}),"\n",(0,r.jsxs)(s.h3,{id:"watchman-boolean",children:[(0,r.jsx)(s.code,{children:"watchman"})," [boolean]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"true"})]}),"\n",(0,r.jsxs)(s.p,{children:["Utilisation ou non de ",(0,r.jsx)(s.a,{href:"https://facebook.github.io/watchman/",children:(0,r.jsx)(s.code,{children:"watchman"})})," pour l'exploration des fichiers."]}),"\n",(0,r.jsxs)(s.h3,{id:"workeridlememorylimit-numberstring",children:[(0,r.jsx)(s.code,{children:"workerIdleMemoryLimit"})," [number|string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Par d\xe9faut\xa0: ",(0,r.jsx)(s.code,{children:"undefined"})]}),"\n",(0,r.jsxs)(s.p,{children:["Specifies the memory limit for workers before they are recycled and is primarily a work-around for ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/issues/11956",children:"this issue"}),";"]}),"\n",(0,r.jsxs)(s.p,{children:["Apr\xe8s que le worker a ex\xe9cut\xe9 un test, l'utilisation de la m\xe9moire de celui-ci est v\xe9rifi\xe9e. S'il d\xe9passe la valeur sp\xe9cifi\xe9e, le worker est tu\xe9 et red\xe9marr\xe9. La limite peut \xeatre sp\xe9cifi\xe9e de plusieurs fa\xe7ons diff\xe9rentes et quel que soit le r\xe9sultat ",(0,r.jsx)(s.code,{children:"Math.floor"})," est utilis\xe9 pour le transformer en une valeur enti\xe8re\xa0:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"<= 1"})," - La valeur est consid\xe9r\xe9e comme un pourcentage de la m\xe9moire syst\xe8me. Donc 0,5 \xe9tablit la limite de m\xe9moire du worker \xe0 la moiti\xe9 de la m\xe9moire totale du syst\xe8me"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"\\> 1"})," - Consid\xe9r\xe9 comme une valeur d'octet fixe. En raison de la r\xe8gle pr\xe9c\xe9dente, si vous voulez une valeur de 1 octet (je ne sais pas pourquoi), vous pouvez utiliser ",(0,r.jsx)(s.code,{children:"1.1"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Avec des unit\xe9s","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"50"})," - Comme ci-dessus, un pourcentage de la m\xe9moire syst\xe8me totale"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"100KB"}),", ",(0,r.jsx)(s.code,{children:"65MB"}),", etc - Avec des unit\xe9s pour indiquer une limite de m\xe9moire fixe.","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"K"})," / ",(0,r.jsx)(s.code,{children:"KB"})," - Kilobytes (x1 000)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"KiB"})," - Kibibytes (x1 024)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"M"})," / ",(0,r.jsx)(s.code,{children:"MB"})," - Megabytes"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"MiB"})," - Mebibytes"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"G"})," / ",(0,r.jsx)(s.code,{children:"GB"})," - Gigabytes"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"GiB"})," - Gibibytes"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.admonition,{title:"attention",type:"caution",children:(0,r.jsxs)(s.p,{children:["Percentage based memory limit ",(0,r.jsx)(s.a,{href:"https://github.com/jestjs/jest/issues/11956#issuecomment-1212925677",children:"does not work on Linux CircleCI workers"})," due to incorrect system memory being reported."]})}),"\n",(0,r.jsxs)(i.Z,{groupId:"code-examples",children:[(0,r.jsx)(o.Z,{value:"js",label:"JavaScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  workerIdleMemoryLimit: 0.2,\n};\n\nmodule.exports = config;\n"})})}),(0,r.jsx)(o.Z,{value:"ts",label:"TypeScript",children:(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  workerIdleMemoryLimit: 0.2,\n};\n\nexport default config;\n"})})})]}),"\n",(0,r.jsxs)(s.h3,{id:"-string",children:[(0,r.jsx)(s.code,{children:"//"})," [string]"]}),"\n",(0,r.jsxs)(s.p,{children:["Cette option permet de commenter dans ",(0,r.jsx)(s.code,{children:"package.json"}),". Incluez le texte du commentaire comme valeur de cette cl\xe9\xa0:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",metastring:'title="package.json"',children:'{\n  "name": "my-project",\n  "jest": {\n    "//": "Le commentaire est ici",\n    "verbose": true\n  }\n}\n'})})]})}const m=function(e={}){const{wrapper:s}=Object.assign({},(0,t.ah)(),e.components);return s?(0,r.jsx)(s,Object.assign({},e,{children:(0,r.jsx)(h,e)})):h(e)}}}]);