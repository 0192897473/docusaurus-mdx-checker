"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[669],{175:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>u,toc:()=>c});var n=s(4246),a=s(1670);const o={title:"Jest 26\xa0: Tic Tac",author:"Christoph Nakazawa",authorURL:"http://twitter.com/cpojer",authorFBID:0x5af311d9a1c8},r=void 0,u={permalink:"/fr/blog/2020/05/05/jest-26",editUrl:"https://github.com/jestjs/jest/tree/main/website/blog/2020-05-05-jest-26.md",source:"@site/i18n/fr/docusaurus-plugin-content-blog/2020-05-05-jest-26.md",title:"Jest 26\xa0: Tic Tac",description:"Lorsque nous avons commenc\xe9 \xe0 reconstruire Jest il y a cinq ans, notre objectif \xe9tait de fournir un ex\xe9cuteur de tests sans configuration, accessible aux d\xe9butants, extensible pour presque tous les cas d'utilisation de tests et \xe9volutif pour les grands projets. L'une des versions essentielles a \xe9t\xe9 Jest 15, qui a tout regroup\xe9 et fourni de bonnes valeurs par d\xe9faut permettant aux gens d'ex\xe9cuter Jest souvent sans aucune configuration. Cependant, cette approche a un gros inconv\xe9nient car Jest installe beaucoup de d\xe9pendances dans vos projets dont vous n'avez peut-\xeatre pas besoin.",date:"2020-05-05T00:00:00.000Z",formattedDate:"5 mai 2020",tags:[],readingTime:6.67,hasTruncateMarker:!0,authors:[{name:"Christoph Nakazawa",url:"http://twitter.com/cpojer"}],frontMatter:{title:"Jest 26\xa0: Tic Tac",author:"Christoph Nakazawa",authorURL:"http://twitter.com/cpojer",authorFBID:0x5af311d9a1c8},unlisted:!1,prevItem:{title:"Mise \xe0 niveau du site web de Jest",permalink:"/fr/blog/2021/03/09/jest-website-upgrade"},nextItem:{title:"Jest 25\xa0: \ud83d\ude80 pose des fondations pour le futur",permalink:"/fr/blog/2020/01/21/jest-25"}},i={authorsImageUrls:[void 0]},c=[];function d(e){const t=Object.assign({p:"p",a:"a",strong:"strong"},(0,a.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["Lorsque nous avons commenc\xe9 \xe0 reconstruire Jest il y a cinq ans, notre objectif \xe9tait de fournir un ex\xe9cuteur de tests sans configuration, accessible aux d\xe9butants, extensible pour presque tous les cas d'utilisation de tests et \xe9volutif pour les grands projets. L'une des versions essentielles a \xe9t\xe9 ",(0,n.jsx)(t.a,{href:"/blog/2016/09/01/jest-15",children:"Jest 15"}),", qui a tout regroup\xe9 et fourni de bonnes valeurs par d\xe9faut permettant aux gens d'ex\xe9cuter Jest souvent sans aucune configuration. Cependant, cette approche a un gros inconv\xe9nient car Jest installe beaucoup de d\xe9pendances dans vos projets dont vous n'avez peut-\xeatre pas besoin."]}),"\n",(0,n.jsxs)(t.p,{children:["Nous commen\xe7ons \xe0 rem\xe9dier \xe0 cette lacune et nous nous effor\xe7ons de r\xe9duire la taille de l'installation de Jest tout en le gardant accessible et extensible. Nous avons apport\xe9 les ",(0,n.jsx)(t.strong,{children:"changements de rupture"})," suivants dans Jest 26 :"]})]})}const l=function(e={}){const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(d,e)})):d(e)}},1670:(e,t,s)=>{s.d(t,{Zo:()=>u,ah:()=>o});var n=s(7378);const a=n.createContext({});function o(e){const t=n.useContext(a);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const r={};function u({components:e,children:t,disableParentContext:s}){let u;return u=s?"function"==typeof e?e({}):e||r:o(e),n.createElement(a.Provider,{value:u},t)}}}]);