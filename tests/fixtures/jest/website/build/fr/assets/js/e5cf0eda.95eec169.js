"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[5875],{2230:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>u});var i=t(4246),n=t(1670);const r={title:"Jest 24\xa0: \ud83d\udc85 Actualisation, polissage, facilit\xe9 d'utilisation de TypeScript",author:"Simen Bekkhus",authorURL:"https://github.com/SimenB",authorFBID:0x5af3c395182e},o=void 0,a={permalink:"/fr/blog/2019/01/25/jest-24-refreshing-polished-typescript-friendly",editUrl:"https://github.com/jestjs/jest/tree/main/website/blog/2019-01-25-jest-24-refreshing-polished-typescript-friendly.md",source:"@site/i18n/fr/docusaurus-plugin-content-blog/2019-01-25-jest-24-refreshing-polished-typescript-friendly.md",title:"Jest 24\xa0: \ud83d\udc85 Actualisation, polissage, facilit\xe9 d'utilisation de TypeScript",description:"Aujourd'hui, nous sommes heureux de vous annoncer la prochaine version majeure de Jest - la version 24\xa0! Quatre mois se sont \xe9coul\xe9s depuis la derni\xe8re version mineure, et huit mois depuis Jest 23. Cette mise \xe0 jour est donc importante, et chacun y trouvera son compte\xa0! Parmi les points forts, citons la prise en charge int\xe9gr\xe9e de TypeScript par la mise \xe0 niveau des internes de Jest vers Babel 7, la correction de certains probl\xe8mes de longue date concernant l'absence de sortie de la console et les probl\xe8mes de performance lors du calcul de diffs importants, ainsi qu'un tout nouveau site Web \xe9tincelant. \u2728",date:"2019-01-25T00:00:00.000Z",formattedDate:"25 janvier 2019",tags:[],readingTime:9.235,hasTruncateMarker:!0,authors:[{name:"Simen Bekkhus",url:"https://github.com/SimenB"}],frontMatter:{title:"Jest 24\xa0: \ud83d\udc85 Actualisation, polissage, facilit\xe9 d'utilisation de TypeScript",author:"Simen Bekkhus",authorURL:"https://github.com/SimenB",authorFBID:0x5af3c395182e},unlisted:!1,prevItem:{title:"Jest 25\xa0: \ud83d\ude80 pose des fondations pour le futur",permalink:"/fr/blog/2020/01/21/jest-25"},nextItem:{title:"Soutien de Jest Open Source",permalink:"/fr/blog/2018/06/27/supporting-jest-open-source"}},l={authorsImageUrls:[void 0]},u=[{value:"Nouveau site web",id:"nouveau-site-web",level:2},{value:"Prise en charge de TypeScript",id:"prise-en-charge-de-typescript",level:2},{value:"<code>test.todo</code>",id:"testtodo",level:2},{value:"Messages d&#39;assertion am\xe9lior\xe9s",id:"messages-dassertion-am\xe9lior\xe9s",level:2},{value:"R\xe9paration de vieilles douleurs",id:"r\xe9paration-de-vieilles-douleurs",level:2},{value:"Autres faits marquants",id:"autres-faits-marquants",level:2},{value:"Changements de rupture",id:"changements-de-rupture",level:2},{value:"L&#39;avenir",id:"lavenir",level:2}];function c(e){const s=Object.assign({p:"p",a:"a",h2:"h2",code:"code",em:"em",admonition:"admonition",pre:"pre",img:"img",ul:"ul",li:"li"},(0,n.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.p,{children:"Aujourd'hui, nous sommes heureux de vous annoncer la prochaine version majeure de Jest - la version 24\xa0! Quatre mois se sont \xe9coul\xe9s depuis la derni\xe8re version mineure, et huit mois depuis Jest 23. Cette mise \xe0 jour est donc importante, et chacun y trouvera son compte\xa0! Parmi les points forts, citons la prise en charge int\xe9gr\xe9e de TypeScript par la mise \xe0 niveau des internes de Jest vers Babel 7, la correction de certains probl\xe8mes de longue date concernant l'absence de sortie de la console et les probl\xe8mes de performance lors du calcul de diffs importants, ainsi qu'un tout nouveau site Web \xe9tincelant. \u2728"}),"\n",(0,i.jsxs)(s.p,{children:["For a full list of all changes see the ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/blob/main/CHANGELOG.md",children:"changelog"}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"nouveau-site-web",children:"Nouveau site web"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://twitter.com/orta",children:"@orta"})," a fourni une belle refonte du site web de Jest, qui a \xe9t\xe9 impl\xe9ment\xe9 par les membres de la communaut\xe9 ",(0,i.jsx)(s.a,{href:"https://twitter.com/montogeek",children:"@montogeek"})," et ",(0,i.jsx)(s.a,{href:"https://github.com/brainkim",children:"@brainkim"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["L'objectif de la refonte \xe9tait de mettre davantage en \xe9vidence ce qui rend Jest g\xe9nial, et de dissocier l'id\xe9e que Jest est principalement un outil pour tester les applications React - vous pouvez utiliser Jest pour toutes sortes de projets et nous voulons que cela soit \xe9vident. You can read more about the ideas behind the redesign in ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/issues/7265",children:"this issue"}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"prise-en-charge-de-typescript",children:"Prise en charge de TypeScript"}),"\n",(0,i.jsxs)(s.p,{children:["Nous avons mis \xe0 jour Babel 7 en interne pour Jest 24, qui est fourni avec la prise en charge pour les projets TypeScript. Cela signifie que Jest peut supporter la transpilation de TypeScript hors de la bo\xeete, tant que vous configurez Babel pour l'utiliser avec ",(0,i.jsx)(s.code,{children:"@babel/preset-typescript"}),". La prise en charge par d\xe9faut de TypeScript, similaire \xe0 celle de Flow, pr\xe9sente un inconv\xe9nient\xa0: Babel ne supprimera les annotations de type que pour rendre votre code valide en JavaScript. Il ",(0,i.jsx)(s.em,{children:"ne v\xe9rifiera pas"})," votre code."]}),"\n",(0,i.jsxs)(s.p,{children:["Bien que Jest prenne en charge Babel 7 depuis la version 22 publi\xe9e en d\xe9cembre 2017, il a fallu utiliser un module passerelle afin de s'adapter \xe0 la prise en charge de Babel 6 par Jest. Dans Jest 24, nous avons enti\xe8rement migr\xe9 vers Babel 7, avec l'aide pr\xe9cieuse du membre de la communaut\xe9 ",(0,i.jsx)(s.a,{href:"https://github.com/milesj",children:"@milesj"}),". Cela signifie que la configuration est maintenant plus facile et que nous pouvons profiter des autres fonctionnalit\xe9s de Babel 7, comme le chargement de la configuration et la transpilation automatique des ",(0,i.jsx)(s.code,{children:"modules"}),". Assurez-vous de supprimer le ",(0,i.jsx)(s.code,{children:"babel-core@^7.0.0-bridge.0"})," car il n'est plus n\xe9cessaire maintenant."]}),"\n",(0,i.jsxs)(s.p,{children:["Si vous voulez ex\xe9cuter des contr\xf4les de type pendant que vous testez, vous devez utiliser ",(0,i.jsx)(s.a,{href:"https://github.com/kulshekhar/ts-jest",children:(0,i.jsx)(s.code,{children:"ts-jest"})}),". Vous devrez configurer le transformateur, car Jest applique par d\xe9faut Babel aux fichiers ",(0,i.jsx)(s.code,{children:".ts"})," (et ",(0,i.jsx)(s.code,{children:".tsx"}),"). Alternativement, vous pouvez ex\xe9cuter ",(0,i.jsx)(s.code,{children:"tsc"})," ou m\xeame utiliser un ex\xe9cuteur Jest pour transpiler simultan\xe9ment votre TypeScript tout en ex\xe9cutant vos tests\xa0! Consultez ",(0,i.jsx)(s.a,{href:"https://github.com/azz/jest-runner-tsc",children:(0,i.jsx)(s.code,{children:"jest-runner-tsc"})})," pour plus d'informations."]}),"\n",(0,i.jsxs)(s.p,{children:["Consultez ",(0,i.jsx)(s.a,{href:"/docs/getting-started#using-typescript",children:"les documentations"})," pour plus de d\xe9tails."]}),"\n",(0,i.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,i.jsxs)(s.p,{children:["If you for whatever reason cannot upgrade to Babel 7, you can still use Jest 24 with ",(0,i.jsx)(s.code,{children:"babel@6"})," as long as you keep ",(0,i.jsx)(s.code,{children:"babel-jest"})," at version 23."]})}),"\n",(0,i.jsx)(s.h2,{id:"testtodo",children:(0,i.jsx)(s.code,{children:"test.todo"})}),"\n",(0,i.jsx)(s.p,{children:"Jest 23 had a change that made tests missing an implementation throw instead of being skipped. This change was made due to feedback that accidentally skipped tests were hard to discover and hard to track down. However, this change broke the workflow for quite a few developers who used the feature to sketch out which tests to write."}),"\n",(0,i.jsxs)(s.p,{children:["In Jest 24, we are addressing this issue by adding an explicit ",(0,i.jsx)(s.code,{children:"test.todo"})," (inspired by the excellent AVA), which will be printed separately in the test summary. It allows you to quickly sketch out which tests you want to write and in the future, an ",(0,i.jsx)(s.a,{href:"https://eslint.org/",children:"ESLint"})," rule might even be able to warn you that you have forgotten to write out some tests."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-js",children:"test.todo('une entr\xe9e invalide doit \xeatre lev\xe9e');\n\ntest.todo('les options manquantes doivent \xeatre normalis\xe9es');\n"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"test.todo",src:t(4661).Z+"",width:"2324",height:"1422"})}),"\n",(0,i.jsx)(s.h2,{id:"messages-dassertion-am\xe9lior\xe9s",children:"Messages d'assertion am\xe9lior\xe9s"}),"\n",(0,i.jsxs)(s.p,{children:["When tests fail, you need to make confident and correct decisions which changes are expected progress and which changes are unexpected regressions. It is especially important not to miss a few regressions hidden among much progress. Jest 24 makes reports when assertions fail more clear and concise for several matchers. Because the effort will continue in Jest 25, you might notice some temporary inconsistencies. If your tests never fail, then you won't get to see them - for the rest of us, it'll be easier to debug why something isn't working as expected. Thanks for the hard work by ",(0,i.jsx)(s.a,{href:"https://twitter.com/ittordepam",children:"@ittordepam"})," and other contributors from the community."]}),"\n",(0,i.jsxs)(s.p,{children:["You can see these changes across all these PRs: ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/7621",children:"7621"}),", ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/7557",children:"7557"}),", ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/7448",children:"7448"}),", ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/7325",children:"7325"}),", ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/7241",children:"7241"}),", ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/7152",children:"7152"}),", ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/7125",children:"7125"}),", ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/7107",children:"7107"}),", ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/6961",children:"6961"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"Examples:"}),"\n",(0,i.jsx)(s.p,{children:"Failing assertion"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"failing assertion",src:t(9975).Z+"",width:"1844",height:"1246"})}),"\n",(0,i.jsx)(s.p,{children:"Type mismatch"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"different types",src:t(2340).Z+"",width:"1844",height:"1246"})}),"\n",(0,i.jsx)(s.p,{children:"Mock function not called"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"mock functions",src:t(5324).Z+"",width:"1844",height:"1246"})}),"\n",(0,i.jsx)(s.h2,{id:"r\xe9paration-de-vieilles-douleurs",children:"R\xe9paration de vieilles douleurs"}),"\n",(0,i.jsx)(s.p,{children:"We've fixed a couple of really old issues in this release."}),"\n",(0,i.jsxs)(s.p,{children:["The first one we'd like to highlight is ",(0,i.jsx)(s.code,{children:"console.log"})," statements going missing. Jest intercepts and collects all logs in order to give you a stack trace to them, as well as provide them to reporters so you can handle them however you want. However, this has led to an issue where they have simply been missing in certain edge cases. Luckily for Jest 24, ",(0,i.jsx)(s.a,{href:"https://twitter.com/spion",children:"@spion"})," has ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/6871",children:"stepped up"})," and fixed this issue. Thank you very much!"]}),"\n",(0,i.jsxs)(s.p,{children:["The second one is an issue where Jest runs out of memory if the difference in serialization of expected and received value has a huge number of insertion changes (either unexpected because of mistake in test or defect in serializer or expected because of temporary failures during test-driven development). ",(0,i.jsx)(s.a,{href:"https://twitter.com/ittordepam",children:"@ittordepam"})," has ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/6961",children:"replaced"})," the previous diffing algorithm with ",(0,i.jsx)(s.code,{children:"diff-sequences"})," package, which should fix this issue because it uses the theoretical minimum amount of memory. It opens up possibility for word-diffs in the future, similar to what ",(0,i.jsx)(s.a,{href:"https://git-scm.com/docs/git-diff#git-diff---word-diffltmodegt",children:"git provides"}),". Please see ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/4619",children:"this PR"})," and don't hesitate to reach out if you want to help make that happen!"]}),"\n",(0,i.jsx)(s.h2,{id:"autres-faits-marquants",children:"Autres faits marquants"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Nous avons \xe9galement apport\xe9 quelques am\xe9liorations pour ",(0,i.jsx)(s.code,{children:"globalSetup"})," et ",(0,i.jsx)(s.code,{children:"globalTeardown"})," - la transformation du code leur sera appliqu\xe9e de mani\xe8re similaire \xe0 ",(0,i.jsx)(s.code,{children:"setupFiles"})," et ils sont d\xe9sormais pris en charge en tant que partie int\xe9grante des ",(0,i.jsx)(s.code,{children:"projects"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["You can ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/6143",children:"configure"})," Jest's snapshot location, this is mainly useful if you are building tools which use Jest in a larger build process."]}),"\n",(0,i.jsxs)(s.li,{children:["Une bizarrerie de la CLI de Jest a \xe9t\xe9 que si certains drapeaux et options ont \xe9t\xe9 \xab\xa0camel cas\xe9s\xa0\xbb (comme ",(0,i.jsx)(s.code,{children:"runInBand"}),"), d'autres ne l'ont pas \xe9t\xe9 (comme ",(0,i.jsx)(s.code,{children:"no-cache"}),"). Dans Jest 24, les deux sont reconnus, ce qui signifie que vous pouvez \xe9crire vos arguments CLI comme vous le souhaitez."]}),"\n",(0,i.jsxs)(s.li,{children:["Nous avons renomm\xe9 ",(0,i.jsx)(s.code,{children:"setupTestFrameworkScriptFile"})," en ",(0,i.jsx)(s.code,{children:"setupFilesAfterEnv"}),", et nous l'avons converti en tableau. Nous esp\xe9rons que cela rendra les options plus claires. Nous avons pr\xe9vu de remanier encore la configuration dans la prochaine version majeure, voir le paragraphe dans la section ci-dessous."]}),"\n",(0,i.jsxs)(s.li,{children:["Pour r\xe9duire la quantit\xe9 de magie que Jest effectue pour \xab\xa0juste fonctionner\u2122\xa0\xbb, dans cette version nous avons d\xe9cid\xe9 de laisser tomber l'injection automatique de ",(0,i.jsx)(s.code,{children:"regenerator-runtime"}),", qui est parfois utilis\xe9 dans le code async compil\xe9. L'inclusion de ",(0,i.jsx)(s.code,{children:"regenerator-runtime"})," n'est pas toujours n\xe9cessaire et nous pensons que c'est \xe0 l'utilisateur de l'inclure si c'est n\xe9cessaire. Si vous utilisez ",(0,i.jsx)(s.code,{children:"@babel/preset-env"})," avec ",(0,i.jsx)(s.code,{children:"targets"}),", d\xe9finissez une version moderne de Node (par exemple Node 6+) vous n'aurez pas besoin de l'inclure. Veuillez consulter nos ",(0,i.jsx)(s.a,{href:"/docs/getting-started#using-babel",children:"docs de l'utilisation de Babel"})," pour plus d'informations."]}),"\n",(0,i.jsxs)(s.li,{children:["Node.js 10 a fourni un module exp\xe9rimental ",(0,i.jsxs)(s.a,{href:"https://nodejs.org/api/worker_threads.html",children:["appel\xe9 ",(0,i.jsx)(s.code,{children:"worker_threads"})]}),", qui est similaire aux threads Worker dans le navigateur. ",(0,i.jsx)(s.code,{children:"jest-worker"}),", une partie de la ",(0,i.jsx)(s.a,{href:"/docs/jest-platform",children:"plateforme Jest"}),", sera en mesure d'utiliser ",(0,i.jsx)(s.code,{children:"worker_threads"})," s'il est disponible au lieu de ",(0,i.jsx)(s.code,{children:"child_process"}),", ce qui le rend encore plus rapide\xa0! ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/6676",children:"Benchmarks"})," show a 50% improvement. En raison de sa nature exp\xe9rimentale, il n'est pas activ\xe9 lorsque vous utilisez Jest en tant qu'ex\xe9cuteur de test, mais vous pouvez l'utiliser dans vos propres projets aujourd'hui\xa0! Nous pr\xe9voyons de l'activer par d\xe9faut lorsqu'il sera sorti du statut exp\xe9rimental dans Node.js."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"changements-de-rupture",children:"Changements de rupture"}),"\n",(0,i.jsxs)(s.p,{children:["While all breaking changes are listed in the ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/blob/main/CHANGELOG.md",children:"changelog"}),", there's a few of them that are worth highlighting:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Nous avons fait une mise \xe0 jour vers Micromatch 3. Bien que cela n'affecte pas tous les utilisateurs, cette version est plus stricte dans l'analyse des globs que la version 2, qui est utilis\xe9e dans Jest 23. Veuillez lire ",(0,i.jsx)(s.a,{href:"https://github.com/micromatch/micromatch/issues/133#issuecomment-404211484",children:"ce probl\xe8me"})," et les issues li\xe9es pour des exemples de globs invalides au cas o\xf9 vous auriez des probl\xe8mes."]}),"\n",(0,i.jsx)(s.li,{children:"Nous avons supprim\xe9 les restes de code qui \xe9taient n\xe9cessaires pour Node 4. Il \xe9tait auparavant techniquement possible d'ex\xe9cuter Jest 23 sur Node 4 - ce n'est plus possible sans polyfill et transpilation."}),"\n",(0,i.jsxs)(s.li,{children:["Quelques changements dans la s\xe9rialisation des fonctions simul\xe9es dans les snapshots - assurez-vous de v\xe9rifier vos snapshots mis \xe0 jour apr\xe8s la mise \xe0 jour de la version. Related ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/6381",children:"PR"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Jest n'injecte plus automatiquement ",(0,i.jsx)(s.code,{children:"regenerator-runtime"})," - si vous obtenez des erreurs \xe0 ce sujet, assurez-vous de configurer Babel pour qu'il transpile correctement les fonctions ",(0,i.jsx)(s.code,{children:"async"})," en utilisant par exemple ",(0,i.jsx)(s.code,{children:"@babel/preset-env"}),". Related ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/7595",children:"PR"}),"."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"lavenir",children:"L'avenir"}),"\n",(0,i.jsxs)(s.p,{children:["We are incredibly humbled by the results in ",(0,i.jsx)(s.a,{href:"https://2018.stateofjs.com/awards/",children:"State Of JS 2018"}),", where Jest won the \u201cHighest Satisfaction\u201d award. Another huge thing to happen in 2018 was in October, when Jest passed 2 million weekly downloads for the first time. Thank you."]}),"\n",(0,i.jsx)(s.p,{children:"We are very thankful for the trust in us shown by the community, and hope to build on it in the future. We will ensure Jest 24 and future releases will continue to build upon this incredible foundation, and continue to be an integral part of JavaScript developers' toolkits."}),"\n",(0,i.jsxs)(s.p,{children:["This has been the first release where we have explored the idea of using our Open Collective funding to create bug bounties. This worked well in getting non-core developers involved in the implementation of the new landing page, and we're optimistic for a long running bug where Jest globals ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/issues/2549",children:"are mismatched"})," from Node globals. We'd like to do more, if you have a pet bug that's a good candidate for our bounty program, please let us know. In the meantime, you can find all the tickets with a bounty via ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/labels/Has%20Bounty",children:"the issue label"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["We have already started to make plans for the next release of Jest 25, with the biggest planned feature being an overhaul of our configuration, which is pretty hard to grok, mainly because of overlapping option and mixing globs and regular expressions. Feedback on how you want Jest's configuration to look is very much welcome, and can be submitted in ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/issues/7185",children:"this issue"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["You might also have heard that we are planning to migrate the code base from Flow to TypeScript. We are hopeful that this migration will enable even more contributors to jump in and help make 2019 even better for JavaScript testing. \ud83d\ude80 The plan is to land this in a minor release in the not too distant future. Feedback on this choice can be added to ",(0,i.jsx)(s.a,{href:"https://github.com/jestjs/jest/pull/7554",children:"the RFC"}),"."]}),"\n",(0,i.jsxs)(s.p,{children:["Lastly, if you've ever wondered about how Jest is built, ",(0,i.jsx)(s.a,{href:"https://twitter.com/cpojer",children:"@cpojer"})," has recorded a video with an architectural overview of how Jest is put together under the hood. Feel free to reach out if you have any further questions about it. The video is available on our ",(0,i.jsx)(s.a,{href:"/docs/architecture",children:"website"}),"."]}),"\n",(0,i.jsx)(s.p,{children:"Happy Jesting\xa0! \ud83c\udccf"})]})}const d=function(e={}){const{wrapper:s}=Object.assign({},(0,n.ah)(),e.components);return s?(0,i.jsx)(s,Object.assign({},e,{children:(0,i.jsx)(c,e)})):c(e)}},9975:(e,s,t)=>{t.d(s,{Z:()=>i});const i=t.p+"assets/images/24-assertion-error-424a6b04bd7012af7d80419981d553d4.png"},2340:(e,s,t)=>{t.d(s,{Z:()=>i});const i=t.p+"assets/images/24-different-types-6cdc48fef8c458eeb7b804ba60f4661e.png"},5324:(e,s,t)=>{t.d(s,{Z:()=>i});const i=t.p+"assets/images/24-mock-function-c93fb0afe32cea366976c870d89d9309.png"},4661:(e,s,t)=>{t.d(s,{Z:()=>i});const i=t.p+"assets/images/24-todo-c06adf4108c116aa230143cb8a147ae3.png"},1670:(e,s,t)=>{t.d(s,{Zo:()=>a,ah:()=>r});var i=t(7378);const n=i.createContext({});function r(e){const s=i.useContext(n);return i.useMemo((()=>"function"==typeof e?e(s):{...s,...e}),[s,e])}const o={};function a({components:e,children:s,disableParentContext:t}){let a;return a=t?"function"==typeof e?e({}):e||o:r(e),i.createElement(n.Provider,{value:a},s)}}}]);