"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[7811],{3927:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>m,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>u,toc:()=>p});var t=n(4246),o=n(1670),i=n(8447),l=n(2599),r=n(7860),c=n(6294);const a={id:"jest-object",title:"L'objet Jest"},d=void 0,u={unversionedId:"jest-object",id:"version-29.5/jest-object",title:"L'objet Jest",description:"L'objet jest est automatiquement dans la port\xe9e dans chaque fichier de test. Les m\xe9thodes de l'objet jest aident \xe0 cr\xe9er des simulations et vous permettent de contr\xf4ler le comportement global de Jest. Il peut \xe9galement \xeatre import\xe9 explicitement par import  from '@jest/globals'.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/version-29.5/JestObjectAPI.md",sourceDirName:".",slug:"/jest-object",permalink:"/fr/docs/29.5/jest-object",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/jest-v2/fr",tags:[],version:"29.5",frontMatter:{id:"jest-object",title:"L'objet Jest"},sidebar:"api",previous:{title:"Fonctions simul\xe9es",permalink:"/fr/docs/29.5/mock-function-api"},next:{title:"Configuration de Jest",permalink:"/fr/docs/29.5/configuration"}},m={},p=[{value:"M\xe9thodes",id:"m\xe9thodes",level:2},{value:"Modules simul\xe9s",id:"modules-simul\xe9s",level:2},{value:"<code>jest.disableAutomock()</code>",id:"jestdisableautomock",level:3},{value:"<code>jest.enableAutomock()</code>",id:"jestenableautomock",level:3},{value:"<code>jest.createMockFromModule(moduleName)</code>",id:"jestcreatemockfrommodulemodulename",level:3},{value:"<code>Fonction</code>",id:"fonction",level:4},{value:"<code>Classe</code>",id:"classe",level:4},{value:"<code>Objet</code>",id:"objet",level:4},{value:"<code>Tableau</code>",id:"tableau",level:4},{value:"<code>Primitives</code>",id:"primitives",level:4},{value:"<code>jest.mock(moduleName, factory, options)</code>",id:"jestmockmodulename-factory-options",level:3},{value:"<code>jest.Mocked&lt;Source&gt;</code>",id:"jestmockedsource",level:3},{value:"<code>jest.mocked(source, options?)</code>",id:"jestmockedsource-options",level:3},{value:"<code>jest.unmock(moduleName)</code>",id:"jestunmockmodulename",level:3},{value:"<code>jest.deepUnmock(moduleName)</code>",id:"jestdeepunmockmodulename",level:3},{value:"<code>jest.doMock(moduleName, factory, options)</code>",id:"jestdomockmodulename-factory-options",level:3},{value:"<code>jest.dontMock(moduleName)</code>",id:"jestdontmockmodulename",level:3},{value:"<code>jest.setMock(moduleName, moduleExports)</code>",id:"jestsetmockmodulename-moduleexports",level:3},{value:"<code>jest.requireActual(moduleName)</code>",id:"jestrequireactualmodulename",level:3},{value:"<code>jest.requireMock(moduleName)</code>",id:"jestrequiremockmodulename",level:3},{value:"<code>jest.resetModules()</code>",id:"jestresetmodules",level:3},{value:"<code>jest.isolateModules(fn)</code>",id:"jestisolatemodulesfn",level:3},{value:"<code>jest.isolateModulesAsync(fn)</code>",id:"jestisolatemodulesasyncfn",level:3},{value:"Fonctions simul\xe9es",id:"fonctions-simul\xe9es",level:2},{value:"<code>jest.fn(implementation?)</code>",id:"jestfnimplementation",level:3},{value:"<code>jest.isMockFunction(fn)</code>",id:"jestismockfunctionfn",level:3},{value:"<code>jest.replaceProperty(object, propertyKey, value)</code>",id:"jestreplacepropertyobject-propertykey-value",level:3},{value:"<code>jest.spyOn(object, methodName)</code>",id:"jestspyonobject-methodname",level:3},{value:"<code>jest.spyOn(object, methodName, accessType?)</code>",id:"jestspyonobject-methodname-accesstype",level:3},{value:"<code>jest.Replaced&lt;Source&gt;</code>",id:"jestreplacedsource",level:3},{value:"<code>jest.Spied&lt;Source&gt;</code>",id:"jestspiedsource",level:3},{value:"<code>jest.clearAllMocks()</code>",id:"jestclearallmocks",level:3},{value:"<code>jest.resetAllMocks()</code>",id:"jestresetallmocks",level:3},{value:"<code>jest.restoreAllMocks()</code>",id:"jestrestoreallmocks",level:3},{value:"Faux temporisateurs",id:"faux-temporisateurs",level:2},{value:"<code>jest.useFakeTimers(fakeTimersConfig?)</code>",id:"jestusefaketimersfaketimersconfig",level:3},{value:"<code>jest.useRealTimers()</code>",id:"jestuserealtimers",level:3},{value:"<code>jest.runAllTicks()</code>",id:"jestrunallticks",level:3},{value:"<code>jest.runAllTimers()</code>",id:"jestrunalltimers",level:3},{value:"<code>jest.runAllTimersAsync()</code>",id:"jestrunalltimersasync",level:3},{value:"<code>jest.runAllImmediates()</code>",id:"jestrunallimmediates",level:3},{value:"<code>jest.advanceTimersByTime(msToRun)</code>",id:"jestadvancetimersbytimemstorun",level:3},{value:"<code>jest.advanceTimersByTimeAsync(msToRun)</code>",id:"jestadvancetimersbytimeasyncmstorun",level:3},{value:"<code>jest.runOnlyPendingTimers()</code>",id:"jestrunonlypendingtimers",level:3},{value:"<code>jest.runOnlyPendingTimersAsync()</code>",id:"jestrunonlypendingtimersasync",level:3},{value:"<code>jest.advanceTimersToNextTimer(steps)</code>",id:"jestadvancetimerstonexttimersteps",level:3},{value:"<code>jest.advanceTimersToNextTimerAsync(steps)</code>",id:"jestadvancetimerstonexttimerasyncsteps",level:3},{value:"<code>jest.clearAllTimers()</code>",id:"jestclearalltimers",level:3},{value:"<code>jest.getTimerCount()</code>",id:"jestgettimercount",level:3},{value:"<code>jest.now()</code>",id:"jestnow",level:3},{value:"<code>jest.setSystemTime(now?: number | Date)</code>",id:"jestsetsystemtimenow-number--date",level:3},{value:"<code>jest.getRealSystemTime()</code>",id:"jestgetrealsystemtime",level:3},{value:"Divers",id:"divers",level:2},{value:"<code>jest.getSeed()</code>",id:"jestgetseed",level:3},{value:"<code>jest.isEnvironmentTornDown()</code>",id:"jestisenvironmenttorndown",level:3},{value:"<code>jest.retryTimes(numRetries, options?)</code>",id:"jestretrytimesnumretries-options",level:3},{value:"<code>jest.setTimeout(timeout)</code>",id:"jestsettimeouttimeout",level:3}];function j(e){const s=Object.assign({p:"p",code:"code",h2:"h2",hr:"hr",h3:"h3",admonition:"admonition",a:"a",pre:"pre",h4:"h4",ul:"ul",li:"li",strong:"strong",em:"em"},(0,o.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["L'objet ",(0,t.jsx)(s.code,{children:"jest"})," est automatiquement dans la port\xe9e dans chaque fichier de test. Les m\xe9thodes de l'objet ",(0,t.jsx)(s.code,{children:"jest"})," aident \xe0 cr\xe9er des simulations et vous permettent de contr\xf4ler le comportement global de Jest. Il peut \xe9galement \xeatre import\xe9 explicitement par ",(0,t.jsx)(s.code,{children:"import {jest} from '@jest/globals'"}),"."]}),"\n","\n",(0,t.jsx)(r.ZP,{}),"\n",(0,t.jsx)(s.h2,{id:"m\xe9thodes",children:"M\xe9thodes"}),"\n","\n","\n",(0,t.jsx)(c.Z,{toc:p.slice(1)}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"modules-simul\xe9s",children:"Modules simul\xe9s"}),"\n",(0,t.jsx)(s.h3,{id:"jestdisableautomock",children:(0,t.jsx)(s.code,{children:"jest.disableAutomock()"})}),"\n",(0,t.jsx)(s.p,{children:"D\xe9sactive la simulation automatique dans le chargeur de module."}),"\n",(0,t.jsxs)(s.admonition,{type:"info",children:[(0,t.jsxs)(s.p,{children:["Automatic mocking should be enabled via ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/configuration#automock-boolean",children:(0,t.jsx)(s.code,{children:"automock"})})," configuration option for this method to have any effect. Also see documentation of the configuration option for more details."]}),(0,t.jsxs)(i.Z,{groupId:"code-examples",children:[(0,t.jsx)(l.Z,{value:"js",label:"JavaScript",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:"tab",children:"/** @type {import('jest').Config} */\nconst config = {\n  automock: true,\n};\n\nmodule.exports = config;\n"})})}),(0,t.jsx)(l.Z,{value:"ts",label:"TypeScript",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"import type {Config} from 'jest';\n\nconst config: Config = {\n  automock: true,\n};\n\nexport default config;\n"})})})]})]}),"\n",(0,t.jsxs)(s.p,{children:["After ",(0,t.jsx)(s.code,{children:"disableAutomock()"})," is called, all ",(0,t.jsx)(s.code,{children:"require()"}),"s will return the real versions of each module (rather than a mocked version)."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:'title="utils.js"',children:"export default {\n  authorize: () => {\n    return 'token';\n  },\n};\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:'title="__tests__/disableAutomocking.js"',children:"import utils from '../utils';\n\njest.disableAutomock();\n\ntest('original implementation', () => {\n  // maintenant nous avons l'impl\xe9mentation originale,\n  // m\xeame si nous d\xe9finissons l'auto-simulation dans une configuration de jest\n  expect(utils.authorize()).toBe('token');\n});\n"})}),"\n",(0,t.jsx)(s.p,{children:"Cela est g\xe9n\xe9ralement utile lorsque le nombre de d\xe9pendances que vous souhaitez simuler est bien inf\xe9rieur au nombre de d\xe9pendances que vous ne souhaitez pas. Par exemple, si vous \xe9crivez un test pour un module qui utilise un grand nombre de d\xe9pendances qui peuvent \xeatre raisonnablement class\xe9es comme des \xab\xa0d\xe9tails d'impl\xe9mentation\xa0\xbb du module, alors vous ne voulez probablement pas les simuler."}),"\n",(0,t.jsxs)(s.p,{children:['Examples of dependencies that might be considered "implementation details" are things ranging from language built-ins (e.g. ',(0,t.jsx)(s.code,{children:"Array.prototype"})," methods) to highly common utility methods (e.g. ",(0,t.jsx)(s.code,{children:"underscore"}),", ",(0,t.jsx)(s.code,{children:"lodash"}),", array utilities, etc) and entire libraries like ",(0,t.jsx)(s.code,{children:"React.js"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["Renvoie l'objet ",(0,t.jsx)(s.code,{children:"jest"})," pour le cha\xeenage."]}),"\n",(0,t.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,t.jsxs)(s.p,{children:["When using ",(0,t.jsx)(s.code,{children:"babel-jest"}),", calls to ",(0,t.jsx)(s.code,{children:"disableAutomock()"})," will automatically be hoisted to the top of the code block. Use ",(0,t.jsx)(s.code,{children:"autoMockOff()"})," if you want to explicitly avoid this behavior."]})}),"\n",(0,t.jsx)(s.h3,{id:"jestenableautomock",children:(0,t.jsx)(s.code,{children:"jest.enableAutomock()"})}),"\n",(0,t.jsx)(s.p,{children:"Active la simulation automatique dans le chargeur de module."}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsxs)(s.p,{children:["For more details on automatic mocking see documentation of ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/configuration#automock-boolean",children:(0,t.jsx)(s.code,{children:"automock"})})," configuration option."]})}),"\n",(0,t.jsx)(s.p,{children:"Exemple\xa0:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:'title="utils.js"',children:"export default {\n  authorize: () => {\n    return 'token';\n  },\n  isAuthorized: secret => secret === 'wizard',\n};\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:'title="__tests__/enableAutomocking.js"',children:"jest.enableAutomock();\n\nimport utils from '../utils';\n\ntest('original implementation', () => {\n  // maintenant nous avons l'impl\xe9mentation simul\xe9e,\n  expect(utils.authorize._isMockFunction).toBeTruthy();\n  expect(utils.isAuthorized._isMockFunction).toBeTruthy();\n});\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Renvoie l'objet ",(0,t.jsx)(s.code,{children:"jest"})," pour le cha\xeenage."]}),"\n",(0,t.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,t.jsxs)(s.p,{children:["Lorsque vous utilisez ",(0,t.jsx)(s.code,{children:"babel-jest"}),", les appels \xe0 ",(0,t.jsx)(s.code,{children:"enableAutomock"})," seront automatiquement remont\xe9s en haut du bloc de code. Utilisez ",(0,t.jsx)(s.code,{children:"autoMockOn"})," si vous voulez \xe9viter explicitement ce comportement."]})}),"\n",(0,t.jsx)(s.h3,{id:"jestcreatemockfrommodulemodulename",children:(0,t.jsx)(s.code,{children:"jest.createMockFromModule(moduleName)"})}),"\n",(0,t.jsx)(s.p,{children:"Avec le nom d'un module, utilisez le syst\xe8me de simulation automatique pour g\xe9n\xe9rer pour vous une version simul\xe9e du module."}),"\n",(0,t.jsxs)(s.p,{children:["This is useful when you want to create a ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/manual-mocks",children:"manual mock"})," that extends the automatic mock's behavior:"]}),"\n",(0,t.jsxs)(i.Z,{groupId:"code-examples",children:[(0,t.jsxs)(l.Z,{value:"js",label:"JavaScript",children:[(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:'tab={"span":2} title="utils.js"',children:"module.exports = {\n  authorize: () => {\n    return 'token';\n  },\n  isAuthorized: secret => secret === 'wizard',\n};\n"})}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:'title="__tests__/createMockFromModule.test.js"',children:"const utils = jest.createMockFromModule('../utils');\n\nutils.isAuthorized = jest.fn(secret => secret === 'not wizard');\n\ntest('implementation created by jest.createMockFromModule', () => {\n  expect(jest.isMockFunction(utils.authorize)).toBe(true);\n  expect(utils.isAuthorized('not wizard')).toBe(true);\n});\n"})})]}),(0,t.jsxs)(l.Z,{value:"ts",label:"TypeScript",children:[(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",metastring:'tab={"span":2} title="utils.ts"',children:"export const utils = {\n  authorize: () => {\n    return 'token';\n  },\n  isAuthorized: (secret: string) => secret === 'wizard',\n};\n"})}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",metastring:'title="__tests__/createMockFromModule.test.ts"',children:"const {utils} =\n  jest.createMockFromModule<typeof import('../utils')>('../utils');\n\nutils.isAuthorized = jest.fn((secret: string) => secret === 'not wizard');\n\ntest('implementation created by jest.createMockFromModule', () => {\n  expect(jest.isMockFunction(utils.authorize)).toBe(true);\n  expect(utils.isAuthorized('not wizard')).toBe(true);\n});\n"})})]})]}),"\n",(0,t.jsxs)(s.p,{children:["Voici comment ",(0,t.jsx)(s.code,{children:"createMockFromModule"})," simulera les types de donn\xe9es suivants\xa0:"]}),"\n",(0,t.jsx)(s.h4,{id:"fonction",children:(0,t.jsx)(s.code,{children:"Fonction"})}),"\n",(0,t.jsxs)(s.p,{children:["Creates a new ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/mock-function-api",children:"mock function"}),". La nouvelle fonction n'a pas de param\xe8tres formels et lorsqu'elle est appel\xe9e, retournera ",(0,t.jsx)(s.code,{children:"undefined"}),". Cette fonctionnalit\xe9 s'applique \xe9galement aux fonctions ",(0,t.jsx)(s.code,{children:"async"}),"."]}),"\n",(0,t.jsx)(s.h4,{id:"classe",children:(0,t.jsx)(s.code,{children:"Classe"})}),"\n",(0,t.jsx)(s.p,{children:"Cr\xe9e une nouvelle classe. L'interface de la classe originale est maintenue, toutes les fonctions et propri\xe9t\xe9s des membres de la classe seront simul\xe9es."}),"\n",(0,t.jsx)(s.h4,{id:"objet",children:(0,t.jsx)(s.code,{children:"Objet"})}),"\n",(0,t.jsx)(s.p,{children:"Cr\xe9e un nouvel objet profond\xe9ment clon\xe9. Les cl\xe9s de l'objet sont maintenues et leurs valeurs sont simul\xe9es."}),"\n",(0,t.jsx)(s.h4,{id:"tableau",children:(0,t.jsx)(s.code,{children:"Tableau"})}),"\n",(0,t.jsx)(s.p,{children:"Cr\xe9e un nouveau tableau vide, ignorant l'original."}),"\n",(0,t.jsx)(s.h4,{id:"primitives",children:(0,t.jsx)(s.code,{children:"Primitives"})}),"\n",(0,t.jsx)(s.p,{children:"Cr\xe9e une nouvelle propri\xe9t\xe9 avec la m\xeame valeur primitive que la propri\xe9t\xe9 originale."}),"\n",(0,t.jsx)(s.p,{children:"Exemple\xa0:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:'title="example.js"',children:"module.exports = {\n  function: function square(a, b) {\n    return a * b;\n  },\n  asyncFunction: async function asyncSquare(a, b) {\n    const result = (await a) * b;\n    return result;\n  },\n  class: new (class Bar {\n    constructor() {\n      this.array = [1, 2, 3];\n    }\n    foo() {}\n  })(),\n  object: {\n    baz: 'foo',\n    bar: {\n      fiz: 1,\n      buzz: [1, 2, 3],\n    },\n  },\n  array: [1, 2, 3],\n  number: 123,\n  string: 'baz',\n  boolean: true,\n  symbol: Symbol.for('a.b.c'),\n};\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:'title="__tests__/example.test.js"',children:"const example = jest.createMockFromModule('../example');\n\ntest('should run example code', () => {\n  // creates a new mocked function with no formal arguments.\n  expect(example.function.name).toBe('square');\n  expect(example.function).toHaveLength(0);\n\n  // async functions get the same treatment as standard synchronous functions.\n  expect(example.asyncFunction.name).toBe('asyncSquare');\n  expect(example.asyncFunction).toHaveLength(0);\n\n  // creates a new class with the same interface, member functions and properties are mocked.\n  expect(example.class.constructor.name).toBe('Bar');\n  expect(example.class.foo.name).toBe('foo');\n  expect(example.class.array).toHaveLength(0);\n\n  // creates a deeply cloned version of the original object.\n  expect(example.object).toEqual({\n    baz: 'foo',\n    bar: {\n      fiz: 1,\n      buzz: [],\n    },\n  });\n\n  // cr\xe9e un nouveau tableau vide, ignorant le tableau original.\n  expect(example.array).toHaveLength(0);\n\n  // creates a new property with the same primitive value as the original property.\n  expect(example.number).toBe(123);\n  expect(example.string).toBe('baz');\n  expect(example.boolean).toBe(true);\n  expect(example.symbol).toEqual(Symbol.for('a.b.c'));\n});\n"})}),"\n",(0,t.jsx)(s.h3,{id:"jestmockmodulename-factory-options",children:(0,t.jsx)(s.code,{children:"jest.mock(moduleName, factory, options)"})}),"\n",(0,t.jsxs)(s.p,{children:["Simule un module avec une version simul\xe9e automatiquement lorsqu'il est exig\xe9. ",(0,t.jsx)(s.code,{children:"factory"})," et ",(0,t.jsx)(s.code,{children:"options"})," sont facultatifs. Par exemple\xa0:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:'title="banana.js"',children:"module.exports = () => 'banana';\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:'title="__tests__/test.js"',children:"jest.mock('../banana');\n\nconst banana = require('../banana'); // banana sera explicitement simul\xe9e.\n\nbanana(); // retournera 'undefined' parce que la fonction est auto-simul\xe9e.\n"})}),"\n",(0,t.jsx)(s.p,{children:"Le second argument peut \xeatre utilis\xe9 pour sp\xe9cifier une factory de modules explicite qui est ex\xe9cut\xe9e au lieu d'utiliser la fonctionnalit\xe9 de simulation automatique de Jest\xa0:"}),"\n",(0,t.jsxs)(i.Z,{groupId:"code-examples",children:[(0,t.jsx)(l.Z,{value:"js",label:"JavaScript",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:"tab",children:"jest.mock('../moduleName', () => {\n  return jest.fn(() => 42);\n});\n\n// Ex\xe9cute la fonction sp\xe9cifi\xe9e comme second argument de `jest.mock`.\nconst moduleName = require('../moduleName');\nmoduleName(); // retournera '42';\n"})})}),(0,t.jsx)(l.Z,{value:"ts",label:"TypeScript",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"// The optional type argument provides typings for the module factory\njest.mock<typeof import('../moduleName')>('../moduleName', () => {\n  return jest.fn(() => 42);\n});\n\n// This runs the function specified as second argument to `jest.mock`.\nconst moduleName = require('../moduleName');\nmoduleName(); // retournera '42';\n"})})})]}),"\n",(0,t.jsxs)(s.p,{children:["Lors de l'utilisation du param\xe8tre ",(0,t.jsx)(s.code,{children:"factory"})," pour un module ES6 avec une exportation par d\xe9faut, la propri\xe9t\xe9 ",(0,t.jsx)(s.code,{children:"__esModule : true"})," doit \xeatre sp\xe9cifi\xe9e. Cette propri\xe9t\xe9 est normalement g\xe9n\xe9r\xe9e par Babel / TypeScript, mais ici elle doit \xeatre d\xe9finie manuellement. Lors de l'importation d'une exportation par d\xe9faut, c'est une instruction pour importer la propri\xe9t\xe9 nomm\xe9e ",(0,t.jsx)(s.code,{children:"default"})," de l'objet d'exportation\xa0:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"import moduleName, {foo} from '../moduleName';\n\njest.mock('../moduleName', () => {\n  return {\n    __esModule: true,\n    default: jest.fn(() => 42),\n    foo: jest.fn(() => 43),\n  };\n});\n\nmoduleName(); // Retournera 42\nfoo(); // Retournera 43\n"})}),"\n",(0,t.jsx)(s.p,{children:"Le troisi\xe8me argument peut \xeatre utilis\xe9 pour cr\xe9er des simulations virtuels - des simulations de modules qui n'existent nulle part dans le syst\xe8me\xa0:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"jest.mock(\n  '../moduleName',\n  () => {\n    /*\n     * Impl\xe9mentation personnalis\xe9e d'un module qui n'existe pas en JS,\n     * comme un module g\xe9n\xe9r\xe9 ou un module natif dans react-native.\n     */\n  },\n  {virtual: true},\n);\n"})}),"\n",(0,t.jsx)(s.admonition,{title:"attention",type:"caution",children:(0,t.jsxs)(s.p,{children:["Importing a module in a setup file (as specified by ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/configuration#setupfilesafterenv-array",children:(0,t.jsx)(s.code,{children:"setupFilesAfterEnv"})}),") will prevent mocking for the module in question, as well as all the modules that it imports."]})}),"\n",(0,t.jsxs)(s.p,{children:["Les modules qui sont simul\xe9s avec ",(0,t.jsx)(s.code,{children:"jest.mock"})," ne sont simul\xe9s que pour le fichier qui appelle ",(0,t.jsx)(s.code,{children:"jest.mock"}),". Un autre fichier qui importe le module obtiendra l'impl\xe9mentation originale m\xeame s'il est ex\xe9cut\xe9 apr\xe8s le fichier de test qui simule le module."]}),"\n",(0,t.jsxs)(s.p,{children:["Renvoie l'objet ",(0,t.jsx)(s.code,{children:"jest"})," pour le cha\xeenage."]}),"\n",(0,t.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,t.jsxs)(s.p,{children:["\xc9criture des tests en TypeScript\xa0? Use the ",(0,t.jsx)(s.a,{href:"MockFunctionAPI.md/#jestmockedsource",children:(0,t.jsx)(s.code,{children:"jest.Mocked"})})," utility type or the ",(0,t.jsx)(s.a,{href:"MockFunctionAPI.md/#jestmockedsource-options",children:(0,t.jsx)(s.code,{children:"jest.mocked()"})})," helper method to have your mocked modules typed."]})}),"\n",(0,t.jsx)(s.h3,{id:"jestmockedsource",children:(0,t.jsx)(s.code,{children:"jest.Mocked<Source>"})}),"\n",(0,t.jsxs)(s.p,{children:["Consultez le chapitre ",(0,t.jsx)(s.a,{href:"MockFunctionAPI.md/#jestmockedsource",children:"Utilisation de TypeScript"})," de la page des fonctions fictives pour la documentation."]}),"\n",(0,t.jsx)(s.h3,{id:"jestmockedsource-options",children:(0,t.jsx)(s.code,{children:"jest.mocked(source, options?)"})}),"\n",(0,t.jsxs)(s.p,{children:["Consultez le chapitre ",(0,t.jsx)(s.a,{href:"MockFunctionAPI.md/#jestmockedsource-options",children:"Utilisation de TypeScript"})," de la page des fonctions fictives pour la documentation."]}),"\n",(0,t.jsx)(s.h3,{id:"jestunmockmodulename",children:(0,t.jsx)(s.code,{children:"jest.unmock(moduleName)"})}),"\n",(0,t.jsxs)(s.p,{children:["Indique que le syst\xe8me de modules ne doit jamais retourner une version simul\xe9e du module sp\xe9cifi\xe9 \xe0 partir de ",(0,t.jsx)(s.code,{children:"require()"})," (par exemple, qu'il doit toujours retourner le module r\xe9el)."]}),"\n",(0,t.jsx)(s.p,{children:"L'utilisation la plus fr\xe9quente de cette API est de sp\xe9cifier le module qu'un test donn\xe9 a l'intention de tester (et donc ne veut pas \xeatre automatiquement simul\xe9)."}),"\n",(0,t.jsxs)(s.p,{children:["Renvoie l'objet ",(0,t.jsx)(s.code,{children:"jest"})," pour le cha\xeenage."]}),"\n",(0,t.jsx)(s.h3,{id:"jestdeepunmockmodulename",children:(0,t.jsx)(s.code,{children:"jest.deepUnmock(moduleName)"})}),"\n",(0,t.jsx)(s.p,{children:"Indicates that the module system should never return a mocked version of the specified module and its dependencies."}),"\n",(0,t.jsxs)(s.p,{children:["Renvoie l'objet ",(0,t.jsx)(s.code,{children:"jest"})," pour le cha\xeenage."]}),"\n",(0,t.jsx)(s.h3,{id:"jestdomockmodulename-factory-options",children:(0,t.jsx)(s.code,{children:"jest.doMock(moduleName, factory, options)"})}),"\n",(0,t.jsxs)(s.p,{children:["Lorsque vous utilisez ",(0,t.jsx)(s.code,{children:"babel-jest"}),", les appels \xe0 ",(0,t.jsx)(s.code,{children:"mock"})," seront automatiquement remont\xe9s en haut du bloc de code. Utilisez cette m\xe9thode si vous voulez \xe9viter explicitement ce comportement."]}),"\n",(0,t.jsx)(s.p,{children:"Un exemple o\xf9 cela est utile est lorsque vous voulez simuler un module diff\xe9remment dans le m\xeame fichier\xa0:"}),"\n",(0,t.jsxs)(i.Z,{groupId:"code-examples",children:[(0,t.jsx)(l.Z,{value:"js",label:"JavaScript",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:"tab",children:"beforeEach(() => {\n  jest.resetModules();\n});\n\ntest('moduleName 1', () => {\n  jest.doMock('../moduleName', () => {\n    return jest.fn(() => 1);\n  });\n  const moduleName = require('../moduleName');\n  expect(moduleName()).toBe(1);\n});\n\ntest('moduleName 2', () => {\n  jest.doMock('../moduleName', () => {\n    return jest.fn(() => 2);\n  });\n  const moduleName = require('../moduleName');\n  expect(moduleName()).toBe(2);\n});\n"})})}),(0,t.jsx)(l.Z,{value:"ts",label:"TypeScript",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"beforeEach(() => {\n  jest.resetModules();\n});\n\ntest('moduleName 1', () => {\n  // The optional type argument provides typings for the module factory\n  jest.doMock<typeof import('../moduleName')>('../moduleName', () => {\n    return jest.fn(() => 1);\n  });\n  const moduleName = require('../moduleName');\n  expect(moduleName()).toBe(1);\n});\n\ntest('moduleName 2', () => {\n  jest.doMock<typeof import('../moduleName')>('../moduleName', () => {\n    return jest.fn(() => 2);\n  });\n  const moduleName = require('../moduleName');\n  expect(moduleName()).toBe(2);\n});\n"})})})]}),"\n",(0,t.jsxs)(s.p,{children:["L'utilisation de ",(0,t.jsx)(s.code,{children:"jest.doMock()"})," avec les importations ES6 n\xe9cessite des \xe9tapes suppl\xe9mentaires. Suivez-les si vous ne voulez pas utiliser ",(0,t.jsx)(s.code,{children:"require"})," dans vos tests\xa0:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Nous devons sp\xe9cifier la propri\xe9t\xe9 ",(0,t.jsx)(s.code,{children:"__esModule : true"})," (voir l'API de ",(0,t.jsx)(s.a,{href:"#jestmockmodulename-factory-options",children:(0,t.jsx)(s.code,{children:"jest.mock()"})})," pour plus d'informations)."]}),"\n",(0,t.jsxs)(s.li,{children:["Les importations de modules statiques ES6 sont hiss\xe9es en haut du fichier, donc \xe0 la place nous devons les importer dynamiquement en utilisant ",(0,t.jsx)(s.code,{children:"import()"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["Enfin, nous avons besoin d'un environnement qui soutienne l'importation dynamique. Veuillez consulter ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/getting-started#using-babel",children:"Utilisation de Babel"})," pour la configuration initiale. Ensuite, ajoutez le plugin ",(0,t.jsx)(s.a,{href:"https://www.npmjs.com/package/babel-plugin-dynamic-import-node",children:"babel-plugin-dynamic-import-node"}),", ou un \xe9quivalent, \xe0 votre configuration Babel pour activer l'importation dynamique dans Node."]}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"beforeEach(() => {\n  jest.resetModules();\n});\n\ntest('moduleName 1', () => {\n  jest.doMock('../moduleName', () => {\n    return {\n      __esModule: true,\n      default: 'default1',\n      foo: 'foo1',\n    };\n  });\n  return import('../moduleName').then(moduleName => {\n    expect(moduleName.default).toBe('default1');\n    expect(moduleName.foo).toBe('foo1');\n  });\n});\n\ntest('moduleName 2', () => {\n  jest.doMock('../moduleName', () => {\n    return {\n      __esModule: true,\n      default: 'default2',\n      foo: 'foo2',\n    };\n  });\n  return import('../moduleName').then(moduleName => {\n    expect(moduleName.default).toBe('default2');\n    expect(moduleName.foo).toBe('foo2');\n  });\n});\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Renvoie l'objet ",(0,t.jsx)(s.code,{children:"jest"})," pour le cha\xeenage."]}),"\n",(0,t.jsx)(s.h3,{id:"jestdontmockmodulename",children:(0,t.jsx)(s.code,{children:"jest.dontMock(moduleName)"})}),"\n",(0,t.jsxs)(s.p,{children:["Lorsque vous utilisez ",(0,t.jsx)(s.code,{children:"babel-jest"}),", les appels \xe0 ",(0,t.jsx)(s.code,{children:"unmock"})," seront automatiquement remont\xe9s en haut du bloc de code. Utilisez cette m\xe9thode si vous voulez \xe9viter explicitement ce comportement."]}),"\n",(0,t.jsxs)(s.p,{children:["Renvoie l'objet ",(0,t.jsx)(s.code,{children:"jest"})," pour le cha\xeenage."]}),"\n",(0,t.jsx)(s.h3,{id:"jestsetmockmodulename-moduleexports",children:(0,t.jsx)(s.code,{children:"jest.setMock(moduleName, moduleExports)"})}),"\n",(0,t.jsx)(s.p,{children:"Fournit explicitement l'objet simul\xe9 que le syst\xe8me de module doit retourner pour le module sp\xe9cifi\xe9."}),"\n",(0,t.jsxs)(s.p,{children:["Il arrive parfois que la simulation g\xe9n\xe9r\xe9e automatiquement par le syst\xe8me de modules ne soit pas suffisante pour vos besoins de test. Normalement, dans ces circonstances, vous devriez \xe9crire une ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/manual-mocks",children:"simulation manuelle"})," qui est plus ad\xe9quate pour le module en question. Cependant, en de tr\xe8s rares occasions, m\xeame une simulation manuelle n'est pas adapt\xe9e \xe0 vos besoins et vous devez construire la simulation vous-m\xeame dans votre test."]}),"\n",(0,t.jsx)(s.p,{children:"Dans ces rares cas, vous pouvez utiliser cette API pour remplir manuellement l'emplacement dans le registre des modules fictifs du syst\xe8me de modules."}),"\n",(0,t.jsxs)(s.p,{children:["Renvoie l'objet ",(0,t.jsx)(s.code,{children:"jest"})," pour le cha\xeenage."]}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsxs)(s.p,{children:["It is recommended to use ",(0,t.jsx)(s.a,{href:"#jestmockmodulename-factory-options",children:(0,t.jsx)(s.code,{children:"jest.mock()"})})," instead. Le deuxi\xe8me argument de l'API ",(0,t.jsx)(s.code,{children:"jest.mock"})," est une factory de module plut\xf4t que l'objet module export\xe9 attendu."]})}),"\n",(0,t.jsx)(s.h3,{id:"jestrequireactualmodulename",children:(0,t.jsx)(s.code,{children:"jest.requireActual(moduleName)"})}),"\n",(0,t.jsx)(s.p,{children:"Renvoie le module r\xe9el au lieu d'une simulation, en contournant toutes les v\xe9rifications pour savoir si le module doit recevoir une impl\xe9mentation simul\xe9e ou non."}),"\n",(0,t.jsxs)(i.Z,{groupId:"code-examples",children:[(0,t.jsx)(l.Z,{value:"js",label:"JavaScript",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:"tab",children:"jest.mock('../myModule', () => {\n  // N\xe9cessite que le module original ne soit pas simul\xe9...\n  const originalModule = jest.requireActual('../myModule');\n\n  return {\n    __esModule: true, // Use it when dealing with esModules\n    ...originalModule,\n    getRandom: jest.fn(() => 10),\n  };\n});\n\nconst getRandom = require('../myModule').getRandom;\n\ngetRandom(); // Always returns 10\n"})})}),(0,t.jsx)(l.Z,{value:"ts",label:"TypeScript",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",metastring:"tab",children:"jest.mock('../myModule', () => {\n  // N\xe9cessite que le module original ne soit pas simul\xe9...\n  const originalModule =\n    jest.requireActual<typeof import('../myModule')>('../myModule');\n\n  return {\n    __esModule: true, // Use it when dealing with esModules\n    ...originalModule,\n    getRandom: jest.fn(() => 10),\n  };\n});\n\nconst getRandom = require('../myModule').getRandom;\n\ngetRandom(); // Always returns 10\n"})})})]}),"\n",(0,t.jsx)(s.h3,{id:"jestrequiremockmodulename",children:(0,t.jsx)(s.code,{children:"jest.requireMock(moduleName)"})}),"\n",(0,t.jsx)(s.p,{children:"Renvoie un module simul\xe9 au lieu du module r\xe9el, en contournant toutes les v\xe9rifications pour savoir si le module doit \xeatre requis normalement ou non."}),"\n",(0,t.jsx)(s.h3,{id:"jestresetmodules",children:(0,t.jsx)(s.code,{children:"jest.resetModules()"})}),"\n",(0,t.jsx)(s.p,{children:"R\xe9initialise le registre des modules - le cache de tous les modules requis. Ceci est utile pour isoler les modules o\xf9 l'\xe9tat local peut entrer en conflit entre les tests."}),"\n",(0,t.jsx)(s.p,{children:"Exemple\xa0:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"const sum1 = require('../sum');\njest.resetModules();\nconst sum2 = require('../sum');\nsum1 === sum2;\n// > false (Les deux modules sum sont des \xab\xa0instances\xa0\xbb distinctes du module sum.)\n"})}),"\n",(0,t.jsx)(s.p,{children:"Exemple dans un test\xa0:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"beforeEach(() => {\n  jest.resetModules();\n});\n\ntest('fonctionne', () => {\n  const sum = require('../sum');\n});\n\ntest('fonctionne aussi', () => {\n  const sum = require('../sum');\n  // sum est une copie diff\xe9rente du module sum du test pr\xe9c\xe9dent.\n});\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Renvoie l'objet ",(0,t.jsx)(s.code,{children:"jest"})," pour le cha\xeenage."]}),"\n",(0,t.jsx)(s.h3,{id:"jestisolatemodulesfn",children:(0,t.jsx)(s.code,{children:"jest.isolateModules(fn)"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"jest.isolateModules(fn)"})," va un peu plus loin que ",(0,t.jsx)(s.code,{children:"jest.resetModules()"})," et cr\xe9e un registre de type bac \xe0 sable pour les modules qui sont charg\xe9s \xe0 l'int\xe9rieur de la fonction callback. Ceci est utile pour isoler les modules sp\xe9cifiques pour chaque test afin que l'\xe9tat du module local n'entre pas en conflit entre les tests."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"let myModule;\njest.isolateModules(() => {\n  myModule = require('myModule');\n});\n\nconst otherCopyOfMyModule = require('myModule');\n"})}),"\n",(0,t.jsx)(s.h3,{id:"jestisolatemodulesasyncfn",children:(0,t.jsx)(s.code,{children:"jest.isolateModulesAsync(fn)"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"jest.isolateModulesAsync()"})," is the equivalent of ",(0,t.jsx)(s.code,{children:"jest.isolateModules()"}),", but for async callbacks. The caller is expected to ",(0,t.jsx)(s.code,{children:"await"})," the completion of ",(0,t.jsx)(s.code,{children:"isolateModulesAsync"}),"."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"let myModule;\nawait jest.isolateModulesAsync(async () => {\n  myModule = await import('myModule');\n  // do async stuff here\n});\n\nconst otherCopyOfMyModule = await import('myModule');\n"})}),"\n",(0,t.jsx)(s.h2,{id:"fonctions-simul\xe9es",children:"Fonctions simul\xe9es"}),"\n",(0,t.jsx)(s.h3,{id:"jestfnimplementation",children:(0,t.jsx)(s.code,{children:"jest.fn(implementation?)"})}),"\n",(0,t.jsxs)(s.p,{children:["Retourne une nouvelle ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/mock-function-api",children:"fonction simul\xe9e"})," non utilis\xe9e. En option, prend une impl\xe9mentation simul\xe9e."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"const mockFn = jest.fn();\nmockFn();\nexpect(mockFn).toHaveBeenCalled();\n\n// Avec une impl\xe9mentation simul\xe9e\xa0:\nconst returnsTrue = jest.fn(() => true);\nconsole.log(returnsTrue()); // true;\n"})}),"\n",(0,t.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,t.jsxs)(s.p,{children:["See the ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/mock-function-api#jestfnimplementation",children:"Mock Functions"})," page for details on TypeScript usage."]})}),"\n",(0,t.jsx)(s.h3,{id:"jestismockfunctionfn",children:(0,t.jsx)(s.code,{children:"jest.isMockFunction(fn)"})}),"\n",(0,t.jsx)(s.p,{children:"D\xe9termine si la fonction donn\xe9e est une fonction simul\xe9e."}),"\n",(0,t.jsx)(s.h3,{id:"jestreplacepropertyobject-propertykey-value",children:(0,t.jsx)(s.code,{children:"jest.replaceProperty(object, propertyKey, value)"})}),"\n",(0,t.jsxs)(s.p,{children:["Replace ",(0,t.jsx)(s.code,{children:"object[propertyKey]"})," with a ",(0,t.jsx)(s.code,{children:"value"}),". The property must already exist on the object. The same property might be replaced multiple times. Returns a Jest ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/mock-function-api#replaced-properties",children:"replaced property"}),"."]}),"\n",(0,t.jsx)(s.admonition,{title:"remarque",type:"note",children:(0,t.jsxs)(s.p,{children:["To mock properties that are defined as getters or setters, use ",(0,t.jsx)(s.a,{href:"#jestspyonobject-methodname-accesstype",children:(0,t.jsx)(s.code,{children:"jest.spyOn(object, methodName, accessType)"})})," instead. To mock functions, use ",(0,t.jsx)(s.a,{href:"#jestspyonobject-methodname",children:(0,t.jsx)(s.code,{children:"jest.spyOn(object, methodName)"})})," instead."]})}),"\n",(0,t.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,t.jsxs)(s.p,{children:["All properties replaced with ",(0,t.jsx)(s.code,{children:"jest.replaceProperty"})," could be restored to the original value by calling ",(0,t.jsx)(s.a,{href:"#jestrestoreallmocks",children:"jest.restoreAllMocks"})," on ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/api#aftereachfn-timeout",children:"afterEach"})," method."]})}),"\n",(0,t.jsx)(s.p,{children:"Exemple\xa0:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"const utils = {\n  isLocalhost() {\n    return process.env.HOSTNAME === 'localhost';\n  },\n};\n\nmodule.exports = utils;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Exemple de test\xa0:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"const utils = require('./utils');\n\nafterEach(() => {\n  // restore replaced property\n  jest.restoreAllMocks();\n});\n\ntest('isLocalhost returns true when HOSTNAME is localhost', () => {\n  jest.replaceProperty(process, 'env', {HOSTNAME: 'localhost'});\n  expect(utils.isLocalhost()).toBe(true);\n});\n\ntest('isLocalhost returns false when HOSTNAME is not localhost', () => {\n  jest.replaceProperty(process, 'env', {HOSTNAME: 'not-localhost'});\n  expect(utils.isLocalhost()).toBe(false);\n});\n"})}),"\n",(0,t.jsx)(s.h3,{id:"jestspyonobject-methodname",children:(0,t.jsx)(s.code,{children:"jest.spyOn(object, methodName)"})}),"\n",(0,t.jsxs)(s.p,{children:["Cr\xe9e une fonction simul\xe9e similaire \xe0 ",(0,t.jsx)(s.code,{children:"jest.fn"})," mais qui surveille \xe9galement les appels \xe0 ",(0,t.jsx)(s.code,{children:"objet[methodName]"}),". Retourne une ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/mock-function-api",children:"fonction simul\xe9e"})," de Jest."]}),"\n",(0,t.jsx)(s.admonition,{title:"remarque",type:"note",children:(0,t.jsxs)(s.p,{children:["Par d\xe9faut, ",(0,t.jsx)(s.code,{children:"jest.spyOn"})," appelle \xe9galement la m\xe9thode ",(0,t.jsx)(s.strong,{children:"spied"}),". Ceci est un comportement diff\xe9rent de la plupart des autres biblioth\xe8ques de test. If you want to overwrite the original function, you can use ",(0,t.jsx)(s.code,{children:"jest.spyOn(object, methodName).mockImplementation(() => customImplementation)"})," or ",(0,t.jsx)(s.code,{children:"object[methodName] = jest.fn(() => customImplementation)"}),"."]})}),"\n",(0,t.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,t.jsxs)(s.p,{children:["Since ",(0,t.jsx)(s.code,{children:"jest.spyOn"})," is a mock, you could restore the initial state by calling ",(0,t.jsx)(s.a,{href:"#jestrestoreallmocks",children:(0,t.jsx)(s.code,{children:"jest.restoreAllMocks"})})," in the body of the callback passed to the ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/api#aftereachfn-timeout",children:"afterEach"})," hook."]})}),"\n",(0,t.jsx)(s.p,{children:"Exemple\xa0:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"const video = {\n  play() {\n    return true;\n  },\n};\n\nmodule.exports = video;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Exemple de test\xa0:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"const video = require('./video');\n\nafterEach(() => {\n  // restaure l'espion cr\xe9\xe9 avec spyOn\n  jest.restoreAllMocks();\n});\n\ntest('lit la vid\xe9o', () => {\n  const spy = jest.spyOn(video, 'play');\n  const isPlaying = video.play();\n\n  expect(spy).toHaveBeenCalled();\n  expect(isPlaying).toBe(true);\n});\n"})}),"\n",(0,t.jsx)(s.h3,{id:"jestspyonobject-methodname-accesstype",children:(0,t.jsx)(s.code,{children:"jest.spyOn(object, methodName, accessType?)"})}),"\n",(0,t.jsxs)(s.p,{children:["Depuis Jest 22.1.0+, la m\xe9thode ",(0,t.jsx)(s.code,{children:"jest.spyOn"})," prend un troisi\xe8me argument optionnel de type ",(0,t.jsx)(s.code,{children:"accessType"})," qui peut \xeatre soit ",(0,t.jsx)(s.code,{children:"'get'"})," ou ",(0,t.jsx)(s.code,{children:"'set'"}),", qui s'av\xe8re utile lorsque vous voulez espionner respectivement un getter ou un setter."]}),"\n",(0,t.jsx)(s.p,{children:"Exemple\xa0:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"const video = {\n  // c'est un getter\xa0!\n  get play() {\n    return true;\n  },\n};\n\nmodule.exports = video;\n\nconst audio = {\n  _volume: false,\n  // c'est un setter\xa0!\n  set volume(value) {\n    this._volume = value;\n  },\n  get volume() {\n    return this._volume;\n  },\n};\n\nmodule.exports = audio;\n"})}),"\n",(0,t.jsx)(s.p,{children:"Exemple de test\xa0:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"const audio = require('./audio');\nconst video = require('./video');\n\nafterEach(() => {\n  // restore the spy created with spyOn\n  jest.restoreAllMocks();\n});\n\ntest('plays video', () => {\n  const spy = jest.spyOn(video, 'play', 'get'); // we pass 'get'\n  const isPlaying = video.play();\n\n  expect(spy).toHaveBeenCalled();\n  expect(isPlaying).toBe(true);\n});\n\ntest('plays audio', () => {\n  const spy = jest.spyOn(audio, 'volume', 'set'); // we pass 'set'\n  audio.volume = 100;\n\n  expect(spy).toHaveBeenCalled();\n  expect(audio.volume).toBe(100);\n});\n"})}),"\n",(0,t.jsx)(s.h3,{id:"jestreplacedsource",children:(0,t.jsx)(s.code,{children:"jest.Replaced<Source>"})}),"\n",(0,t.jsxs)(s.p,{children:["See ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/mock-function-api#replacedpropertyreplacevaluevalue",children:"TypeScript Usage"})," chapter of Mock Functions page for documentation."]}),"\n",(0,t.jsx)(s.h3,{id:"jestspiedsource",children:(0,t.jsx)(s.code,{children:"jest.Spied<Source>"})}),"\n",(0,t.jsxs)(s.p,{children:["See ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/mock-function-api#jestspiedsource",children:"TypeScript Usage"})," chapter of Mock Functions page for documentation."]}),"\n",(0,t.jsx)(s.h3,{id:"jestclearallmocks",children:(0,t.jsx)(s.code,{children:"jest.clearAllMocks()"})}),"\n",(0,t.jsxs)(s.p,{children:["Efface les propri\xe9t\xe9s ",(0,t.jsx)(s.code,{children:"mock.calls"}),", ",(0,t.jsx)(s.code,{children:"mock.instances"}),", ",(0,t.jsx)(s.code,{children:"mock.contexts"})," et ",(0,t.jsx)(s.code,{children:"mock.results"})," de toutes les simulations. Equivalent aux appels de ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/mock-function-api#mockfnmockclear",children:(0,t.jsx)(s.code,{children:".mockClear()"})})," sur chaque fonction simul\xe9e."]}),"\n",(0,t.jsxs)(s.p,{children:["Renvoie l'objet ",(0,t.jsx)(s.code,{children:"jest"})," pour le cha\xeenage."]}),"\n",(0,t.jsx)(s.h3,{id:"jestresetallmocks",children:(0,t.jsx)(s.code,{children:"jest.resetAllMocks()"})}),"\n",(0,t.jsxs)(s.p,{children:["R\xe9initialise l'\xe9tat de toutes les simulations. Equivalent aux appels de ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/mock-function-api#mockfnmockreset",children:(0,t.jsx)(s.code,{children:".mockReset()"})})," sur chaque fonction simul\xe9e."]}),"\n",(0,t.jsxs)(s.p,{children:["Renvoie l'objet ",(0,t.jsx)(s.code,{children:"jest"})," pour le cha\xeenage."]}),"\n",(0,t.jsx)(s.h3,{id:"jestrestoreallmocks",children:(0,t.jsx)(s.code,{children:"jest.restoreAllMocks()"})}),"\n",(0,t.jsxs)(s.p,{children:["Restores all mocks and replaced properties back to their original value. Equivalent to calling ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/mock-function-api#mockfnmockrestore",children:(0,t.jsx)(s.code,{children:".mockRestore()"})})," on every mocked function and ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/mock-function-api#replacedpropertyrestore",children:(0,t.jsx)(s.code,{children:".restore()"})})," on every replaced property. Beware that ",(0,t.jsx)(s.code,{children:"jest.restoreAllMocks()"})," only works for mocks created with ",(0,t.jsx)(s.a,{href:"#jestspyonobject-methodname",children:(0,t.jsx)(s.code,{children:"jest.spyOn()"})})," and properties replaced with ",(0,t.jsx)(s.a,{href:"#jestreplacepropertyobject-propertykey-value",children:(0,t.jsx)(s.code,{children:"jest.replaceProperty()"})}),"; other mocks will require you to manually restore them."]}),"\n",(0,t.jsx)(s.h2,{id:"faux-temporisateurs",children:"Faux temporisateurs"}),"\n",(0,t.jsx)(s.h3,{id:"jestusefaketimersfaketimersconfig",children:(0,t.jsx)(s.code,{children:"jest.useFakeTimers(fakeTimersConfig?)"})}),"\n",(0,t.jsxs)(s.p,{children:["Indique \xe0 Jest d'utiliser des versions fictives des API globales de date, de performance, de temps et de temporisation. L'impl\xe9mentation des faux temporisateurs est garantie par ",(0,t.jsx)(s.a,{href:"https://github.com/sinonjs/fake-timers",children:(0,t.jsx)(s.code,{children:"@sinonjs/fake-timers"})}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["Les faux temporisateurs vont remplacer ",(0,t.jsx)(s.code,{children:"Date"}),", ",(0,t.jsx)(s.code,{children:"performance.now()"}),", ",(0,t.jsx)(s.code,{children:"queueMicrotask()"}),", ",(0,t.jsx)(s.code,{children:"setImmediate()"}),", ",(0,t.jsx)(s.code,{children:"clearImmediate()"}),", ",(0,t.jsx)(s.code,{children:"setInterval()"}),", ",(0,t.jsx)(s.code,{children:"clearInterval()"}),", ",(0,t.jsx)(s.code,{children:"setTimeout()"}),", ",(0,t.jsx)(s.code,{children:"clearTimeout()"})," avec une impl\xe9mentation qui obtient son heure \xe0 partir d'une horloge factice."]}),"\n",(0,t.jsxs)(s.p,{children:["Dans l'environnement Node ",(0,t.jsx)(s.code,{children:"process.hrtime"}),", ",(0,t.jsx)(s.code,{children:"process.nextTick()"})," et dans l'environnement JSDOM ",(0,t.jsx)(s.code,{children:"requestAnimationFrame()"}),", ",(0,t.jsx)(s.code,{children:"cancelAnimationFrame()"}),", ",(0,t.jsx)(s.code,{children:"requestIdleCallback()"}),", ",(0,t.jsx)(s.code,{children:"cancelIdleCallback()"})," seront \xe9galement remplac\xe9s."]}),"\n",(0,t.jsx)(s.p,{children:"Options de configuration\xa0:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"type FakeableAPI =\n  | 'Date'\n  | 'hrtime'\n  | 'nextTick'\n  | 'performance'\n  | 'queueMicrotask'\n  | 'requestAnimationFrame'\n  | 'cancelAnimationFrame'\n  | 'requestIdleCallback'\n  | 'cancelIdleCallback'\n  | 'setImmediate'\n  | 'clearImmediate'\n  | 'setInterval'\n  | 'clearInterval'\n  | 'setTimeout'\n  | 'clearTimeout';\n\ntype FakeTimersConfig = {\n  /**\n   * Si d\xe9fini \xe0 `true` tous les temporisateurs seront automatiquement avanc\xe9s de 20 millisecondes\n   * toutes les 20 millisecondes. Un delta de temps personnalis\xe9 peut \xeatre fourni en passant un nombre.\n   * La valeur par d\xe9faut est `false`.\n   */\n  advanceTimers?: boolean | number;\n  /**\n   * Liste des noms des APIs qui ne doivent pas \xeatre falsifi\xe9s. La valeur par d\xe9faut est `[]`, ce qui signifie que\n   * toutes les APIs sont falsifi\xe9es.\n   */\n  doNotFake?: Array<FakeableAPI>;\n  /**\n   * Utilise l'ancienne impl\xe9mentation des faux temporisateurs au lieu de celle support\xe9e par `@sinonjs/fake-timers`.\n   * La valeur par d\xe9faut est `false`.\n   */\n  legacyFakeTimers?: boolean;\n  /** D\xe9finit l'heure actuelle du syst\xe8me \xe0 utiliser par de faux temporisateurs. La valeur par d\xe9faut est `Date.now()`. */\n  now?: number | Date;\n  /**\n   * Le nombre maximum de temporisateurs r\xe9cursifs qui seront ex\xe9cut\xe9s lors de l'appel de `jest.runAllTimers()`.\n   * La valeur par d\xe9faut est `100_000` temporisateurs.\n   */\n  timerLimit?: number;\n};\n"})}),"\n",(0,t.jsxs)(s.p,{children:["L'appel de ",(0,t.jsx)(s.code,{children:"jest.useFakeTimers()"})," utilisera des faux temporisateurs pour tous les tests du fichier, jusqu'\xe0 ce que les temporisateurs originaux soient restaur\xe9s avec ",(0,t.jsx)(s.code,{children:"jest.useRealTimers()"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:["Vous pouvez appeler ",(0,t.jsx)(s.code,{children:"jest.useFakeTimers()"})," ou ",(0,t.jsx)(s.code,{children:"jest.useRealTimers()"})," de n'importe o\xf9\xa0: niveau sup\xe9rieur, \xe0 l'int\xe9rieur d'un bloc ",(0,t.jsx)(s.code,{children:"test"}),", etc. Gardez \xe0 l'esprit qu'il s'agit d'une ",(0,t.jsx)(s.strong,{children:"op\xe9ration globale"})," et affectera les autres tests dans le m\xeame fichier. L'appel de ",(0,t.jsx)(s.code,{children:"jest.useFakeTimers()"})," une fois de plus dans le m\xeame fichier de test r\xe9initialiserait l'\xe9tat interne (par exemple le nombre de temporisateurs) et r\xe9installerait les faux temporisateurs en utilisant les options fournies\xa0:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"test('avance les minuteurs automatiquement', () => {\n  jest.useFakeTimers({advanceTimers: true});\n  // ...\n});\n\ntest('n\\'avance pas les temporisateurs et ne fausse pas `performance`', () => {\n  jest.useFakeTimers({doNotFake: ['performance']});\n  // ...\n});\n\ntest('d\xe9sinstalle les faux temporisateurs pour le reste des tests dans le fichier', () => {\n  jest.useRealTimers();\n  // ...\n});\n"})}),"\n",(0,t.jsxs)(s.admonition,{title:"Les anciens faux temporisateurs",type:"info",children:[(0,t.jsx)(s.p,{children:"Pour certaines raisons, il se peut que vous deviez utiliser une ancienne impl\xe9mentation de faux temporisateurs. Elle peut \xeatre activ\xe9e comme ceci (les options suppl\xe9mentaires ne sont pas support\xe9es)\xa0:"}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"jest.useFakeTimers({\n  legacyFakeTimers: true,\n});\n"})}),(0,t.jsxs)(s.p,{children:["Les anciens faux temporisateurs vont remplacer ",(0,t.jsx)(s.code,{children:"setImmediate()"}),", ",(0,t.jsx)(s.code,{children:"clearImmediate()"}),", ",(0,t.jsx)(s.code,{children:"setInterval()"}),", ",(0,t.jsx)(s.code,{children:"clearInterval()"}),", ",(0,t.jsx)(s.code,{children:"setTimeout()"}),", ",(0,t.jsx)(s.code,{children:"clearTimeout()"})," avec les ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/mock-function-api",children:"fonctions simul\xe9es"})," de Jest. Dans l'environnement Node ",(0,t.jsx)(s.code,{children:"process.nextTick()"})," et dans l'environnement JSDOM ",(0,t.jsx)(s.code,{children:"requestAnimationFrame()"}),", ",(0,t.jsx)(s.code,{children:"cancelAnimationFrame()"})," seront \xe9galement remplac\xe9s."]})]}),"\n",(0,t.jsxs)(s.p,{children:["Renvoie l'objet ",(0,t.jsx)(s.code,{children:"jest"})," pour le cha\xeenage."]}),"\n",(0,t.jsx)(s.h3,{id:"jestuserealtimers",children:(0,t.jsx)(s.code,{children:"jest.useRealTimers()"})}),"\n",(0,t.jsxs)(s.p,{children:["Indique \xe0 Jest de restaurer les impl\xe9mentations originales de la date globale, de la performance, de l'heure et des API de temporisation. Par exemple, vous pouvez appeler ",(0,t.jsx)(s.code,{children:"jest.useRealTimers()"})," \xe0 l'int\xe9rieur du hook ",(0,t.jsx)(s.code,{children:"afterEach"})," pour restaurer les temporisateurs apr\xe8s chaque test\xa0:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"afterEach(() => {\n  jest.useRealTimers();\n});\n\ntest('faire quelque chose avec de faux temporisateurs', () => {\n  jest.useFakeTimers();\n  // ...\n});\n\ntest('faire quelque chose avec des temporisateurs r\xe9els', () => {\n  // ...\n});\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Renvoie l'objet ",(0,t.jsx)(s.code,{children:"jest"})," pour le cha\xeenage."]}),"\n",(0,t.jsx)(s.h3,{id:"jestrunallticks",children:(0,t.jsx)(s.code,{children:"jest.runAllTicks()"})}),"\n",(0,t.jsxs)(s.p,{children:["Lib\xe8re la file d'attente des ",(0,t.jsx)(s.strong,{children:"micro"}),"-t\xe2ches (g\xe9n\xe9ralement interfac\xe9e dans node via ",(0,t.jsx)(s.code,{children:"process.nextTick"}),")."]}),"\n",(0,t.jsxs)(s.p,{children:["Lorsque cette API est appel\xe9e, toutes les micro-t\xe2ches en attente qui ont \xe9t\xe9 mises en file d'attente via ",(0,t.jsx)(s.code,{children:"process.nextTick"})," seront ex\xe9cut\xe9es. En outre, si ces micro-t\xe2ches elles-m\xeames planifient de nouvelles micro-t\xe2ches, elles seront continuellement lib\xe9r\xe9es jusqu'\xe0 ce qu'il n'y ait plus de micro-t\xe2ches dans la file d'attente."]}),"\n",(0,t.jsx)(s.h3,{id:"jestrunalltimers",children:(0,t.jsx)(s.code,{children:"jest.runAllTimers()"})}),"\n",(0,t.jsxs)(s.p,{children:["Lib\xe8re la file d'attente ",(0,t.jsx)(s.strong,{children:"macro"}),"-t\xe2che (par exemple toutes les t\xe2ches mises en file d'attente par ",(0,t.jsx)(s.code,{children:"setTimeout()"}),", ",(0,t.jsx)(s.code,{children:"setInterval()"})," et ",(0,t.jsx)(s.code,{children:"setImmediate()"}),") et la file d'attente ",(0,t.jsx)(s.strong,{children:"micro"}),"-t\xe2che (g\xe9n\xe9ralement interfac\xe9e dans node via le processus ",(0,t.jsx)(s.code,{children:"process.nextTick"}),")."]}),"\n",(0,t.jsx)(s.p,{children:"Lorsque cette API est appel\xe9e, toutes les macro-t\xe2ches et les micro-t\xe2ches en attente seront ex\xe9cut\xe9es. Si ces t\xe2ches elles-m\xeames planifient de nouvelles t\xe2ches, elles seront continuellement lib\xe9r\xe9es jusqu'\xe0 ce qu'il n'y ait plus de t\xe2ches dans la file d'attente."}),"\n",(0,t.jsxs)(s.p,{children:["Ceci est souvent utile pour ex\xe9cuter les setTimeout de fa\xe7on synchrone pendant un test afin d'affirmer de fa\xe7on synchrone un comportement qui ne se produirait qu'apr\xe8s que les callbacks ",(0,t.jsx)(s.code,{children:"setTimeout()"})," ou ",(0,t.jsx)(s.code,{children:"setInterval()"})," soient ex\xe9cut\xe9es. Consultez la doc des ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/timer-mocks",children:"simulateurs de temporisation"})," pour plus d'informations."]}),"\n",(0,t.jsx)(s.h3,{id:"jestrunalltimersasync",children:(0,t.jsx)(s.code,{children:"jest.runAllTimersAsync()"})}),"\n",(0,t.jsxs)(s.p,{children:["Asynchronous equivalent of ",(0,t.jsx)(s.code,{children:"jest.runAllTimers()"}),". It allows any scheduled promise callbacks to execute ",(0,t.jsx)(s.em,{children:"before"})," running the timers."]}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsx)(s.p,{children:"Cette fonction n'est pas disponible lors de l'utilisation de l'ancienne impl\xe9mentation des faux temporisateurs."})}),"\n",(0,t.jsx)(s.h3,{id:"jestrunallimmediates",children:(0,t.jsx)(s.code,{children:"jest.runAllImmediates()"})}),"\n",(0,t.jsxs)(s.p,{children:["Lib\xe8re toutes les t\xe2ches mises en file d'attente par ",(0,t.jsx)(s.code,{children:"setImmediate()"}),"."]}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsx)(s.p,{children:"Cette fonction est disponible uniquement lors de l'utilisation de l'ancienne impl\xe9mentation des faux temporisateurs."})}),"\n",(0,t.jsx)(s.h3,{id:"jestadvancetimersbytimemstorun",children:(0,t.jsx)(s.code,{children:"jest.advanceTimersByTime(msToRun)"})}),"\n",(0,t.jsxs)(s.p,{children:["Ex\xe9cute uniquement la file d'attente macro (c'est-\xe0-dire toutes les t\xe2ches mises en file d'attente par ",(0,t.jsx)(s.code,{children:"setTimeout()"})," ou ",(0,t.jsx)(s.code,{children:"setInterval()"})," et ",(0,t.jsx)(s.code,{children:"setImmediate()"}),")."]}),"\n",(0,t.jsxs)(s.p,{children:["Lorsque cette API est appel\xe9e, tous les temporisateurs sont avanc\xe9s de ",(0,t.jsx)(s.code,{children:"msToRun"})," millisecondes. Toutes les \xab\xa0macro-t\xe2ches\xa0\xbb en attente qui ont \xe9t\xe9 mises en file d'attente via ",(0,t.jsx)(s.code,{children:"setTimeout()"})," ou ",(0,t.jsx)(s.code,{children:"setInterval()"}),", et qui devraient \xeatre ex\xe9cut\xe9es pendant ce laps de temps, seront ex\xe9cut\xe9es. En plus, si ces macro-t\xe2ches planifient de nouvelles macro-t\xe2ches qui devraient \xeatre ex\xe9cut\xe9es dans le m\xeame laps de temps, celles-ci seront ex\xe9cut\xe9es jusqu'\xe0 ce qu'il ne reste plus de macro-t\xe2ches dans la file d'attente qui doivent \xeatre ex\xe9cut\xe9es dans les ",(0,t.jsx)(s.code,{children:"msToRun"})," millisecondes."]}),"\n",(0,t.jsx)(s.h3,{id:"jestadvancetimersbytimeasyncmstorun",children:(0,t.jsx)(s.code,{children:"jest.advanceTimersByTimeAsync(msToRun)"})}),"\n",(0,t.jsxs)(s.p,{children:["Asynchronous equivalent of ",(0,t.jsx)(s.code,{children:"jest.advanceTimersByTime(msToRun)"}),". It allows any scheduled promise callbacks to execute ",(0,t.jsx)(s.em,{children:"before"})," running the timers."]}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsx)(s.p,{children:"Cette fonction n'est pas disponible lors de l'utilisation de l'ancienne impl\xe9mentation des faux temporisateurs."})}),"\n",(0,t.jsx)(s.h3,{id:"jestrunonlypendingtimers",children:(0,t.jsx)(s.code,{children:"jest.runOnlyPendingTimers()"})}),"\n",(0,t.jsxs)(s.p,{children:["Ex\xe9cute uniquement les macro-t\xe2ches qui sont actuellement en attente (par exemple seules les t\xe2ches qui ont \xe9t\xe9 mises en file d'attente par ",(0,t.jsx)(s.code,{children:"setTimeout()"})," ou ",(0,t.jsx)(s.code,{children:"setInterval()"})," jusqu'\xe0 ce point). Si l'une des macro-t\xe2ches en cours planifie de nouvelles macro-t\xe2ches, ces nouvelles t\xe2ches ne seront pas ex\xe9cut\xe9es par cet appel."]}),"\n",(0,t.jsxs)(s.p,{children:["Ceci est utile pour des sc\xe9narios tels que celui o\xf9 le module test\xe9 planifie un ",(0,t.jsx)(s.code,{children:"setTimeout()"})," dont le callback planifie un autre ",(0,t.jsx)(s.code,{children:"setTimeout()"})," r\xe9cursivement (ce qui signifie que la planification ne s'arr\xeate jamais). Dans ces sc\xe9narios, il est utile de pouvoir avancer dans le temps d'une seule \xe9tape \xe0 la fois."]}),"\n",(0,t.jsx)(s.h3,{id:"jestrunonlypendingtimersasync",children:(0,t.jsx)(s.code,{children:"jest.runOnlyPendingTimersAsync()"})}),"\n",(0,t.jsxs)(s.p,{children:["Asynchronous equivalent of ",(0,t.jsx)(s.code,{children:"jest.runOnlyPendingTimers()"}),". It allows any scheduled promise callbacks to execute ",(0,t.jsx)(s.em,{children:"before"})," running the timers."]}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsx)(s.p,{children:"Cette fonction n'est pas disponible lors de l'utilisation de l'ancienne impl\xe9mentation des faux temporisateurs."})}),"\n",(0,t.jsx)(s.h3,{id:"jestadvancetimerstonexttimersteps",children:(0,t.jsx)(s.code,{children:"jest.advanceTimersToNextTimer(steps)"})}),"\n",(0,t.jsx)(s.p,{children:"Avance tous les temporisateurs en millisecondes n\xe9cessaires pour que seuls les prochains timeouts/intervals s'ex\xe9cutent."}),"\n",(0,t.jsxs)(s.p,{children:["En option, vous pouvez fournir ",(0,t.jsx)(s.code,{children:"steps"}),", afin qu'il ex\xe9cute le nombre de ",(0,t.jsx)(s.code,{children:"steps"})," des prochains timeouts/intervals."]}),"\n",(0,t.jsx)(s.h3,{id:"jestadvancetimerstonexttimerasyncsteps",children:(0,t.jsx)(s.code,{children:"jest.advanceTimersToNextTimerAsync(steps)"})}),"\n",(0,t.jsxs)(s.p,{children:["Asynchronous equivalent of ",(0,t.jsx)(s.code,{children:"jest.advanceTimersToNextTimer(steps)"}),". It allows any scheduled promise callbacks to execute ",(0,t.jsx)(s.em,{children:"before"})," running the timers."]}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsx)(s.p,{children:"Cette fonction n'est pas disponible lors de l'utilisation de l'ancienne impl\xe9mentation des faux temporisateurs."})}),"\n",(0,t.jsx)(s.h3,{id:"jestclearalltimers",children:(0,t.jsx)(s.code,{children:"jest.clearAllTimers()"})}),"\n",(0,t.jsx)(s.p,{children:"Supprime tous les temporisateurs en attente du syst\xe8me de temporisation."}),"\n",(0,t.jsx)(s.p,{children:"Cela signifie que si des temporisateurs ont \xe9t\xe9 programm\xe9s (mais n'ont pas encore \xe9t\xe9 ex\xe9cut\xe9s), ils seront effac\xe9s et n'auront jamais la possibilit\xe9 de s'ex\xe9cuter \xe0 l'avenir."}),"\n",(0,t.jsx)(s.h3,{id:"jestgettimercount",children:(0,t.jsx)(s.code,{children:"jest.getTimerCount()"})}),"\n",(0,t.jsx)(s.p,{children:"Retourne le nombre de temporisateurs fictifs qui restent \xe0 ex\xe9cuter."}),"\n",(0,t.jsx)(s.h3,{id:"jestnow",children:(0,t.jsx)(s.code,{children:"jest.now()"})}),"\n",(0,t.jsxs)(s.p,{children:["Returns the time in ms of the current clock. This is equivalent to ",(0,t.jsx)(s.code,{children:"Date.now()"})," if real timers are in use, or if ",(0,t.jsx)(s.code,{children:"Date"})," is mocked. In other cases (such as legacy timers) it may be useful for implementing custom mocks of ",(0,t.jsx)(s.code,{children:"Date.now()"}),", ",(0,t.jsx)(s.code,{children:"performance.now()"}),", etc."]}),"\n",(0,t.jsx)(s.h3,{id:"jestsetsystemtimenow-number--date",children:(0,t.jsx)(s.code,{children:"jest.setSystemTime(now?: number | Date)"})}),"\n",(0,t.jsxs)(s.p,{children:["D\xe9finit l'heure actuelle du syst\xe8me utilis\xe9e par les temporisateurs fictifs. Simule un utilisateur qui change l'horloge du syst\xe8me pendant que votre programme fonctionne. Cela affecte l'heure actuelle mais ne provoque pas en soi par exemple le d\xe9clenchement de temporisateurs; ils se d\xe9clencheront exactement comme ils l'auraient fait sans l'appel \xe0 ",(0,t.jsx)(s.code,{children:"jest.setSystemTime()"}),"."]}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsx)(s.p,{children:"Cette fonction n'est pas disponible lors de l'utilisation de l'ancienne impl\xe9mentation des faux temporisateurs."})}),"\n",(0,t.jsx)(s.h3,{id:"jestgetrealsystemtime",children:(0,t.jsx)(s.code,{children:"jest.getRealSystemTime()"})}),"\n",(0,t.jsxs)(s.p,{children:["Lors de simulation de temps, ",(0,t.jsx)(s.code,{children:"Date.now()"})," sera \xe9galement simul\xe9e. Si vous avez besoin pour une raison quelconque d'avoir acc\xe8s \xe0 l'heure r\xe9elle, vous pouvez appeler cette fonction."]}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsx)(s.p,{children:"Cette fonction n'est pas disponible lors de l'utilisation de l'ancienne impl\xe9mentation des faux temporisateurs."})}),"\n",(0,t.jsx)(s.h2,{id:"divers",children:"Divers"}),"\n",(0,t.jsx)(s.h3,{id:"jestgetseed",children:(0,t.jsx)(s.code,{children:"jest.getSeed()"})}),"\n",(0,t.jsx)(s.p,{children:"Every time Jest runs a seed value is randomly generated which you could use in a pseudorandom number generator or anywhere else."}),"\n",(0,t.jsx)(s.admonition,{title:"astuce",type:"tip",children:(0,t.jsxs)(s.p,{children:["Use the ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/cli#--showseed",children:(0,t.jsx)(s.code,{children:"--showSeed"})})," flag to print the seed in the test report summary. To manually set the value of the seed use ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/cli#--seednum",children:(0,t.jsx)(s.code,{children:"--seed=<num>"})})," CLI argument."]})}),"\n",(0,t.jsx)(s.h3,{id:"jestisenvironmenttorndown",children:(0,t.jsx)(s.code,{children:"jest.isEnvironmentTornDown()"})}),"\n",(0,t.jsxs)(s.p,{children:["Returns ",(0,t.jsx)(s.code,{children:"true"})," if test environment has been torn down."]}),"\n",(0,t.jsx)(s.h3,{id:"jestretrytimesnumretries-options",children:(0,t.jsx)(s.code,{children:"jest.retryTimes(numRetries, options?)"})}),"\n",(0,t.jsx)(s.p,{children:"Ex\xe9cute les tests \xe9chou\xe9s n-fois jusqu'\xe0 ce qu'ils passent ou jusqu'\xe0 ce que le nombre maximum de tentatives soit \xe9puis\xe9."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"jest.retryTimes(3);\n\ntest('will fail', () => {\n  expect(true).toBe(false);\n});\n"})}),"\n",(0,t.jsxs)(s.p,{children:["If ",(0,t.jsx)(s.code,{children:"logErrorsBeforeRetry"})," option is enabled, error(s) that caused the test to fail will be logged to the console."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"jest.retryTimes(3, {logErrorsBeforeRetry: true});\n\ntest('will fail', () => {\n  expect(true).toBe(false);\n});\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Renvoie l'objet ",(0,t.jsx)(s.code,{children:"jest"})," pour le cha\xeenage."]}),"\n",(0,t.jsx)(s.admonition,{title:"attention",type:"caution",children:(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"jest.retryTimes()"})," must be declared at the top level of a test file or in a ",(0,t.jsx)(s.code,{children:"describe"})," block."]})}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsxs)(s.p,{children:["This function is only available with the default ",(0,t.jsx)(s.a,{href:"https://github.com/jestjs/jest/tree/main/packages/jest-circus",children:"jest-circus"})," runner."]})}),"\n",(0,t.jsx)(s.h3,{id:"jestsettimeouttimeout",children:(0,t.jsx)(s.code,{children:"jest.setTimeout(timeout)"})}),"\n",(0,t.jsx)(s.p,{children:"D\xe9finit l'intervalle de temps par d\xe9faut (en millisecondes) pour tous les tests et avant/apr\xe8s les hooks dans le fichier de test. Cela n'affecte que le fichier de test \xe0 partir duquel cette fonction est appel\xe9e. The default timeout interval is 5 seconds if this method is not called."}),"\n",(0,t.jsx)(s.p,{children:"Exemple\xa0:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"jest.setTimeout(1000); // 1 seconde\n"})}),"\n",(0,t.jsxs)(s.admonition,{title:"astuce",type:"tip",children:[(0,t.jsxs)(s.p,{children:["Pour d\xe9finir des intervalles de temps sur des tests diff\xe9rents dans le m\xeame fichier, utilisez l'option ",(0,t.jsxs)(s.a,{href:"/fr/docs/29.5/api#testname-fn-timeout",children:[(0,t.jsx)(s.code,{children:"timeout"})," sur chaque test individuel"]}),"."]}),(0,t.jsxs)(s.p,{children:["If you want to set the timeout for all test files, use ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/configuration#testtimeout-number",children:(0,t.jsx)(s.code,{children:"testTimeout"})})," configuration option."]})]})]})}const h=function(e={}){const{wrapper:s}=Object.assign({},(0,o.ah)(),e.components);return s?(0,t.jsx)(s,Object.assign({},e,{children:(0,t.jsx)(j,e)})):j(e)}},7860:(e,s,n)=>{n.d(s,{ZP:()=>l});var t=n(4246),o=n(1670);function i(e){const s=Object.assign({admonition:"admonition",p:"p",pre:"pre",code:"code",a:"a"},(0,o.ah)(),e.components);return(0,t.jsxs)(s.admonition,{type:"info",children:[(0,t.jsx)(s.p,{children:"Les exemples TypeScript de cette page ne fonctionneront comme document\xe9 que si vous importez explicitement les API Jest\xa0:"}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"import {expect, jest, test} from '@jest/globals';\n"})}),(0,t.jsxs)(s.p,{children:["Veuillez consulter le guide ",(0,t.jsx)(s.a,{href:"/fr/docs/29.5/getting-started#using-typescript",children:"Premiers pas"})," pour plus de d\xe9tails sur la fa\xe7on de configurer Jest avec TypeScript."]})]})}const l=function(e={}){const{wrapper:s}=Object.assign({},(0,o.ah)(),e.components);return s?(0,t.jsx)(s,Object.assign({},e,{children:(0,t.jsx)(i,e)})):i(e)}}}]);