<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Jest Blog</title>
        <link>https://jestjs.io/fr/blog</link>
        <description>Jest Blog</description>
        <lastBuildDate>Thu, 25 Aug 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>fr</language>
        <item>
            <title><![CDATA[Jest 29¬†: Changements de format de snapshot]]></title>
            <link>https://jestjs.io/fr/blog/2022/08/25/jest-29</link>
            <guid>https://jestjs.io/fr/blog/2022/08/25/jest-29</guid>
            <pubDate>Thu, 25 Aug 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Jest 29 est l√†, juste quelques mois apr√®s Jest 28. Comme mentionn√© dans l'article du blog Jest 28, cette version contient juste quelques changements de rupture, afin de rendre la mise √† jour aussi douce que possible.]]></description>
            <content:encoded><![CDATA[<p>Jest 29 est l√†, juste quelques mois apr√®s Jest 28. Comme mentionn√© dans l'<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#future">article du blog Jest 28</a>, cette version contient juste quelques changements de rupture, afin de rendre la mise √† jour aussi douce que possible.</p>
<p>The only breaking changes that should be noticeable are:</p>
<ul>
<li>
<p>Les versions 12 et 17 de node sont supprim√©s, tous deux √©tant en fin de vie</p>
</li>
<li>
<p>La propri√©t√© <code>snapshotFormat</code> est chang√©e en&nbsp;:</p>
<div class="language-diff codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-diff codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted prefix inserted" style="color:#397300;background:#baeeba">+</span><span class="token inserted-sign inserted line" style="color:#397300;background:#baeeba"> snapshotFormat: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#397300;background:#baeeba"></span><span class="token inserted-sign inserted prefix inserted" style="color:#397300;background:#baeeba">+</span><span class="token inserted-sign inserted line" style="color:#397300;background:#baeeba">   escapeString: false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#397300;background:#baeeba"></span><span class="token inserted-sign inserted prefix inserted" style="color:#397300;background:#baeeba">+</span><span class="token inserted-sign inserted line" style="color:#397300;background:#baeeba">   printBasicPrototype: false</span><br></span><span class="token-line" style="color:#393A34"><span class="token inserted-sign inserted line" style="color:#397300;background:#baeeba"></span><span class="token inserted-sign inserted prefix inserted" style="color:#397300;background:#baeeba">+</span><span class="token inserted-sign inserted line" style="color:#397300;background:#baeeba"> }</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p><code>jest-environment-jsdom</code> a mis √† jour <code>jsdom</code> de la v19 √† la v20</p>
</li>
</ul>
<p>Il y a certaines modifications de types expos√©s par Jest, mais probablement (esp√©rons-le&nbsp;!) rien qui devrait emp√™cher la mise √† niveau. Veuillez consulter le <a href="https://jestjs.io/fr/docs/upgrading-to-jest29">guide de mise √† jour</a> pour plus de d√©tails.</p>
<p>C'est tout pour les changements de rupture&nbsp;! Esp√©rons que la mise √† jour de Jest 28 se fera en douceur. Please see the <a href="https://github.com/jestjs/jest/blob/main/CHANGELOG.md#2900" target="_blank" rel="noopener noreferrer">changelog</a> for other changes.</p>
<p>Merci d'avoir lu, et heureux Jesting! üÉè</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest rejoint la fondation OpenJS]]></title>
            <link>https://jestjs.io/fr/blog/2022/05/11/jest-joins-openjs</link>
            <guid>https://jestjs.io/fr/blog/2022/05/11/jest-joins-openjs</guid>
            <pubDate>Wed, 11 May 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Image de banni√®re pour Meta Open Source et OpenJS Foundation]]></description>
            <content:encoded><![CDATA[<p><img loading="lazy" alt="Image de banni√®re pour Meta Open Source et OpenJS Foundation" src="https://jestjs.io/fr/assets/images/openjs-ba98de96267fe09d68d434f11271825b.png" width="8002" height="1278" class="img_SS3x"></p>
<p>Aujourd'hui, nous sommes heureux d'annoncer que Jest rejoint la Fondation OpenJS&nbsp;!</p>
<p>Ce changement transf√®re la propri√©t√© du projet de Meta √† l'√©quipe principale de Jest via la Fondation OpenJS en tant que projet d'impact. Nous sommes reconnaissants envers Meta pour la cr√©ation de Jest et pour tout son soutien au fil des ans, et nous nous r√©jouissons de l'avenir de Jest en tant que projet appartenant √† la communaut√© Jest&nbsp;!</p>
<p>Consultez le blog de <a href="https://developers.facebook.com/blog/post/2022/05/11/meta-open-source-transfers-jest-to-openjs-foundation/" target="_blank" rel="noopener noreferrer">l'ing√©nierie Meta</a> et les annonces du <a href="https://openjsf.org/blog/2022/05/11/openjs-foundation-welcomes-jest/" target="_blank" rel="noopener noreferrer">blog de la Fondation OpenJS</a> pour plus d'informations.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest 28¬†: Perte de poids et compatibilit√© accrue ü´∂]]></title>
            <link>https://jestjs.io/fr/blog/2022/04/25/jest-28</link>
            <guid>https://jestjs.io/fr/blog/2022/04/25/jest-28</guid>
            <pubDate>Mon, 25 Apr 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Jest 28 est enfin l√†, et il est livr√© avec certaines fonctionnalit√©s demand√©es depuis longtemps, telles que le support du partage de l'ex√©cution de test sur plusieurs machines, les exports de paquets et la possibilit√© de personnaliser le comportement des faux temporisateurs. Il ne s'agit l√† que de quelques points marquants et nous en soulignerons d'autres dans cet article du blog.]]></description>
            <content:encoded><![CDATA[<p>Jest 28 est enfin l√†, et il est livr√© avec certaines fonctionnalit√©s demand√©es depuis longtemps, telles que le support du <a href="https://jestjs.io/fr/docs/cli#--shard">partage</a> de l'ex√©cution de test sur plusieurs machines, les <a href="https://nodejs.org/api/packages.html#exports" target="_blank" rel="noopener noreferrer"><code>exports</code> de paquets</a> et la possibilit√© de personnaliser le comportement des <a href="https://jestjs.io/fr/docs/jest-object#fake-timers">faux temporisateurs</a>. Il ne s'agit l√† que de quelques points marquants et nous en soulignerons d'autres dans cet article du blog.</p>
<p>De plus, comme annonc√© dans l'<a href="https://jestjs.io/fr/blog/2021/05/25/jest-27">article du blog consacr√© √† Jest 27</a> l'ann√©e derni√®re, nous avons supprim√© de l'installation par d√©faut certains paquets qui ne sont plus utilis√©s par d√©faut. En cons√©quence, la taille de l'installation a diminu√© d'environ 1/3.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="changements-de-rupture">Changements de rupture<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#changements-de-rupture" class="hash-link" aria-label="Direct link to Changements de rupture" title="Direct link to Changements de rupture">‚Äã</a></h2>
<p>The list of breaking changes is long (and can be seen fully in the <a href="https://github.com/jestjs/jest/blob/main/CHANGELOG.md#2800" target="_blank" rel="noopener noreferrer">changelog</a>), but for migration purposes, we've also written <a href="https://jestjs.io/fr/docs/28.x/upgrading-to-jest28">a guide</a> you can follow. Nous esp√©rons que cela rendra la mise √† jour aussi simple que possible&nbsp;!</p>
<p>Les principaux changements susceptibles d'avoir un impact sur votre migration sont l'abandon du support de Node 10 et 15 (mais <em>pas</em> de Node 12, qui sera d√©suet dans quelques jours) et quelques options de configuration renomm√©es.</p>
<p>Veuillez noter que les deux modules supprim√©s (<code>jest-environment-jsdom</code> et <code>jest-jasmine2</code>) sont toujours activement maintenus et test√©s de la m√™me mani√®re, donc le seul changement est que vous devrez les installer explicitement.</p>
<p>Le guide devrait, nous l'esp√©rons, rendre la migration triviale, mais notez que si vous utilisez directement l'un des paquets qui composent Jest (tels que <code>jest-worker</code> ou <code>pretty-format</code>), au lieu de simplement ex√©cuter <code>jest</code>, vous devez passer par le changelog pour voir les changements de rupture.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="fonctionnalit√©s">Fonctionnalit√©s<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#fonctionnalit%C3%A9s" class="hash-link" aria-label="Direct link to Fonctionnalit√©s" title="Direct link to Fonctionnalit√©s">‚Äã</a></h2>
<p>Parlons maintenant des nouvelles fonctionnalit√©s de Jest 28, qui sont bien plus int√©ressantes&nbsp;! Et il y en a pas mal, alors accrochez-vous.</p>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="partage-de-lex√©cution-des-tests">Partage de l'ex√©cution des tests<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#partage-de-lex%C3%A9cution-des-tests" class="hash-link" aria-label="Direct link to Partage de l'ex√©cution des tests" title="Direct link to Partage de l'ex√©cution des tests">‚Äã</a></h3>
<p>Jest inclut maintenant une nouvelle option CLI <a href="https://jestjs.io/fr/docs/cli#--shard"><code>--shard</code></a>, une contribution de <a href="https://github.com/marionebl" target="_blank" rel="noopener noreferrer">Mario Nebl</a>. Elle vous permet d'ex√©cuter des parties de vos tests sur diff√©rentes machines, et a √©t√© l'une des plus anciennes demandes de fonctionnalit√©s de Jest.</p>
<p>La propre suite de tests de Jest sur CI est pass√©e d'environ 10 minutes √† 3 sur Ubuntu, et sur Windows de 20 minutes √† 7.</p>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="packagejson-exports"><code>package.json</code> <code>exports</code><a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#packagejson-exports" class="hash-link" aria-label="Direct link to packagejson-exports" title="Direct link to packagejson-exports">‚Äã</a></h3>
<p>Jest a livr√© un support minimal des <a href="https://nodejs.org/api/packages.html#exports" target="_blank" rel="noopener noreferrer"><code>exports</code></a> en 27.3. Cependant, il ne prenait en charge que le point d'entr√©e ¬´&nbsp;principal&nbsp;¬ª (<code>.</code>), et seulement si aucun champ <code>main</code> n'√©tait pr√©sent dans <code>package.json</code>. Avec Jest 28, nous sommes heureux de vous offrir enfin un support complet !</p>
<p>En relation avec Jest 27, nous avons fourni une condition <code>require</code> ou <code>import</code>. Dans Jest 28, <code>jest-environment-node</code> fournira automatiquement les conditions <code>node</code> et <code>node-addons</code> tandis que <code>jest-environment-jsdom</code> fournira la condition <code>browser</code>.</p>
<p>Cela a √©t√© l'un des plus gros probl√®mes de compatibilit√© de Jest, et j'esp√®re que cela sera r√©solu une fois pour toutes.</p>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="faux-temporisateurs">Faux temporisateurs<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#faux-temporisateurs" class="hash-link" aria-label="Direct link to Faux temporisateurs" title="Direct link to Faux temporisateurs">‚Äã</a></h3>
<p>Jest 26 a introduit le concept de faux minuteurs ¬´ modernes ¬ª, qui utilise <a href="https://www.npmjs.com/package/@sinonjs/fake-timers" target="_blank" rel="noopener noreferrer"><code>@sinonjs/fake-timers</code></a> sous le capot, et Jest 27 en a fait la valeur par d√©faut. Dans Jest 28, nous exposons d√©sormais davantage l'impl√©mentation sous-jacente par le biais des API de configuration et d'ex√©cution. Un grand merci √† <a href="https://github.com/mrazauskas" target="_blank" rel="noopener noreferrer">Tom Mrazauskas</a> qui a contribu√© √† cette fonctionnalit√© !</p>
<p>Cela vous permet de ne pas simuler le processus <code>process.nextTick</code> qui am√©liore la compatibilit√© avec de fausse <code>Promise</code>, ou pour activer <code>advanceTimers</code> qui avance automatiquement les temporisateurs.</p>
<p>Veuillez consulter <a href="https://jestjs.io/fr/docs/configuration#faketimers-object">la configuration de <code>fakeTimers</code></a> pour plus de d√©tails.</p>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="rapporteur-github-actions">Rapporteur GitHub Actions<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#rapporteur-github-actions" class="hash-link" aria-label="Direct link to Rapporteur GitHub Actions" title="Direct link to Rapporteur GitHub Actions">‚Äã</a></h3>
<p>Jest est livr√© avec un rapporteur √† utiliser sur GitHub Actions, qui utilisera des annotations pour afficher les erreurs de test en ligne.</p>
<p><img loading="lazy" alt="Capture d&amp;#39;√©cran d&amp;#39;erreur de test des actions GitHub" src="https://jestjs.io/fr/assets/images/28-gh-actions-reporter-1ee03f15b770cc9e04bb15ad1a532e1d.png" width="2286" height="554" class="img_SS3x"></p>
<p>Vous pouvez activer ce rapporteur en passant <code>github-actions</code> dans <a href="https://jestjs.io/fr/docs/configuration#reporters-arraymodulename--modulename-options">l'option de configuration <code>reporters</code></a>.</p>
<p>Un grand merci √† <a href="https://github.com/ockham" target="_blank" rel="noopener noreferrer">Bernie Reiter</a> et aux autres contributeurs pour nous avoir soutenus et avoir finalement obtenu cette fonctionnalit√©.</p>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="testenvironmentoptions"><code>testEnvironmentOptions</code><a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#testenvironmentoptions" class="hash-link" aria-label="Direct link to testenvironmentoptions" title="Direct link to testenvironmentoptions">‚Äã</a></h3>
<p>Vous pouvez maintenant passer <a href="https://jestjs.io/fr/docs/configuration#testenvironmentoptions-object"><code>testEnvironmentOptions</code></a> en ligne dans un fichier, comme vous pouvez d√©finir l'environnement de test. Ceci est utile si vous voulez par exemple changer l'URL dans un seul fichier.</p>
<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @jest-environment jsdom</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @jest-environment-options {"url": "https://jestjs.io/"}</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#6b2e85">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'utilisez jsdom et d√©finissez l\'URL dans ce fichier de test'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#888">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#6b2e85">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token dom variable" style="color:#1373c2">window</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">location</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">href</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">toBe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'https://jestjs.io/'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="tous-les-globaux-de-nodejs">Tous les globaux de Node.js<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#tous-les-globaux-de-nodejs" class="hash-link" aria-label="Direct link to Tous les globaux de Node.js" title="Direct link to Tous les globaux de Node.js">‚Äã</a></h3>
<p>Si vous utilisez la nouvelle impl√©mentation <a href="https://nodejs.org/en/blog/announcements/v18-release-announce/#fetch-experimental" target="_blank" rel="noopener noreferrer"><code>fetch</code></a> dans Node v18, vous avez peut-√™tre remarqu√© que cette fonction n'est pas disponible dans Jest. Le fait de devoir copier manuellement tous les globaux dans les globaux de test est un probl√®me de longue date. Avec Jest 28, ce n'est plus un probl√®me car nous inspectons maintenant l'environnement global dans lequel Jest lui-m√™me s'ex√©cute, et copions tous les globaux qui manquent dans l'environnement de test.</p>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="modules-ecmascript">Modules ECMAScript<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#modules-ecmascript" class="hash-link" aria-label="Direct link to Modules ECMAScript" title="Direct link to Modules ECMAScript">‚Äã</a></h3>
<p>Peu de choses ont chang√© dans le support de Jest pour l'ESM natif depuis la sortie de Jest 27. Nous continuons √† √™tre bloqu√©s par <a href="https://github.com/nodejs/node/issues/37648" target="_blank" rel="noopener noreferrer">la stabilisation de Node</a>, et nous esp√©rons que cette situation s'am√©liorera plus t√¥t que tard !</p>
<p>Cependant, nous avons pu ajouter quelques nouvelles fonctionnalit√©s dans Jest 28.</p>
<h4 class="anchor anchorWithStickyNavbar_JmGV" id="les-url-de-data">Les URL de <code>data:</code><a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#les-url-de-data" class="hash-link" aria-label="Direct link to les-url-de-data" title="Direct link to les-url-de-data">‚Äã</a></h4>
<p><a href="https://github.com/tbossi" target="_blank" rel="noopener noreferrer">Tommaso Bossi</a> a contribu√© au support des <a href="https://nodejs.org/api/esm.html#data-imports" target="_blank" rel="noopener noreferrer">URL de <code>data</code></a>, ce qui signifie que vous pouvez maintenant d√©finir en ligne du JavaScript √† ex√©cuter sans utiliser <code>eval</code>.</p>
<h4 class="anchor anchorWithStickyNavbar_JmGV" id="importmetajest"><code>import.meta.jest</code><a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#importmetajest" class="hash-link" aria-label="Direct link to importmetajest" title="Direct link to importmetajest">‚Äã</a></h4>
<p>Alors que vous avez pu acc√©der √† <code>jest</code> via <code>importer {jest} depuis '@jest/globals'</code> dans Jest, nous avons re√ßu des commentaires sur le fait que c'est moins ergonomique que la variable (apparemment mais pas vraiment) globale <code>jest</code> disponible en CJS. Alors Jest 28 est livr√© avec <code>import.meta.jest</code> pour permettre un acc√®s plus facile.</p>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="divers">Divers<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#divers" class="hash-link" aria-label="Direct link to Divers" title="Direct link to Divers">‚Äã</a></h3>
<p>C'est beaucoup de fonctionnalit√©s, et ce sont mes points forts. Cependant, nous avons encore beaucoup d'autres choses que je vais passer rapidement :</p>
<h4 class="anchor anchorWithStickyNavbar_JmGV" id="r√©solveurs-asynchrones">R√©solveurs asynchrones<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#r%C3%A9solveurs-asynchrones" class="hash-link" aria-label="Direct link to R√©solveurs asynchrones" title="Direct link to R√©solveurs asynchrones">‚Äã</a></h4>
<p><a href="https://github.com/IanVS" target="_blank" rel="noopener noreferrer">Ian VanSchooten</a> a contribu√© au support de <a href="https://jestjs.io/fr/docs/configuration#resolver-string">r√©solveurs asynchrones</a>, qui permet √† des outils comme <a href="https://vitejs.dev/" target="_blank" rel="noopener noreferrer">Vite</a> d'avoir de meilleures int√©grations avec Jest.</p>
<h4 class="anchor anchorWithStickyNavbar_JmGV" id="fichiers-de-configuration-asynchrones">Fichiers de configuration asynchrones<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#fichiers-de-configuration-asynchrones" class="hash-link" aria-label="Direct link to Fichiers de configuration asynchrones" title="Direct link to Fichiers de configuration asynchrones">‚Äã</a></h4>
<p>Si vous avez un travail asynchrone que vous voulez faire en utilisant <code>setupFiles</code>, vous pouvez maintenant exporter une fonction <code>async</code>, que Jest va appeler et attendre avant de charger des tests.</p>
<p>Notez que cette fonctionnalit√© n'est disponible que pour CJS. Pour ESM, nous vous recommandons d'utiliser <code>de niveau sup√©rieur</code> √† la place.</p>
<h4 class="anchor anchorWithStickyNavbar_JmGV" id="utilisation-de-globalthis">Utilisation de <code>globalThis</code><a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#utilisation-de-globalthis" class="hash-link" aria-label="Direct link to utilisation-de-globalthis" title="Direct link to utilisation-de-globalthis">‚Äã</a></h4>
<p>En interne, Jest a utilis√© <code>global</code> pour se r√©f√©rer √† l'environnement <a href="https://developer.mozilla.org/en-US/docs/Glossary/Global_object" target="_blank" rel="noopener noreferrer">global</a>. Cependant, comme cela n'existe que dans Node, et pas dans les navigateurs (<code>window</code>), cela a conduit √† une incompatibilit√© lorsque vous essayez d'utiliser les modules de Jest dans un autre environnement.</p>
<p>Jest 28 utilise <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis" target="_blank" rel="noopener noreferrer"><code>globalThis</code></a> √† la place, qui fonctionne dans tous les environnements.</p>
<h4 class="anchor anchorWithStickyNavbar_JmGV" id="jsdom-19">JSDOM 19<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#jsdom-19" class="hash-link" aria-label="Direct link to JSDOM 19" title="Direct link to JSDOM 19">‚Äã</a></h4>
<p>Alors que, comme mentionn√©, Jest ne commercialise plus <code>jest-environment-jsdom</code> dans l'installation par d√©faut, il est toujours activement maintenu. Dans le cadre de cela, Jest 28 a fait une mise √† jour de <code>jsdom@16</code> √† <code>jsdom@19</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="typescript">TypeScript<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#typescript" class="hash-link" aria-label="Direct link to TypeScript" title="Direct link to TypeScript">‚Äã</a></h2>
<p>Si vous utilisez Jest avec TypeScript, soit dans vos tests ou lors de l'√©criture de plugins tels que des ex√©cuteurs personnalis√©s, Jest 28 apporte de nombreuses am√©liorations √† nos types. Voici une liste non exhaustive des changements dans Jest 28.</p>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="expect"><code>expect</code><a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#expect" class="hash-link" aria-label="Direct link to expect" title="Direct link to expect">‚Äã</a></h3>
<p>Lorsque vous utilisez <code>attendez les propres types de</code>(soit directement, ou via <code>importer {expect} √† partir de '@jest/globals'</code>), il est enfin possible d'ajouter des matchers personnalis√©s. See our <a href="https://github.com/jestjs/jest/tree/main/examples/expect-extend" target="_blank" rel="noopener noreferrer">example</a> for how to do this.</p>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="plugins-personnalis√©s">Plugins personnalis√©s<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#plugins-personnalis%C3%A9s" class="hash-link" aria-label="Direct link to Plugins personnalis√©s" title="Direct link to Plugins personnalis√©s">‚Äã</a></h3>
<p>Si vous √©crivez un ex√©cuteur personnalis√©, un reporteur de test, un r√©solveur ou autre chose, nous exportons maintenant plus de types qui devraient vous aider √† taper ces types plus correctement. Il s'agit d'une cible en mouvement, donc si vous √™tes l'auteur de quelque chose de branchable dans Jest et que les types ne sont pas aussi utiles qu'ils pourraient l'√™tre, s'il vous pla√Æt remplir un probl√®me !</p>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="jest-runner-tsd"><code>jest-runner-tsd</code><a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#jest-runner-tsd" class="hash-link" aria-label="Direct link to jest-runner-tsd" title="Direct link to jest-runner-tsd">‚Äã</a></h3>
<p><a href="https://github.com/jest-community/jest-runner-tsd" target="_blank" rel="noopener noreferrer"><code>jest-runner-tsd</code></a> est un ex√©cuteur personnalis√© pour ex√©cuter des tests de type. C'est ce que Jest utilise lui-m√™me pour tester nos types, et nous esp√©rons qu'il pourra √©galement √™tre utilis√© par d'autres ! Comme son nom l'indique, il est bas√© sur <a href="https://npmjs.com/package/tsd" target="_blank" rel="noopener noreferrer"><code>tsd</code></a>, bien qu'il soit sous le capot utilise la fourche <a href="https://npmjs.com/package/tsd-lite" target="_blank" rel="noopener noreferrer"><code>tsd-lite</code></a>.</p>
<hr>
<p>Toutes ces am√©liorations et corrections ont √©t√© apport√©es par <a href="https://github.com/mrazauskas" target="_blank" rel="noopener noreferrer">Tom Mrazauskas</a>. Merci beaucoup&nbsp;! üëè</p>
<p>Enfin, la version minimale de support de TypeScript est maintenant 4.3.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="jest-light-runner"><code>jest-light-runner</code><a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#jest-light-runner" class="hash-link" aria-label="Direct link to jest-light-runner" title="Direct link to jest-light-runner">‚Äã</a></h2>
<p>La derni√®re chose que nous voulons mettre en √©vidence dans ce blog, est un nouveau coureur Jest tr√®s sympa, cr√©√© par <a href="https://github.com/nicolo-ribaudo" target="_blank" rel="noopener noreferrer">NicoloÃÄ Ribaudo</a>, appel√© <a href="https://www.npmjs.com/package/jest-light-runner" target="_blank" rel="noopener noreferrer"><code>jest-light-runner</code></a>. Cela prend presque tout le DX Jest est connu, et acc√©l√®re sa vitesse en √©tant une abstraction plus petite sur le dessus de Node. Les tests de Babel sont devenus presque deux fois plus rapides apr√®s la migration. Tant qu'il y a des avertissements, l'existence de cet ex√©cuteur devrait rendre encore plus facile pour les personnes qui ont des modules de Node plus petite taille de tester pour choisir Jest. Merci, Nicol√≤&nbsp;!</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="a-venir">A venir<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#a-venir" class="hash-link" aria-label="Direct link to A venir" title="Direct link to A venir">‚Äã</a></h2>
<p>Alors que Jest 28 est arriv√© presque un an apr√®s Jest 27, Jest 29 arrivera plus t√¥t, probablement dans quelques mois. Le plan actuel est alors d'avoir juste un changement de rupture (sauf suppression des versions du n≈ìud), et c'est √† d√©faut <a href="https://jestjs.io/fr/docs/configuration#snapshotformat-object"><code>snapshotFormat</code></a> √† <code>{escapeString: false, printBasicPrototype: false}</code>. Cela rend les snapshots √† la fois plus lisibles et plus faciles √† coller.</p>
<p>Cela sera bien s√ªr possible de passer outre si vous ne voulez pas changer, mais vous pouvez aussi utiliser ces options aujourd'hui si vous ne voulez pas attendre !</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="remerciements">Remerciements<a href="https://jestjs.io/fr/blog/2022/04/25/jest-28#remerciements" class="hash-link" aria-label="Direct link to Remerciements" title="Direct link to Remerciements">‚Äã</a></h2>
<p>Jest 28 contient des contributions de plus de 60 personnes, dont plus de deux tiers sont les premiers contributeurs. Merci beaucoup √† tous les contributeurs, anciens et nouveaux. Sans vous, le projet ne serait pas aussi bon qu'il est ! J'aimerais particuli√®rement remercier <a href="https://github.com/mrazauskas" target="_blank" rel="noopener noreferrer">Tom Mrazauskas</a> et <a href="https://github.com/F3n67u" target="_blank" rel="noopener noreferrer">Feng Yu</a> pour toutes leurs contributions, depuis le code, pour rendre le triage au d√©bogage, qui a fait de Jest 28 ce qu'il est. Merci! üôè</p>
<p>Merci d'avoir lu, et heureux Jesting! üÉè</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest 27¬†: nouvelles valeurs par d√©faut pour Jest, √©dition 2021 ‚è©]]></title>
            <link>https://jestjs.io/fr/blog/2021/05/25/jest-27</link>
            <guid>https://jestjs.io/fr/blog/2021/05/25/jest-27</guid>
            <pubDate>Tue, 25 May 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Dans l'article du blog pour Jest 26, il y a environ un an, nous avons annonc√© qu'apr√®s deux versions majeures avec peu de modifications de rupture, Jest 27 basculera quelques interrupteurs afin de d√©finir de meilleures valeurs par d√©faut pour les projets qui sont nouveaux ou qui peuvent migrer en douceur. Cela nous donne l'opportunit√© de retirer certains paquets de la distribution par d√©faut de Jest 28 et de les publier en tant que modules installables et connectables s√©par√©ment. Tous ceux qui utilisent les nouvelles valeurs par d√©faut peuvent b√©n√©ficier d'une installation plus petite, tandis que ceux qui ont besoin de ces paquets peuvent toujours les installer s√©par√©ment.]]></description>
            <content:encoded><![CDATA[<p>Dans l'<a href="https://jestjs.io/fr/blog/2020/05/05/jest-26">article du blog pour Jest 26</a>, il y a environ un an, nous avons annonc√© qu'apr√®s deux versions majeures avec peu de modifications de rupture, Jest 27 basculera quelques interrupteurs afin de d√©finir de meilleures valeurs par d√©faut pour les projets qui sont nouveaux ou qui peuvent migrer en douceur. Cela nous donne l'opportunit√© de retirer certains paquets de la distribution par d√©faut de Jest 28 et de les publier en tant que modules installables et connectables s√©par√©ment. Tous ceux qui utilisent les nouvelles valeurs par d√©faut peuvent b√©n√©ficier d'une installation plus petite, tandis que ceux qui ont besoin de ces paquets peuvent toujours les installer s√©par√©ment.</p>
<p>Avec le premier changement majeur des valeurs par d√©faut depuis les <a href="https://jestjs.io/fr/blog/2016/09/01/jest-15">nouvelles valeurs par d√©faut pour Jest</a> qui accompagnaient la version 15, Jest 27 est maintenant l√†, pour que Jest reste rapide, l√©ger et pertinent dans le futur. Nous expliquerons ces changements de valeurs par d√©faut et d'autres changements notables dans cet article, mais tout d'abord, nous allons aborder les nouvelles fonctionnalit√©s&nbsp;!</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="mises-√†-jour-des-fonctionnalit√©s">Mises √† jour des fonctionnalit√©s<a href="https://jestjs.io/fr/blog/2021/05/25/jest-27#mises-%C3%A0-jour-des-fonctionnalit%C3%A9s" class="hash-link" aria-label="Direct link to Mises √† jour des fonctionnalit√©s" title="Direct link to Mises √† jour des fonctionnalit√©s">‚Äã</a></h2>
<p>Tout d'abord, le mode interactif que vous connaissez peut-√™tre pour examiner et mettre √† jour les snapshots en erreur peut d√©sormais √™tre utilis√© pour <strong>passer les tests en erreur</strong> un par un. Credit goes to first-time contributor <a href="https://github.com/NullDivision" target="_blank" rel="noopener noreferrer">@NullDivision</a> for <a href="https://github.com/jestjs/jest/pull/10858" target="_blank" rel="noopener noreferrer">implementing</a> this feature!</p>
<p><img loading="lazy" alt="√âchec d&amp;#39;un test interactif" src="https://jestjs.io/fr/assets/images/27-interactive-failures-e22e3b31b285188ed65f6432cb21df30.png" width="2416" height="1289" class="img_SS3x"></p>
<p>Speaking of snapshots, one of the more exciting features we've shipped in recent years are Inline Snapshots, which <a href="https://github.com/jestjs/jest/pull/6380" target="_blank" rel="noopener noreferrer">landed</a> in a minor release of Jest 23 almost three years ago. However, they came with the restriction that projects wanting to utilize them must be using <a href="https://prettier.io/" target="_blank" rel="noopener noreferrer">Prettier</a> to format their code, because that's what Jest would use to make sure the file it writes the snapshots into remains properly formatted.<br>
<!-- -->And so for most of these years, we've had a <a href="https://github.com/jestjs/jest/pull/7792" target="_blank" rel="noopener noreferrer">pull request</a> in the pipeline to eliminate this restriction and allow using <strong>Inline Snapshots without Prettier</strong>. Elle a accumul√© plus d'une centaine de commentaires, sans m√™me consid√©rer les PR qui s'en sont d√©tach√©es et ont atterri en premier, et elle a m√™me chang√© de propri√©taire une fois apr√®s la soumission initiale par un autre premier contributeur, <a href="https://github.com/mmkal" target="_blank" rel="noopener noreferrer">@mmkal</a> sous le titre de travail hilarant ¬´&nbsp;Uglier Inline Snapshots&nbsp;¬ª (¬´&nbsp;Snapshots en ligne hideux&nbsp;¬ª). Avec l'ascension fulgurante de Prettier ces derniers temps, cette am√©lioration est maintenant peut-√™tre moins n√©cessaire qu'en 2018, mais tout de m√™me, nous connaissons ce sentiment de se retrouver dans un projet qui n'utilise pas Prettier, et de ne plus pouvoir soudainement utiliser les snapshots en ligne. Plus jamais √ßa&nbsp;!</p>
<p>La raison principale pour laquelle il nous a fallu tant de temps pour r√©aliser ce projet √©tait, de mani√®re assez surprenante, une erreur de m√©moire dans notre pipeline de construction. It turns out that the dependencies we load for each test file to perform the parsing, snapshot insertion, and printing do incur a significant time and memory overhead.<br>
<!-- -->So with some <a href="https://github.com/jestjs/jest/issues/9898" target="_blank" rel="noopener noreferrer">tricks</a>, we've <strong>speed up the initialization per test file</strong> by roughly 70% compared to Jest 26. Notez que vous ne verrez certainement pas une telle am√©lioration des performances sur votre projet - vous auriez besoin de beaucoup de fichiers de test qui s'ex√©cutent chacun tr√®s rapidement pour mieux le remarquer, et la surcharge lors de l'utilisation d'un <a href="https://jestjs.io/fr/docs/configuration#testenvironment-string">environnement JSDOM</a> √©clipse une telle am√©lioration.</p>
<p>In other news, the <a href="https://github.com/jestjs/jest/issues/9430" target="_blank" rel="noopener noreferrer">native ESM support</a> is progressing, but some major complexities, for instance around mocking, are still ahead of us, and we continue to observe the migration to ESM as a huge ecosystem effort, where Node and a lot of crucial tools and packages all have to rely on each other to deliver an overall compelling experience.<br>
<!-- -->ESM support <a href="https://github.com/jestjs/jest/issues/11167" target="_blank" rel="noopener noreferrer">for plugging modules into Jest</a> is more advanced‚Äîcustom runners, reporters, watch plugins, and many other modules can already be loaded as ES modules.</p>
<p>We've also merged <a href="https://github.com/jestjs/jest/pull/9351" target="_blank" rel="noopener noreferrer">a PR</a> to be able to deal with test files symlinked into the test directory, a feature much wanted by users of <a href="https://bazel.build/" target="_blank" rel="noopener noreferrer">Bazel</a>.</p>
<p><a href="https://github.com/jestjs/jest/issues/9504" target="_blank" rel="noopener noreferrer">Another PR</a> enabled <a href="https://jestjs.io/fr/docs/configuration#transform-objectstring-pathtotransformer--pathtotransformer-object"><code>transform</code>s</a> to be asynchronous, a requirement to support transpilation through tools such as <a href="https://esbuild.github.io/" target="_blank" rel="noopener noreferrer">esbuild</a>, <a href="https://www.snowpack.dev/" target="_blank" rel="noopener noreferrer">Snowpack</a>, and <a href="https://vitejs.dev/" target="_blank" rel="noopener noreferrer">Vite</a> effectively.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="inversion-des-valeurs-par-d√©faut">Inversion des valeurs par d√©faut<a href="https://jestjs.io/fr/blog/2021/05/25/jest-27#inversion-des-valeurs-par-d%C3%A9faut" class="hash-link" aria-label="Direct link to Inversion des valeurs par d√©faut" title="Direct link to Inversion des valeurs par d√©faut">‚Äã</a></h2>
<p>Jusqu'√† pr√©sent, si vous utilisiez Jest dans sa configuration par d√©faut, vous ex√©cutiez - peut-√™tre sans le savoir - un code fork√© il y a plusieurs ann√©es √† partir de l'ex√©cuteur de tests <a href="https://jasmine.github.io/2.0/introduction" target="_blank" rel="noopener noreferrer">Jasmine 2.0</a> qui fournit des fonctions de framework de test telles que <code>describe</code>, <code>it</code>, et <code>beforeEach</code>. In 2017, <a href="https://github.com/aaronabramov" target="_blank" rel="noopener noreferrer">Aaron Abramov</a> <a href="https://github.com/jestjs/jest/pull/3668" target="_blank" rel="noopener noreferrer">initially wrote</a> a <strong>replacement for the Jasmine code</strong> called <code>jest-circus</code>, meant to improve error messages, maintainability, and extensibility.<br>
<!-- -->After years of large-scale use at Facebook and of course in Jest itself, as well as recent adoption in <code>create-react-app</code>, we are now confident that <code>jest-circus</code> is highly compatible with <code>jest-jasmine2</code> and should work in most environments with little to no migration work. Il peut y avoir des diff√©rences mineures dans l'ordre d'ex√©cution et la rigueur, mais nous ne pr√©voyons pas de difficult√©s majeures de mise √† niveau autres que pour le code s'appuyant sur des API sp√©cifiques √† Jasmine telles que <code>jasmine.getEnv()</code>. Si vous vous appuyez largement sur de telles API, vous pouvez opter √† nouveau pour le gestionnaire de tests bas√© sur Jasmine en <a href="https://jestjs.io/fr/docs/configuration#testrunner-string">configurant</a> <code>"testRunner" : "jest-jasmine2"</code>.</p>
<p>L'ex√©cution de tests dans un <a href="https://jestjs.io/fr/docs/configuration#testenvironment-string">environnement JSDOM</a> entra√Æne un surco√ªt de performance non n√©gligeable. Parce que c'√©tait le comportement par d√©faut de Jest, sauf configuration contraire jusque-l√†, les utilisateurs qui √©crivent des applications Node, par exemple, peuvent ne m√™me pas savoir qu'ils re√ßoivent un environnement DOM co√ªteux dont ils n'ont m√™me pas besoin.<br>
<!-- -->Pour cette raison, nous allons <strong>changer l'environnement de test par d√©faut</strong> de <code>"jsdom"</code> √† <code>"node"</code>. Si vous √™tes affect√© par ce changement parce que vous utilisez les API DOM et que l'environnement de test n'est pas explicitement configur√©, vous devriez recevoir une erreur lorsque par exemple <code>document</code> est acc√©d√©, et vous pouvez configurer <code>"testEnvironment" : "jsdom"</code> ou utiliser <a href="https://jestjs.io/fr/docs/configuration#testenvironment-string">la configuration de l'environnement par fichier</a> pour r√©soudre ce probl√®me.<br>
<!-- -->Pour les projets mixtes o√π certains tests n√©cessitent un environnement DOM mais d'autres non, nous recommandons d'utiliser l'environnement rapide <code>"node"</code> par d√©faut et de d√©clarer exactement les tests qui ont besoin du DOM en utilisant des <a href="https://jestjs.io/fr/docs/configuration#testenvironment-string">docblocks</a>.<br>
<!-- -->Dans la prochaine version majeure, nous pr√©voyons √©galement d'√©liminer <code>jest-jasmine2</code> et <code>jest-environment-jsdom</code> de l'arbre de d√©pendances de Jest et d'exiger qu'ils soient install√©s explicitement, afin que de nombreux utilisateurs puissent profiter d'une taille d'installation plus petite avec moins de superflu.</p>
<p>Une autre valeur par d√©faut que nous changeons affecte les faux temporisateurs alias les <a href="https://jestjs.io/fr/docs/timer-mocks">simulateurs de temporisation</a>. Nous avons introduit une option d'impl√©mentation ¬´&nbsp;moderne&nbsp;¬ª de faux temporisateurs dans Jest 26 accessible de mani√®re transparente via la m√™me API, mais avec une simulation beaucoup plus compl√®te, notamment pour <code>Date</code> et <code>queueMicrotask</code>.<br>
<!-- -->. Cette <strong>impl√©mentation moderne de faux temporisateurs sera d√©sormais la valeur par d√©faut</strong>. Si vous faites partie des quelques malchanceux qui sont trop lourdement affect√©s par les subtiles diff√©rences d'impl√©mentation pour migrer, vous pouvez r√©cup√©rer l'ancienne impl√©mentation en utilisant <code>jest.useFakeTimers("legacy")</code> ou, si vous activez les faux temporisateurs globalement via <a href="https://jestjs.io/fr/docs/configuration#timers-string">configuration</a>, <code>"timers" : "legacy"</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="fonctionnalit√©s-√†-venir-avec-des-changements-de-rupture">Fonctionnalit√©s √† venir avec des changements de rupture<a href="https://jestjs.io/fr/blog/2021/05/25/jest-27#fonctionnalit%C3%A9s-%C3%A0-venir-avec-des-changements-de-rupture" class="hash-link" aria-label="Direct link to Fonctionnalit√©s √† venir avec des changements de rupture" title="Direct link to Fonctionnalit√©s √† venir avec des changements de rupture">‚Äã</a></h2>
<p>Nous avons introduit quelques petits changements de rupture suppl√©mentaires pour vous aider √† √©viter les erreurs en interdisant certaines choses qui peuvent facilement se produire involontairement&nbsp;:</p>
<ul>
<li>Le m√™me callback de test <code>done</code> ne peut √™tre appel√© plus d'une fois,</li>
<li>l'appel √† <code>done</code> et le retour d'une promesse ne peuvent pas √™tre combin√©s,</li>
<li>un bloc <code>describe</code> ne doit rien retourner,</li>
</ul>
<p>and we <a href="https://github.com/jestjs/jest/pull/10512" target="_blank" rel="noopener noreferrer">made some TypeScript types stricter</a>.</p>
<p>Les modules utilis√©s dans les options de configuration suivantes sont d√©sormais transform√©s comme le reste de votre code, ce qui peut √™tre une rupture si vous comptez sur leur chargement tel quel&nbsp;:</p>
<ul>
<li><code>testEnvironment</code></li>
<li><code>runner</code></li>
<li><code>testRunner</code></li>
<li><code>snapshotResolver</code></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="divers-changements-de-rupture">Divers changements de rupture<a href="https://jestjs.io/fr/blog/2021/05/25/jest-27#divers-changements-de-rupture" class="hash-link" aria-label="Direct link to Divers changements de rupture" title="Direct link to Divers changements de rupture">‚Äã</a></h2>
<p>Nous avons supprim√© certaines fonctions, obsol√®tes depuis longtemps&nbsp;:</p>
<ul>
<li><code>jest.addMatchers</code> (utilisez <code>expect.extend</code> √† la place)</li>
<li><code>jest.resetModuleRegistry</code> (utilisez <code>jest.resetModules</code> √† la place)</li>
<li><code>jest.runTimersToTime</code> (utilisez <code>jest.advanceTimersByTime</code> √† la place)</li>
</ul>
<p>Beaucoup de paquets de Jest ont √©t√© migr√©s pour utiliser des exportations de style ESM (bien qu'ils soient toujours livr√©s en tant que CommonJS), donc si vous consommez par exemple <code>pretty-format</code> directement, vous devrez peut-√™tre ajuster votre import en un import <code>default</code>.</p>
<p>Nous avons abandonn√© la prise en charge de Node 13, mais Jest prend toujours en charge les versions <em>Current</em> et toutes les versions <em>LTS</em> de <a href="https://nodejs.org/en/about/releases/" target="_blank" rel="noopener noreferrer">Node</a> et Jest 27 continue de prendre en charge Node 10, qui est tomb√© en d√©su√©tude que r√©cemment.</p>
<p>As always, the full changelog and list of breaking changes can be <a href="https://github.com/jestjs/jest/blob/main/CHANGELOG.md#2700" target="_blank" rel="noopener noreferrer">viewed here</a>.</p>
<p>Enfin, nous tenons √† remercier la communaut√© qui, une fois de plus, a accord√© √† Jest un taux de satisfaction exceptionnel de 96 % dans l'enqu√™te <a href="https://2020.stateofjs.com/en-US/technologies/testing/" target="_blank" rel="noopener noreferrer">State of JS 2020</a>&nbsp;! Soyez prudents, et nous esp√©rons que vous continuerez √† utiliser Jest avec plaisir dans les ann√©es et versions √† venir&nbsp;! üÉè</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Mise √† niveau du site web de Jest]]></title>
            <link>https://jestjs.io/fr/blog/2021/03/09/jest-website-upgrade</link>
            <guid>https://jestjs.io/fr/blog/2021/03/09/jest-website-upgrade</guid>
            <pubDate>Tue, 09 Mar 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Nous sommes heureux de vous pr√©senter le nouveau site web de Jest¬†!]]></description>
            <content:encoded><![CDATA[<p>Nous sommes heureux de vous pr√©senter le <strong>nouveau site web de Jest</strong>&nbsp;!</p>
<p>Le site Jest a √©t√© mis √† niveau de <strong><a href="https://v1.docusaurus.io/" target="_blank" rel="noopener noreferrer">Docusaurus 1</a></strong> vers <strong><a href="https://v2.docusaurus.io/" target="_blank" rel="noopener noreferrer">Docusaurus 2</a></strong>, et est un pr√©curseur de la <a href="https://v2.docusaurus.io/blog/2021/03/09/releasing-docusaurus-i18n" target="_blank" rel="noopener noreferrer">prise en charge de i18n de Docusaurus 2 r√©cemment publi√©</a>.</p>
<p>Alors, quoi de neuf exactement ?</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="quoi-de-neuf-">Quoi de neuf ?<a href="https://jestjs.io/fr/blog/2021/03/09/jest-website-upgrade#quoi-de-neuf-" class="hash-link" aria-label="Direct link to Quoi de neuf ?" title="Direct link to Quoi de neuf ?">‚Äã</a></h2>
<p>Voici un bon aper√ßu des am√©liorations les plus visibles&nbsp;:</p>
<ul>
<li>
<p><strong>Mode sombre</strong> : changez le sch√©ma de couleurs par le biais de l'interrupteur de la barre de navigation.</p>
</li>
<li>
<p><strong>Navigation moderne</strong> : nous avons am√©lior√© l'exp√©rience de navigation avec le <strong>routage c√¥t√© client</strong> et le <strong>pr√©-chargement</strong>.</p>
</li>
<li>
<p><strong>Liste d√©roulante des versions</strong>&nbsp;: il est maintenant plus simple de passer d'une version Jest √† une autre.</p>
</li>
<li>
<p><strong>Progressive-Web-App</strong>&nbsp;: vous pouvez installer le site Jest et le parcourir hors ligne.</p>
</li>
<li>
<p><strong>Recherche</strong> : essayez la nouvelle exp√©rience utilisateur d'Algolia <strong>DocSearch v3</strong>. Il est maintenant possible de <strong>rechercher dans les articles du blog</strong>.</p>
</li>
<li>
<p><strong>I18n</strong>&nbsp;: Jest est le premier site web utilisant la <strong><a href="https://v2.docusaurus.io/docs/i18n/introduction" target="_blank" rel="noopener noreferrer">nouvelle fonctionnalit√© i18n de Docusaurus 2</a></strong>. Il est maintenant possible de <strong>traduire des articles du blog</strong>.</p>
</li>
<li>
<p><strong>MDX</strong>&nbsp;: int√©grer des composants React dans le Markdown permettra aux mainteneurs de rendre la <strong>documentation plus interactive</strong>.</p>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="pour-les-traducteurs-du-site">Pour les traducteurs du site<a href="https://jestjs.io/fr/blog/2021/03/09/jest-website-upgrade#pour-les-traducteurs-du-site" class="hash-link" aria-label="Direct link to Pour les traducteurs du site" title="Direct link to Pour les traducteurs du site">‚Äã</a></h2>
<p>Si vous voulez aider √† traduire le nouveau site Jest, veuillez utiliser le nouveau projet Crowdin <a href="https://crowdin.com/project/jest-v2" target="_blank" rel="noopener noreferrer">jest-v2</a> au lieu du pr√©c√©dent.</p>
<div class="theme-admonition theme-admonition-note admonition_WCGJ alert alert--secondary"><div class="admonitionHeading_GCBg"><span class="admonitionIcon_L39b"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>remarque</div><div class="admonitionContent_pbrs"><p>Dans les pages localis√©es, le bouton d'√©dition renvoie d√©sormais directement √† Crowdin.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="remerciements">Remerciements<a href="https://jestjs.io/fr/blog/2021/03/09/jest-website-upgrade#remerciements" class="hash-link" aria-label="Direct link to Remerciements" title="Direct link to Remerciements">‚Äã</a></h2>
<p>Merci √† tous les contributeurs qui ont pris en charge ou examin√© cette migration : <a href="https://github.com/SimenB" target="_blank" rel="noopener noreferrer">Simen</a>, <a href="https://github.com/orta" target="_blank" rel="noopener noreferrer">Orta</a>, <a href="https://github.com/JoelMarcey" target="_blank" rel="noopener noreferrer">Joel</a>, <a href="https://github.com/merceyz" target="_blank" rel="noopener noreferrer">Kristoffer</a>...</p>
<p>Please report any problem on the <a href="https://github.com/jestjs/jest/pull/11021" target="_blank" rel="noopener noreferrer">migration issue</a>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest 26¬†: Tic Tac]]></title>
            <link>https://jestjs.io/fr/blog/2020/05/05/jest-26</link>
            <guid>https://jestjs.io/fr/blog/2020/05/05/jest-26</guid>
            <pubDate>Tue, 05 May 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[Lorsque nous avons commenc√© √† reconstruire Jest il y a cinq ans, notre objectif √©tait de fournir un ex√©cuteur de tests sans configuration, accessible aux d√©butants, extensible pour presque tous les cas d'utilisation de tests et √©volutif pour les grands projets. L'une des versions essentielles a √©t√© Jest 15, qui a tout regroup√© et fourni de bonnes valeurs par d√©faut permettant aux gens d'ex√©cuter Jest souvent sans aucune configuration. Cependant, cette approche a un gros inconv√©nient car Jest installe beaucoup de d√©pendances dans vos projets dont vous n'avez peut-√™tre pas besoin.]]></description>
            <content:encoded><![CDATA[<p>Lorsque nous avons commenc√© √† reconstruire Jest il y a cinq ans, notre objectif √©tait de fournir un ex√©cuteur de tests sans configuration, accessible aux d√©butants, extensible pour presque tous les cas d'utilisation de tests et √©volutif pour les grands projets. L'une des versions essentielles a √©t√© <a href="https://jestjs.io/fr/blog/2016/09/01/jest-15">Jest 15</a>, qui a tout regroup√© et fourni de bonnes valeurs par d√©faut permettant aux gens d'ex√©cuter Jest souvent sans aucune configuration. Cependant, cette approche a un gros inconv√©nient car Jest installe beaucoup de d√©pendances dans vos projets dont vous n'avez peut-√™tre pas besoin.</p>
<p>Nous commen√ßons √† rem√©dier √† cette lacune et nous nous effor√ßons de r√©duire la taille de l'installation de Jest tout en le gardant accessible et extensible. Nous avons apport√© les <strong>changements de rupture</strong> suivants dans Jest 26 :</p>
<ul>
<li>
<p><code>[expect, jest-mock, pretty-format]</code> Remove <code>ES5</code> build files with a new minimum of support of ES2015 (Node 8) which were only used for browser builds (<a href="https://github.com/jestjs/jest/pull/9945" target="_blank" rel="noopener noreferrer">#9945</a>)</p>
<blockquote>
<p><strong>Migration</strong> : Avec ce changement, nous poussons la responsabilit√© vers les utilisateurs pour regrouper les paquets affect√©s, plut√¥t que Jest les fournisse directement, puisqu'ils connaissent mieux leurs environnements cibles. Si vous voulez le r√©cup√©rer, nous sommes pr√™ts √† les exp√©dier s√©par√©ment. Les PRs sont les bienvenus&nbsp;!</p>
</blockquote>
</li>
<li>
<p><code>[jest-config, jest-resolve]</code> Remove support for <code>browser</code> field (<a href="https://github.com/jestjs/jest/pull/9943" target="_blank" rel="noopener noreferrer">#9943</a>)</p>
<blockquote>
<p><strong>Migration</strong>&nbsp;: Installez le module <code>browser-resolve</code> et utilisez la configuration suivante&nbsp;:</p>
<div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#82772c">"jest"</span><span class="token operator" style="color:#888">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token property" style="color:#82772c">"resolver"</span><span class="token operator" style="color:#888">:</span><span class="token plain"> </span><span class="token string" style="color:#c21325">"&lt;rootDir&gt;/resolver.js"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</blockquote>
<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// resolver.js</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#297a29">const</span><span class="token plain"> browserResolve </span><span class="token operator" style="color:#888">=</span><span class="token plain"> </span><span class="token function" style="color:#6b2e85">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'browser-resolve'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">module</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator" style="color:#888">=</span><span class="token plain"> browserResolve</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">sync</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p>TypeScript definitions requires a minimum of TypeScript v3.8 (<a href="https://github.com/jestjs/jest/pull/9823" target="_blank" rel="noopener noreferrer">#9823</a>)</p>
</li>
</ul>
<p>Avec les changements ci-dessus, Jest 26 est maintenant 4 MiB plus petit que Jest 25.5.4 (53 ‚Üí 49 MiB). N'oubliez pas que de nombreuses d√©pendances, comme Babel, font probablement d√©j√† partie de votre projet. La taille de Jest a √©t√© r√©duite de 1,2 MiB (4,3 -&gt; 3,1 MiB).</p>
<p>Bien qu'il s'agisse d'un bon d√©but, cela ne suffit pas √† all√©ger significativement Jest. Nous pr√©voyons de r√©duire progressivement la taille de Jest et de son arbre de d√©pendances jusqu'√† 70%. La plupart des changements visant √† r√©duire la configuration par d√©faut de Jest seront de petits changements de rupture et nous voulons amener la communaut√© avec nous autant que possible. Par cons√©quent, nous apporterons les changements suivants dans Jest 27 et Jest 28 en utilisant un <a href="https://en.wikipedia.org/wiki/Tick%E2%80%93tock_model" target="_blank" rel="noopener noreferrer">processus de publication "Tick-Tock"</a> :</p>
<ul>
<li>Jest 27 sera livr√© avec un nouveau runner de test "<code>jest-circus</code>" et l'environnement Node.js par d√©faut. <code>jest-jasmine2</code> et <code>jest-environment-jsdom</code> seront toujours fournis afin que les utilisateurs puissent continuer √† les utiliser en changeant une ligne chacun dans la configuration.</li>
<li>Jest 28 supprimera <code>jest-jasmine2</code> et <code>jest-environment-jsdom</code> de la distribution par d√©faut de Jest. Les paquets seront toujours activement maintenus dans le cadre du projet Jest et seront publi√©s s√©par√©ment. Les utilisateurs devront installer ces paquets pour les utiliser.</li>
</ul>
<p>Lors de la mise √† jour vers ces versions majeures, Jest vous guidera √† travers les changements n√©cessaires. Si vous souhaitez prendre de l'avance et migrer vers les nouveaux param√®tres par d√©faut d√®s maintenant, et que votre projet ne n√©cessite pas un environnement DOM, vous pouvez passer √† Jest 26 et ajouter les options de configuration suivantes&nbsp;:</p>
<div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#82772c">"jest"</span><span class="token operator" style="color:#888">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#82772c">"testEnvironment"</span><span class="token operator" style="color:#888">:</span><span class="token plain"> </span><span class="token string" style="color:#c21325">"node"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#82772c">"testRunner"</span><span class="token operator" style="color:#888">:</span><span class="token plain"> </span><span class="token string" style="color:#c21325">"jest-circus/runner"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Jest continuera √† √™tre livr√© avec <code>babel-jest</code> activ√© par d√©faut. Il alimente actuellement quelques fonctionnalit√©s de Jest au-del√† de la compilation de la syntaxe JavaScript moderne vers quelque chose de compris par les versions actuelles de Node.js et des navigateurs : Il permet √©galement la couverture du code de Jest et l'adaptation des modules ES. Jest est actuellement livr√© avec un support exp√©rimental pour <a href="https://jestjs.io/fr/blog/2020/01/21/jest-25#v8-code-coverage">la couverture V8</a> et un support natif pour les modules ES (plus sur ce sujet ci-dessous&nbsp;!). Il n'est pas possible de simuler des modules ES statiques conform√©ment aux sp√©cifications sans transformer le code au pr√©alable. Nous encouragerons donc les patterns qui fonctionnent sans la transformation pour laquelle nous utilisons Babel aujourd'hui. Une fois que la couverture V8 et le support ESM natif se seront stabilis√©s dans Jest, nous pourrons √©galement supprimer <code>babel-jest</code> par d√©faut mais nous continuerons √† le maintenir.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="nouveaux-temporisateurs-fictifs">Nouveaux temporisateurs fictifs<a href="https://jestjs.io/fr/blog/2020/05/05/jest-26#nouveaux-temporisateurs-fictifs" class="hash-link" aria-label="Direct link to Nouveaux temporisateurs fictifs" title="Direct link to Nouveaux temporisateurs fictifs">‚Äã</a></h2>
<p>Avec Jest 26, nous livrons une nouvelle impl√©mentation des temporisateurs fictifs bas√©e sur <code>@sinonjs/fake-timers</code>. Nous voulions faire cela depuis des ann√©es et nous sommes heureux que cela ait finalement progress√© suffisamment pour supporter tous les cas d'utilisation des temporisateurs fictifs de Jest.</p>
<p>La nouvelle impl√©mentation est accompagn√©e de fonctionnalit√©s suppl√©mentaires telles que la simulation de <code>Date</code>, <code>queueMicrotask</code> et plus encore, consultez <a href="https://github.com/sinonjs/fake-timers/blob/master/README.md" target="_blank" rel="noopener noreferrer">ce README</a>. Il fonctionne de mani√®re transparente en utilisant les API de temporisateur existants comme <code>jest.runAllTimers()</code> - consultez la documentation <a href="https://jestjs.io/fr/docs/timer-mocks">sur notre site web</a>.</p>
<p>Nous sommes convaincus que cette impl√©mentation est pr√™te pour le grand public, mais nous ne voulons pas obliger les gens √† r√©√©crire leurs tests s'ils d√©pendent de diff√©rences subtiles entre l'ancienne et la nouvelle impl√©mentation. Dans Jest 26, cette nouvelle impl√©mentation restera <em>opt-in</em> et peut √™tre activ√©e en appelant <code>jest.useFakeTimers('modern')</code> ou en passant <code>modern</code> √† l'option <code>timers</code> dans votre configuration si vous aviez opt√© pour tous les tests en temporisateurs fictifs pr√©c√©demment.</p>
<p>Dans Jest 27, nous √©changerons la valeur par d√©faut contre la nouvelle impl√©mentation "modern" mais nous continuerons √† soutenir et √† maintenir l'impl√©mentation h√©rit√©e qui peut √™tre utilis√©e en appelant <code>jest.useFakeTimers('legacy')</code>. Si vous n'√™tes pas s√ªr de pouvoir mettre √† jour tous vos tests d'ici la sortie de Jest 27, vous pouvez ajouter cette option √† vos tests maintenant pour conserver l'ancien comportement.</p>
<p>Nous tenons √† remercier <a href="https://github.com/fatso83" target="_blank" rel="noopener noreferrer">Carl-Erik Kopseng</a>, <a href="https://github.com/benjamingr" target="_blank" rel="noopener noreferrer">Benjamin Gruenbaum</a> et les autres mainteneurs de <code>@sinonjs/fake-timers</code> pour leur aide et leur patience lorsqu'ils ont travaill√© avec nous pour que cela se r√©alise&nbsp;! <em>Int√©ressant</em>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="une-nouvelle-fa√ßon-de-consommer-jest---jestglobals">Une nouvelle fa√ßon de consommer Jest - <code>@jest/globals</code><a href="https://jestjs.io/fr/blog/2020/05/05/jest-26#une-nouvelle-fa%C3%A7on-de-consommer-jest---jestglobals" class="hash-link" aria-label="Direct link to une-nouvelle-fa√ßon-de-consommer-jest---jestglobals" title="Direct link to une-nouvelle-fa√ßon-de-consommer-jest---jestglobals">‚Äã</a></h2>
<p>Jest s'est appuy√© sur les globaux populaires du framework de test Jasmine et d'autres tels que <code>describe</code>, <code>it</code>, <code>test</code> et <code>expect</code>. Bien que ce mod√®le soit largement utilis√©, de nombreuses personnes ont exprim√© leur pr√©f√©rence pour l'importation de fonctions li√©es aux tests. Pour prendre en charge ce cas d'utilisation, nous avons ajout√© un nouveau package <code>@jest/globals</code> qui peut √™tre utilis√© pour importer des fonctions de test&nbsp;: <code>import {expect, jest, test} from '@jest/globals';</code>.</p>
<p>Mises en garde&nbsp;:</p>
<ul>
<li>Actuellement, les globales existent encore dans l'environnement, mais nous allons introduire un mode pour d√©sactiver les globales √† l'avenir. De m√™me, vous ne pouvez pas utiliser <code>const jest = require('@jest/globals')</code> car vous obtiendrez des erreurs de d√©claration car la variable <code>jest</code> est toujours une globale pour le moment.</li>
<li>Il n'existe actuellement aucun moyen d'ajouter des comparateurs personnalis√©s aux d√©finitions TypeScript lors de l'utilisation de globaux comme celui-ci.</li>
<li>Bien que cela permette d'ex√©cuter des tests sans globales, cela ne permet pas d'ex√©cuter des tests sans le gestionnaire de tests de Jest pour le moment.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="support-natif-de-lesm">Support natif de l'ESM<a href="https://jestjs.io/fr/blog/2020/05/05/jest-26#support-natif-de-lesm" class="hash-link" aria-label="Direct link to Support natif de l'ESM" title="Direct link to Support natif de l'ESM">‚Äã</a></h2>
<p>Comme mentionn√© dans l'<a href="https://jestjs.io/fr/blog/2020/01/21/jest-25#ecmascript-modules-support">article du blog Jest 25</a> nous avons travaill√© sur le support natif des modules ECMAScript. Il n'est pas encore stable, mais il est pr√™t √† √™tre test√©. Nous serions ravis de recevoir vos commentaires et vos rapports de bogue ! For an overview of the current state you can check out <a href="https://github.com/jestjs/jest/issues/9430" target="_blank" rel="noopener noreferrer">this issue</a>, or browse all issues with that label <a href="https://github.com/jestjs/jest/labels/ES%20Modules" target="_blank" rel="noopener noreferrer">ES Modules</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="autres-changements-de-rupture-dans-jest-26">Autres changements de rupture dans Jest 26<a href="https://jestjs.io/fr/blog/2020/05/05/jest-26#autres-changements-de-rupture-dans-jest-26" class="hash-link" aria-label="Direct link to Autres changements de rupture dans Jest 26" title="Direct link to Autres changements de rupture dans Jest 26">‚Äã</a></h2>
<ul>
<li>Dropped support for Node 8 (<a href="https://github.com/jestjs/jest/pull/9423" target="_blank" rel="noopener noreferrer">#9423</a>)</li>
<li><code>[jest-environment-jsdom]</code> Upgrade <code>jsdom</code> to v16 (<a href="https://github.com/jestjs/jest/pull/9606" target="_blank" rel="noopener noreferrer">#9606</a>)</li>
<li><code>[jest-runtime]</code> Remove long-deprecated <code>require.requireActual</code> and <code>require.requireMock</code> methods (<a href="https://github.com/jestjs/jest/pull/9854" target="_blank" rel="noopener noreferrer">#9854</a>)</li>
<li><code>[jest-haste-map]</code> Removed <code>providesModuleNodeModules</code> (<a href="https://github.com/jestjs/jest/pull/8535" target="_blank" rel="noopener noreferrer">#8535</a>)</li>
<li><code>[jest-circus]</code> Fail tests if a test takes a done callback and have return values (<a href="https://github.com/jestjs/jest/pull/9129" target="_blank" rel="noopener noreferrer">#9129</a>)</li>
<li><code>[jest-circus]</code> Throw a proper error if a test / hooks is defined asynchronously (<a href="https://github.com/jestjs/jest/pull/8096" target="_blank" rel="noopener noreferrer">#8096</a>)</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="prenez-soin-de-vous">Prenez soin de vous<a href="https://jestjs.io/fr/blog/2020/05/05/jest-26#prenez-soin-de-vous" class="hash-link" aria-label="Direct link to Prenez soin de vous" title="Direct link to Prenez soin de vous">‚Äã</a></h2>
<p>Nous vivons tous actuellement une p√©riode d'incertitude sans pr√©c√©dent. Si vous avez des difficult√©s financi√®res, nous aimerions utiliser <a href="https://opencollective.com/jest" target="_blank" rel="noopener noreferrer">le fond collectif ouvert de Jest</a> pour aider les nouveaux et anciens contributeurs. We place <a href="https://github.com/jestjs/jest/issues?q=is%3Aissue+is%3Aopen+bounty+label%3A%22Has+Bounty%22" target="_blank" rel="noopener noreferrer">bounties on some issues</a> and are open to offering a bounty on any of our current open issues - you can mention that an issue should have a bounty in the issue or contact <a href="https://twitter.com/cpojer" target="_blank" rel="noopener noreferrer">@cpojer via private message on Twitter</a>.</p>
<p>Soyez prudent.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest 25¬†: üöÄ pose des fondations pour le futur]]></title>
            <link>https://jestjs.io/fr/blog/2020/01/21/jest-25</link>
            <guid>https://jestjs.io/fr/blog/2020/01/21/jest-25</guid>
            <pubDate>Tue, 21 Jan 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[Jest 25 pose les bases de nombreux changements majeurs √† l'avenir. Nous avons donc limit√© au maximum les changements de rupture, mais les modifications de l'architecture interne peuvent n√©cessiter une attention particuli√®re pendant la mise √† niveau. Les principaux changements sont une mise √† niveau de JSDOM de la v11 √† la v15, des tests 10-15% plus rapides, une nouvelle vue diff pour les instantan√©s p√©rim√©s et l'abandon du support de Node 6.]]></description>
            <content:encoded><![CDATA[<p>Jest 25 pose les bases de nombreux changements majeurs √† l'avenir. Nous avons donc limit√© au maximum les changements de rupture, mais les modifications de l'architecture interne peuvent n√©cessiter une attention particuli√®re pendant la mise √† niveau. Les principaux changements sont une mise √† niveau de JSDOM de la v11 √† la v15, des tests 10-15% plus rapides, une nouvelle vue diff pour les instantan√©s p√©rim√©s et l'abandon du support de Node 6.</p>
<p>There has been more than 200 commits since Jest 24.9 by more than 80 different contributors, so as always, take a look at the <a href="https://github.com/jestjs/jest/blob/main/CHANGELOG.md" target="_blank" rel="noopener noreferrer">changelog</a> for a full list of changes.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="au-revoir-node-6">Au revoir Node 6<a href="https://jestjs.io/fr/blog/2020/01/21/jest-25#au-revoir-node-6" class="hash-link" aria-label="Direct link to Au revoir Node 6" title="Direct link to Au revoir Node 6">‚Äã</a></h2>
<p>Node 6 est en fin de vie depuis le 30 avril 2019, et Jest 25 le laisse derri√®re lui. L'abandon de Node 6 signifie que nous pouvons mettre √† jour nos d√©pendances, la principale √©tant JSDOM, qui a √©t√© mise √† jour √† la version 15. La mise √† niveau signifie √©galement que nous ne devons plus transpiler la syntaxe <code>async-await</code>, ce qui se traduit √† la fois par une ex√©cution plus rapide du code et une moindre consommation de m√©moire. En prime, le code transpil√© de Jest devrait √™tre plus facile √† d√©boguer si quelqu'un se retrouve √† d√©valer cette pente.</p>
<p>M√™me si Node 8 est √©galement entr√© en fin de vie, Jest 25 continuera √† le prendre en charge afin de rendre la mise √† niveau aussi facile que possible pour ceux d'entre nous qui prennent encore en charge Node 8. Elle s'accompagne cependant de quelques compromis, comme le fait que JSDOM v16 a √©t√© publi√© sans le support de Node 8, vous devrez donc utiliser <a href="https://www.npmjs.com/package/jest-environment-jsdom-sixteen" target="_blank" rel="noopener noreferrer"><code>jest-environment-jsdom-sixteen</code></a> si vous voulez utiliser la derni√®re version.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="am√©liorations-des-performances">Am√©liorations des performances<a href="https://jestjs.io/fr/blog/2020/01/21/jest-25#am%C3%A9liorations-des-performances" class="hash-link" aria-label="Direct link to Am√©liorations des performances" title="Direct link to Am√©liorations des performances">‚Äã</a></h2>
<p>Nous avons re√ßu des rapports indiquant que Jest a ralenti au cours des deux derni√®res versions. Jest 25 comprend une mise √† jour de Micromatch, qui apporte des gains √©normes en temps de d√©marrage, et quelques corrections de bogues et ajustements de performance qui ram√®ne Jest √† la vitesse √† laquelle il √©tait pour Jest 23. Pour Jest lui-m√™me, comme mentionn√© au d√©but de cet article, cela signifie une r√©duction de 10-15% du temps d'ex√©cution des tests. Bien entendu, nous cherchons toujours √† nous am√©liorer, alors n'h√©sitez pas √† comparer les r√©sultats avec ceux des versions pr√©c√©dentes et √† signaler les probl√®mes qui pourraient survenir&nbsp;!</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="couverture-de-code-v8">Couverture de code V8<a href="https://jestjs.io/fr/blog/2020/01/21/jest-25#couverture-de-code-v8" class="hash-link" aria-label="Direct link to Couverture de code V8" title="Direct link to Couverture de code V8">‚Äã</a></h2>
<p>L'instrumentation de couverture de code actuelle de Jest est aliment√©e par <code>babel-plugin-istanbul</code> qui ins√®re du code de collecte de couverture de code avant de cr√©er des rapports. Cependant, cette m√©thode est assez lente et gourmande en m√©moire, surtout pour les fichiers et les bases de code volumineux. Heureusement, V8 a une couverture de code int√©gr√©e, qui devient de plus en plus utilisable dans Node gr√¢ce au travail acharn√© de <a href="https://github.com/bcoe" target="_blank" rel="noopener noreferrer">Benjamin Coe</a> et d'autres membres des √©quipes V8 et Node.js. Jest 25 est livr√© avec un support exp√©rimental pour cela via un nouveau drapeau <code>--coverage-provider</code>. Veuillez consulter sa <a href="https://jestjs.io/fr/docs/configuration#coverageprovider-string">documentation</a> pour les avertissements et la fa√ßon de l'utiliser.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="penser-vite-et-lentement-quand-les-tests-√©chouent">Penser vite et lentement quand les tests √©chouent<a href="https://jestjs.io/fr/blog/2020/01/21/jest-25#penser-vite-et-lentement-quand-les-tests-%C3%A9chouent" class="hash-link" aria-label="Direct link to Penser vite et lentement quand les tests √©chouent" title="Direct link to Penser vite et lentement quand les tests √©chouent">‚Äã</a></h2>
<p>Les efforts inutiles pour interpr√©ter les rapports en cas d'√©chec des tests sont un frein&nbsp;:</p>
<ul>
<li>¬´&nbsp;penser rapidement&nbsp;¬ª pour reconna√Ætre les mod√®les de votre exp√©rience pass√©e</li>
<li>¬´&nbsp;penser lentement&nbsp;¬ª pour analyser les changements et d√©cider s'il s'agit de progr√®s attendus ou de r√©gressions inattendues</li>
</ul>
<p>Jest 25 ach√®ve la seconde moiti√© d'un effort commenc√© en Jest 24 pour am√©liorer tous les comparateurs&nbsp;:</p>
<ul>
<li>une ligne de description correcte, y compris les modificateurs <code>.rejects</code>, <code>.resolves</code> et <code>.not</code></li>
<li>des libell√©s concis et un alignement uniforme pour les valeurs attendues et re√ßues</li>
<li>inverse la mise en √©vidence des diff√©rences de sous-cha√Ænes lorsque attendu et re√ßu sont des cha√Ænes de caract√®res</li>
<li>nombre de lignes modifi√©es dans les diff√©rences pour savoir si c'est seulement des suppressions ou des insertions</li>
</ul>
<p>Nous remercions tout particuli√®rement le mainteneur de Jest <a href="https://github.com/pedrottimark" target="_blank" rel="noopener noreferrer">Mark Pedrotti</a> pour avoir pilot√© cet effort et son travail continu pour rendre les erreurs d'expectation aussi satisfaisantes que possible.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="couleurs-des-diff√©rences-lorsque-les-tests-de-snapshot-√©chouent">Couleurs des diff√©rences lorsque les tests de snapshot √©chouent<a href="https://jestjs.io/fr/blog/2020/01/21/jest-25#couleurs-des-diff%C3%A9rences-lorsque-les-tests-de-snapshot-%C3%A9chouent" class="hash-link" aria-label="Direct link to Couleurs des diff√©rences lorsque les tests de snapshot √©chouent" title="Direct link to Couleurs des diff√©rences lorsque les tests de snapshot √©chouent">‚Äã</a></h2>
<p>Le changement le plus √©vident pour remplacer la confusion par la confiance est la couleur des lignes de changement dans les diff√©rences lorsque les tests snapshot √©chouent&nbsp;:</p>
<ul>
<li><code>- Snapshot</code> passe du vert au <strong>magenta</strong></li>
<li><code>+ Received</code> passe du rouge au <strong>bleu sarcelle</strong> sur fond cyan/aqua</li>
</ul>
<p>Exemples de rapports de tests (avant √† gauche et apr√®s √† droite)</p>
<ol>
<li>Le nombre de lignes modifi√©es confirme votre premi√®re impression&nbsp;: dans quel sens le snapshot a-t-il chang√© (c'est-√†-dire, lignes supprim√©es ou ins√©r√©es)</li>
</ol>
<p><img loading="lazy" alt="snapshot-insert-lines" src="https://jestjs.io/fr/assets/images/25-snapshot-insert-lines-8168b88f07172d72e4d2cd0e05d200f1.png" width="1800" height="532" class="img_SS3x"></p>
<ol start="2">
<li>Les couleurs de fond attirent vos yeux pour comparer les lignes modifi√©es adjacentes</li>
</ol>
<p><img loading="lazy" alt="snapshot-change-lines" src="https://jestjs.io/fr/assets/images/25-snapshot-change-lines-d42906add66e08bb7c0ffffbca9a44bc.png" width="1800" height="504" class="img_SS3x"></p>
<ol start="3">
<li>Les couleurs de fond vous aident √©galement √† voir quels tests <code>toThrow</code> n√©cessitent une d√©cision sur la mise √† jour ou non du snapshot</li>
</ol>
<p><img loading="lazy" alt="snapshot-change-substrings" src="https://jestjs.io/fr/assets/images/25-snapshot-change-substrings-0798d37f2f603ec43b57145cddc1247b.png" width="1800" height="168" class="img_SS3x"></p>
<p>Voici quelques raisons pour lesquelles nous avons choisi des couleurs uniques&nbsp;:</p>
<ul>
<li>Pour 95 % des personnes qui ont une vision compl√®te des couleurs, elles peuvent reconna√Ætre rapidement les rapports provenant de tests snapshot par rapport √† tous les autres comparateurs.</li>
<li>Cela r√©sout le conflit direct entre la signification du vert/rouge dans les tests Jest et le rouge/vert dans la r√©vision du code.</li>
<li>Contrairement √† l'inversion rouge/vert qui sugg√®re que la mise √† jour est la d√©cision par d√©faut, ceci sugg√®re que les diff√©rences n√©cessitent un examen plus attentif pour une √©ventuelle r√©gression dans les √©checs des tests snapshot locaux que dans la r√©vision du code (lorsque les probl√®mes ont d√©j√† √©t√© corrig√©s).</li>
</ul>
<p>La diff√©rence de teinte entre le magenta √† 300¬∞ et le sarcelle/cyan/aqua √† 180¬∞ donne une meilleure accessibilit√© √† la vision des couleurs et la teinte de fond claire pour les lignes modifi√©es donne un contraste coh√©rent sur les th√®mes clairs et fonc√©s.</p>
<p>If you maintain a command line tool, you might find inspiration to improve its accessibility in <a href="https://github.com/jestjs/jest/pull/9132" target="_blank" rel="noopener noreferrer">#9132</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="prise-en-charge-des-modules-ecmascript">Prise en charge des modules ECMAScript<a href="https://jestjs.io/fr/blog/2020/01/21/jest-25#prise-en-charge-des-modules-ecmascript" class="hash-link" aria-label="Direct link to Prise en charge des modules ECMAScript" title="Direct link to Prise en charge des modules ECMAScript">‚Äã</a></h2>
<p>Node 13 a un support ESM non signal√©, et nous avons commenc√© √† travailler un tout petit peu vers un support natif dans Jest. Jest 25 inclut le support pour les fichiers de configuration <code>jest.config.cjs</code> et <code>jest.config.mjs</code>, mais les tests eux-m√™mes ne peuvent pas encore √™tre √©crits en utilisant l'ESM sans quelque chose comme Babel ou TypeScript qui le transforme en CJS.</p>
<p>Les API que Jest utilisera sont encore marqu√©es et exp√©rimentales, donc ne vous attendez pas √† un support imm√©diat. <a href="https://github.com/nodejs/modules" target="_blank" rel="noopener noreferrer">L'√©quipe des modules Node.js</a> travaille activement sur ces API, et nous garderons un ≈ìil sur l'√©volution de la situation et nous les exp√©rimenterons afin de pouvoir fournir des retours. You can subscribe to <a href="https://github.com/jestjs/jest/issues/9430" target="_blank" rel="noopener noreferrer">this issue</a> to get any updates about the implementation status in Jest.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="autres-am√©liorations-et-mises-√†-jour">Autres am√©liorations et mises √† jour<a href="https://jestjs.io/fr/blog/2020/01/21/jest-25#autres-am%C3%A9liorations-et-mises-%C3%A0-jour" class="hash-link" aria-label="Direct link to Autres am√©liorations et mises √† jour" title="Direct link to Autres am√©liorations et mises √† jour">‚Äã</a></h2>
<ul>
<li>Jest has passed <a href="https://github.com/jestjs/jest/graphs/contributors" target="_blank" rel="noopener noreferrer">1000 unique contributors</a>. C'est une √©tape incroyable&nbsp;! Merci √† tous ceux qui nous aident √† rendre les tests aussi agr√©ables que possible.</li>
<li>Gr√¢ce au membre de la communaut√© <a href="https://github.com/JoshRosenstein" target="_blank" rel="noopener noreferrer">Josh Rosenstein</a>, Jest prend d√©sormais en charge le <code>BigInt</code> dans la plupart des comparateurs, tels que <code>toBeGreaterThan</code>. Jest comprend √©galement les litt√©raux bigint imm√©diatement.</li>
<li>La fonctionnalit√© de Jest <code>--detect-leaks</code> a √©t√© d√©faillante pour Node 12 et plus r√©cent - ceci a √©t√© corrig√© dans Jest 25.</li>
<li>Comme annonc√© dans l'article du blog de Jest 24, la base de code de Jest a √©t√© r√©√©crite en TypeScript - ce travail a √©t√© achev√© dans Jest 24.3. Ainsi, si vous utilisez l'une des parties individuelles de Jest, vous devriez b√©n√©ficier d'une excellente int√©gration avec l'IDE. Pour l'avenir, nous voulons vraiment faire en sorte que les simulations de Jest jouent mieux avec les syst√®mes de type, et nous aimerions que la communaut√© nous aide √† cet √©gard. Please chime in <a href="https://github.com/jestjs/jest/issues/7832" target="_blank" rel="noopener noreferrer">here</a> with ideas and send PRs! Nous allons √©galement √©tudier le d√©placement des typages pour l'utilisation de Jest en tant qu'ex√©cuteur de tests de DefinitelyTyped vers Jest lui-m√™me.</li>
<li>Le paquet <code>jest-diff</code> exporte maintenant des fonctions comme <code>diffLinesUnified</code> et <code>diffStringsUnified</code> qui ont des options de configuration, afin que d'autres applications puissent formater les diff√©rences d'une mani√®re personnalis√©e. Pour plus d'informations et d'exemples de code, consultez son nouveau fichier <code>README.md</code> dans le d√©p√¥t de Jest ou sur les d√©p√¥ts de paquets.</li>
<li>Gr√¢ce √† un membre de la communaut√© <a href="https://github.com/WeiAnAn" target="_blank" rel="noopener noreferrer">Wei An Yen</a>, Jest ne mettra plus en √©vidence les comparateurs asym√©triques passants dans les erreurs d'expectation. Il s'agit d'un probl√®me de longue date avec les comparateurs asym√©triques et nous sommes tr√®s heureux qu'il soit enfin r√©solu.</li>
<li>Pour la deuxi√®me ann√©e cons√©cutive, Jest a remport√© le plus haut prix de satisfaction de <a href="https://2019.stateofjs.com/awards/" target="_blank" rel="noopener noreferrer">State of JS</a>. Nous sommes incroyablement reconnaissants pour le soutien de la communaut√© et esp√©rons que nous pourrons tirer parti de cet √©lan pour rendre 2020 encore meilleure&nbsp;!</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="plans-pour-lavenir">Plans pour l'avenir<a href="https://jestjs.io/fr/blog/2020/01/21/jest-25#plans-pour-lavenir" class="hash-link" aria-label="Direct link to Plans pour l'avenir" title="Direct link to Plans pour l'avenir">‚Äã</a></h2>
<ul>
<li>La configuration de Jest est vaste et quelque peu maladroite - il y a souvent <em>au moins</em> deux fa√ßons de faire la m√™me chose, souvent m√™me plus. Pour Jest 26, nous esp√©rons condenser la configuration et la rendre plus pr√©visible. See this <a href="https://github.com/jestjs/jest/issues/7185" target="_blank" rel="noopener noreferrer">issue</a> for details.</li>
<li>Nous esp√©rons √©galement √™tre en mesure de fournir une API programmatique appropri√©e pour l'ex√©cution de Jest, afin de faciliter l'int√©gration dans les IDE et autres outils. Please see <a href="https://github.com/jestjs/jest/issues/5048" target="_blank" rel="noopener noreferrer">this</a> tracking issue.</li>
<li>Il y a eu un PR ouvert pour l'ajout de Lolex comme impl√©mentation des temporisateurs fictifs de Jest depuis d√©cembre 2017. Bien que nous ne l'ajoutons pas √† une API publique dans Jest 25, son support est techniquement inclus et nous cherchons comment l'exposer pour que les gens puissent le tester et l'exp√©rimenter. L'utiliser signifie que vous pouvez simuler la date et d'autres fonctions de temporisation que Jest ne prend pas en compte actuellement. Notez que cela doit √™tre consid√©r√© comme exp√©rimental, et un support API appropri√© viendra dans une version ult√©rieure. Follow <a href="https://github.com/jestjs/jest/pull/7776" target="_blank" rel="noopener noreferrer">this PR</a> for the latest updates on the status.</li>
</ul>
<p>Happy Jesting&nbsp;! üÉè</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest 24¬†: üíÖ Actualisation, polissage, facilit√© d'utilisation de TypeScript]]></title>
            <link>https://jestjs.io/fr/blog/2019/01/25/jest-24-refreshing-polished-typescript-friendly</link>
            <guid>https://jestjs.io/fr/blog/2019/01/25/jest-24-refreshing-polished-typescript-friendly</guid>
            <pubDate>Fri, 25 Jan 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[Aujourd'hui, nous sommes heureux de vous annoncer la prochaine version majeure de Jest - la version 24¬†! Quatre mois se sont √©coul√©s depuis la derni√®re version mineure, et huit mois depuis Jest 23. Cette mise √† jour est donc importante, et chacun y trouvera son compte¬†! Parmi les points forts, citons la prise en charge int√©gr√©e de TypeScript par la mise √† niveau des internes de Jest vers Babel 7, la correction de certains probl√®mes de longue date concernant l'absence de sortie de la console et les probl√®mes de performance lors du calcul de diffs importants, ainsi qu'un tout nouveau site Web √©tincelant. ‚ú®]]></description>
            <content:encoded><![CDATA[<p>Aujourd'hui, nous sommes heureux de vous annoncer la prochaine version majeure de Jest - la version 24&nbsp;! Quatre mois se sont √©coul√©s depuis la derni√®re version mineure, et huit mois depuis Jest 23. Cette mise √† jour est donc importante, et chacun y trouvera son compte&nbsp;! Parmi les points forts, citons la prise en charge int√©gr√©e de TypeScript par la mise √† niveau des internes de Jest vers Babel 7, la correction de certains probl√®mes de longue date concernant l'absence de sortie de la console et les probl√®mes de performance lors du calcul de diffs importants, ainsi qu'un tout nouveau site Web √©tincelant. ‚ú®</p>
<p>For a full list of all changes see the <a href="https://github.com/jestjs/jest/blob/main/CHANGELOG.md" target="_blank" rel="noopener noreferrer">changelog</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="nouveau-site-web">Nouveau site web<a href="https://jestjs.io/fr/blog/2019/01/25/jest-24-refreshing-polished-typescript-friendly#nouveau-site-web" class="hash-link" aria-label="Direct link to Nouveau site web" title="Direct link to Nouveau site web">‚Äã</a></h2>
<p><a href="https://twitter.com/orta" target="_blank" rel="noopener noreferrer">@orta</a> a fourni une belle refonte du site web de Jest, qui a √©t√© impl√©ment√© par les membres de la communaut√© <a href="https://twitter.com/montogeek" target="_blank" rel="noopener noreferrer">@montogeek</a> et <a href="https://github.com/brainkim" target="_blank" rel="noopener noreferrer">@brainkim</a>.</p>
<p>L'objectif de la refonte √©tait de mettre davantage en √©vidence ce qui rend Jest g√©nial, et de dissocier l'id√©e que Jest est principalement un outil pour tester les applications React - vous pouvez utiliser Jest pour toutes sortes de projets et nous voulons que cela soit √©vident. You can read more about the ideas behind the redesign in <a href="https://github.com/jestjs/jest/issues/7265" target="_blank" rel="noopener noreferrer">this issue</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="prise-en-charge-de-typescript">Prise en charge de TypeScript<a href="https://jestjs.io/fr/blog/2019/01/25/jest-24-refreshing-polished-typescript-friendly#prise-en-charge-de-typescript" class="hash-link" aria-label="Direct link to Prise en charge de TypeScript" title="Direct link to Prise en charge de TypeScript">‚Äã</a></h2>
<p>Nous avons mis √† jour Babel 7 en interne pour Jest 24, qui est fourni avec la prise en charge pour les projets TypeScript. Cela signifie que Jest peut supporter la transpilation de TypeScript hors de la bo√Æte, tant que vous configurez Babel pour l'utiliser avec <code>@babel/preset-typescript</code>. La prise en charge par d√©faut de TypeScript, similaire √† celle de Flow, pr√©sente un inconv√©nient&nbsp;: Babel ne supprimera les annotations de type que pour rendre votre code valide en JavaScript. Il <em>ne v√©rifiera pas</em> votre code.</p>
<p>Bien que Jest prenne en charge Babel 7 depuis la version 22 publi√©e en d√©cembre 2017, il a fallu utiliser un module passerelle afin de s'adapter √† la prise en charge de Babel 6 par Jest. Dans Jest 24, nous avons enti√®rement migr√© vers Babel 7, avec l'aide pr√©cieuse du membre de la communaut√© <a href="https://github.com/milesj" target="_blank" rel="noopener noreferrer">@milesj</a>. Cela signifie que la configuration est maintenant plus facile et que nous pouvons profiter des autres fonctionnalit√©s de Babel 7, comme le chargement de la configuration et la transpilation automatique des <code>modules</code>. Assurez-vous de supprimer le <code>babel-core@^7.0.0-bridge.0</code> car il n'est plus n√©cessaire maintenant.</p>
<p>Si vous voulez ex√©cuter des contr√¥les de type pendant que vous testez, vous devez utiliser <a href="https://github.com/kulshekhar/ts-jest" target="_blank" rel="noopener noreferrer"><code>ts-jest</code></a>. Vous devrez configurer le transformateur, car Jest applique par d√©faut Babel aux fichiers <code>.ts</code> (et <code>.tsx</code>). Alternativement, vous pouvez ex√©cuter <code>tsc</code> ou m√™me utiliser un ex√©cuteur Jest pour transpiler simultan√©ment votre TypeScript tout en ex√©cutant vos tests&nbsp;! Consultez <a href="https://github.com/azz/jest-runner-tsc" target="_blank" rel="noopener noreferrer"><code>jest-runner-tsc</code></a> pour plus d'informations.</p>
<p>Consultez <a href="https://jestjs.io/fr/docs/getting-started#using-typescript">les documentations</a> pour plus de d√©tails.</p>
<div class="theme-admonition theme-admonition-tip admonition_WCGJ alert alert--success"><div class="admonitionHeading_GCBg"><span class="admonitionIcon_L39b"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>astuce</div><div class="admonitionContent_pbrs"><p>If you for whatever reason cannot upgrade to Babel 7, you can still use Jest 24 with <code>babel@6</code> as long as you keep <code>babel-jest</code> at version 23.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="testtodo"><code>test.todo</code><a href="https://jestjs.io/fr/blog/2019/01/25/jest-24-refreshing-polished-typescript-friendly#testtodo" class="hash-link" aria-label="Direct link to testtodo" title="Direct link to testtodo">‚Äã</a></h2>
<p>Jest 23 had a change that made tests missing an implementation throw instead of being skipped. This change was made due to feedback that accidentally skipped tests were hard to discover and hard to track down. However, this change broke the workflow for quite a few developers who used the feature to sketch out which tests to write.</p>
<p>In Jest 24, we are addressing this issue by adding an explicit <code>test.todo</code> (inspired by the excellent AVA), which will be printed separately in the test summary. It allows you to quickly sketch out which tests you want to write and in the future, an <a href="https://eslint.org/" target="_blank" rel="noopener noreferrer">ESLint</a> rule might even be able to warn you that you have forgotten to write out some tests.</p>
<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token plain">test</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">todo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'une entr√©e invalide doit √™tre lev√©e'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">test</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">todo</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'les options manquantes doivent √™tre normalis√©es'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img loading="lazy" alt="test.todo" src="https://jestjs.io/fr/assets/images/24-todo-c06adf4108c116aa230143cb8a147ae3.png" width="2324" height="1422" class="img_SS3x"></p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="messages-dassertion-am√©lior√©s">Messages d'assertion am√©lior√©s<a href="https://jestjs.io/fr/blog/2019/01/25/jest-24-refreshing-polished-typescript-friendly#messages-dassertion-am%C3%A9lior%C3%A9s" class="hash-link" aria-label="Direct link to Messages d'assertion am√©lior√©s" title="Direct link to Messages d'assertion am√©lior√©s">‚Äã</a></h2>
<p>When tests fail, you need to make confident and correct decisions which changes are expected progress and which changes are unexpected regressions. It is especially important not to miss a few regressions hidden among much progress. Jest 24 makes reports when assertions fail more clear and concise for several matchers. Because the effort will continue in Jest 25, you might notice some temporary inconsistencies. If your tests never fail, then you won't get to see them - for the rest of us, it'll be easier to debug why something isn't working as expected. Thanks for the hard work by <a href="https://twitter.com/ittordepam" target="_blank" rel="noopener noreferrer">@ittordepam</a> and other contributors from the community.</p>
<p>You can see these changes across all these PRs: <a href="https://github.com/jestjs/jest/pull/7621" target="_blank" rel="noopener noreferrer">7621</a>, <a href="https://github.com/jestjs/jest/pull/7557" target="_blank" rel="noopener noreferrer">7557</a>, <a href="https://github.com/jestjs/jest/pull/7448" target="_blank" rel="noopener noreferrer">7448</a>, <a href="https://github.com/jestjs/jest/pull/7325" target="_blank" rel="noopener noreferrer">7325</a>, <a href="https://github.com/jestjs/jest/pull/7241" target="_blank" rel="noopener noreferrer">7241</a>, <a href="https://github.com/jestjs/jest/pull/7152" target="_blank" rel="noopener noreferrer">7152</a>, <a href="https://github.com/jestjs/jest/pull/7125" target="_blank" rel="noopener noreferrer">7125</a>, <a href="https://github.com/jestjs/jest/pull/7107" target="_blank" rel="noopener noreferrer">7107</a>, <a href="https://github.com/jestjs/jest/pull/6961" target="_blank" rel="noopener noreferrer">6961</a>.</p>
<p>Examples:</p>
<p>Failing assertion</p>
<p><img loading="lazy" alt="failing assertion" src="https://jestjs.io/fr/assets/images/24-assertion-error-424a6b04bd7012af7d80419981d553d4.png" width="1844" height="1246" class="img_SS3x"></p>
<p>Type mismatch</p>
<p><img loading="lazy" alt="different types" src="https://jestjs.io/fr/assets/images/24-different-types-6cdc48fef8c458eeb7b804ba60f4661e.png" width="1844" height="1246" class="img_SS3x"></p>
<p>Mock function not called</p>
<p><img loading="lazy" alt="mock functions" src="https://jestjs.io/fr/assets/images/24-mock-function-c93fb0afe32cea366976c870d89d9309.png" width="1844" height="1246" class="img_SS3x"></p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="r√©paration-de-vieilles-douleurs">R√©paration de vieilles douleurs<a href="https://jestjs.io/fr/blog/2019/01/25/jest-24-refreshing-polished-typescript-friendly#r%C3%A9paration-de-vieilles-douleurs" class="hash-link" aria-label="Direct link to R√©paration de vieilles douleurs" title="Direct link to R√©paration de vieilles douleurs">‚Äã</a></h2>
<p>We've fixed a couple of really old issues in this release.</p>
<p>The first one we'd like to highlight is <code>console.log</code> statements going missing. Jest intercepts and collects all logs in order to give you a stack trace to them, as well as provide them to reporters so you can handle them however you want. However, this has led to an issue where they have simply been missing in certain edge cases. Luckily for Jest 24, <a href="https://twitter.com/spion" target="_blank" rel="noopener noreferrer">@spion</a> has <a href="https://github.com/jestjs/jest/pull/6871" target="_blank" rel="noopener noreferrer">stepped up</a> and fixed this issue. Thank you very much!</p>
<p>The second one is an issue where Jest runs out of memory if the difference in serialization of expected and received value has a huge number of insertion changes (either unexpected because of mistake in test or defect in serializer or expected because of temporary failures during test-driven development). <a href="https://twitter.com/ittordepam" target="_blank" rel="noopener noreferrer">@ittordepam</a> has <a href="https://github.com/jestjs/jest/pull/6961" target="_blank" rel="noopener noreferrer">replaced</a> the previous diffing algorithm with <code>diff-sequences</code> package, which should fix this issue because it uses the theoretical minimum amount of memory. It opens up possibility for word-diffs in the future, similar to what <a href="https://git-scm.com/docs/git-diff#git-diff---word-diffltmodegt" target="_blank" rel="noopener noreferrer">git provides</a>. Please see <a href="https://github.com/jestjs/jest/pull/4619" target="_blank" rel="noopener noreferrer">this PR</a> and don't hesitate to reach out if you want to help make that happen!</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="autres-faits-marquants">Autres faits marquants<a href="https://jestjs.io/fr/blog/2019/01/25/jest-24-refreshing-polished-typescript-friendly#autres-faits-marquants" class="hash-link" aria-label="Direct link to Autres faits marquants" title="Direct link to Autres faits marquants">‚Äã</a></h2>
<ul>
<li>Nous avons √©galement apport√© quelques am√©liorations pour <code>globalSetup</code> et <code>globalTeardown</code> - la transformation du code leur sera appliqu√©e de mani√®re similaire √† <code>setupFiles</code> et ils sont d√©sormais pris en charge en tant que partie int√©grante des <code>projects</code>.</li>
<li>You can <a href="https://github.com/jestjs/jest/pull/6143" target="_blank" rel="noopener noreferrer">configure</a> Jest's snapshot location, this is mainly useful if you are building tools which use Jest in a larger build process.</li>
<li>Une bizarrerie de la CLI de Jest a √©t√© que si certains drapeaux et options ont √©t√© ¬´&nbsp;camel cas√©s&nbsp;¬ª (comme <code>runInBand</code>), d'autres ne l'ont pas √©t√© (comme <code>no-cache</code>). Dans Jest 24, les deux sont reconnus, ce qui signifie que vous pouvez √©crire vos arguments CLI comme vous le souhaitez.</li>
<li>Nous avons renomm√© <code>setupTestFrameworkScriptFile</code> en <code>setupFilesAfterEnv</code>, et nous l'avons converti en tableau. Nous esp√©rons que cela rendra les options plus claires. Nous avons pr√©vu de remanier encore la configuration dans la prochaine version majeure, voir le paragraphe dans la section ci-dessous.</li>
<li>Pour r√©duire la quantit√© de magie que Jest effectue pour ¬´&nbsp;juste fonctionner‚Ñ¢&nbsp;¬ª, dans cette version nous avons d√©cid√© de laisser tomber l'injection automatique de <code>regenerator-runtime</code>, qui est parfois utilis√© dans le code async compil√©. L'inclusion de <code>regenerator-runtime</code> n'est pas toujours n√©cessaire et nous pensons que c'est √† l'utilisateur de l'inclure si c'est n√©cessaire. Si vous utilisez <code>@babel/preset-env</code> avec <code>targets</code>, d√©finissez une version moderne de Node (par exemple Node 6+) vous n'aurez pas besoin de l'inclure. Veuillez consulter nos <a href="https://jestjs.io/fr/docs/getting-started#using-babel">docs de l'utilisation de Babel</a> pour plus d'informations.</li>
<li>Node.js 10 a fourni un module exp√©rimental <a href="https://nodejs.org/api/worker_threads.html" target="_blank" rel="noopener noreferrer">appel√© <code>worker_threads</code></a>, qui est similaire aux threads Worker dans le navigateur. <code>jest-worker</code>, une partie de la <a href="https://jestjs.io/fr/docs/jest-platform">plateforme Jest</a>, sera en mesure d'utiliser <code>worker_threads</code> s'il est disponible au lieu de <code>child_process</code>, ce qui le rend encore plus rapide&nbsp;! <a href="https://github.com/jestjs/jest/pull/6676" target="_blank" rel="noopener noreferrer">Benchmarks</a> show a 50% improvement. En raison de sa nature exp√©rimentale, il n'est pas activ√© lorsque vous utilisez Jest en tant qu'ex√©cuteur de test, mais vous pouvez l'utiliser dans vos propres projets aujourd'hui&nbsp;! Nous pr√©voyons de l'activer par d√©faut lorsqu'il sera sorti du statut exp√©rimental dans Node.js.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="changements-de-rupture">Changements de rupture<a href="https://jestjs.io/fr/blog/2019/01/25/jest-24-refreshing-polished-typescript-friendly#changements-de-rupture" class="hash-link" aria-label="Direct link to Changements de rupture" title="Direct link to Changements de rupture">‚Äã</a></h2>
<p>While all breaking changes are listed in the <a href="https://github.com/jestjs/jest/blob/main/CHANGELOG.md" target="_blank" rel="noopener noreferrer">changelog</a>, there's a few of them that are worth highlighting:</p>
<ul>
<li>Nous avons fait une mise √† jour vers Micromatch 3. Bien que cela n'affecte pas tous les utilisateurs, cette version est plus stricte dans l'analyse des globs que la version 2, qui est utilis√©e dans Jest 23. Veuillez lire <a href="https://github.com/micromatch/micromatch/issues/133#issuecomment-404211484" target="_blank" rel="noopener noreferrer">ce probl√®me</a> et les issues li√©es pour des exemples de globs invalides au cas o√π vous auriez des probl√®mes.</li>
<li>Nous avons supprim√© les restes de code qui √©taient n√©cessaires pour Node 4. Il √©tait auparavant techniquement possible d'ex√©cuter Jest 23 sur Node 4 - ce n'est plus possible sans polyfill et transpilation.</li>
<li>Quelques changements dans la s√©rialisation des fonctions simul√©es dans les snapshots - assurez-vous de v√©rifier vos snapshots mis √† jour apr√®s la mise √† jour de la version. Related <a href="https://github.com/jestjs/jest/pull/6381" target="_blank" rel="noopener noreferrer">PR</a>.</li>
<li>Jest n'injecte plus automatiquement <code>regenerator-runtime</code> - si vous obtenez des erreurs √† ce sujet, assurez-vous de configurer Babel pour qu'il transpile correctement les fonctions <code>async</code> en utilisant par exemple <code>@babel/preset-env</code>. Related <a href="https://github.com/jestjs/jest/pull/7595" target="_blank" rel="noopener noreferrer">PR</a>.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="lavenir">L'avenir<a href="https://jestjs.io/fr/blog/2019/01/25/jest-24-refreshing-polished-typescript-friendly#lavenir" class="hash-link" aria-label="Direct link to L'avenir" title="Direct link to L'avenir">‚Äã</a></h2>
<p>We are incredibly humbled by the results in <a href="https://2018.stateofjs.com/awards/" target="_blank" rel="noopener noreferrer">State Of JS 2018</a>, where Jest won the ‚ÄúHighest Satisfaction‚Äù award. Another huge thing to happen in 2018 was in October, when Jest passed 2 million weekly downloads for the first time. Thank you.</p>
<p>We are very thankful for the trust in us shown by the community, and hope to build on it in the future. We will ensure Jest 24 and future releases will continue to build upon this incredible foundation, and continue to be an integral part of JavaScript developers' toolkits.</p>
<p>This has been the first release where we have explored the idea of using our Open Collective funding to create bug bounties. This worked well in getting non-core developers involved in the implementation of the new landing page, and we're optimistic for a long running bug where Jest globals <a href="https://github.com/jestjs/jest/issues/2549" target="_blank" rel="noopener noreferrer">are mismatched</a> from Node globals. We'd like to do more, if you have a pet bug that's a good candidate for our bounty program, please let us know. In the meantime, you can find all the tickets with a bounty via <a href="https://github.com/jestjs/jest/labels/Has%20Bounty" target="_blank" rel="noopener noreferrer">the issue label</a>.</p>
<p>We have already started to make plans for the next release of Jest 25, with the biggest planned feature being an overhaul of our configuration, which is pretty hard to grok, mainly because of overlapping option and mixing globs and regular expressions. Feedback on how you want Jest's configuration to look is very much welcome, and can be submitted in <a href="https://github.com/jestjs/jest/issues/7185" target="_blank" rel="noopener noreferrer">this issue</a>.</p>
<p>You might also have heard that we are planning to migrate the code base from Flow to TypeScript. We are hopeful that this migration will enable even more contributors to jump in and help make 2019 even better for JavaScript testing. üöÄ The plan is to land this in a minor release in the not too distant future. Feedback on this choice can be added to <a href="https://github.com/jestjs/jest/pull/7554" target="_blank" rel="noopener noreferrer">the RFC</a>.</p>
<p>Lastly, if you've ever wondered about how Jest is built, <a href="https://twitter.com/cpojer" target="_blank" rel="noopener noreferrer">@cpojer</a> has recorded a video with an architectural overview of how Jest is put together under the hood. Feel free to reach out if you have any further questions about it. The video is available on our <a href="https://jestjs.io/fr/docs/architecture">website</a>.</p>
<p>Happy Jesting&nbsp;! üÉè</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Soutien de Jest Open Source]]></title>
            <link>https://jestjs.io/fr/blog/2018/06/27/supporting-jest-open-source</link>
            <guid>https://jestjs.io/fr/blog/2018/06/27/supporting-jest-open-source</guid>
            <pubDate>Wed, 27 Jun 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[Jest est maintenu par une communaut√© de contributeurs open source et d'employ√©s de Facebook.]]></description>
            <content:encoded><![CDATA[<p>Jest est maintenu par une communaut√© de contributeurs open source et d'employ√©s de Facebook.</p>
<p>Nos contributeurs open source travaillent au nom de la communaut√© pour cr√©er de nouvelles fonctionnalit√©s, corriger les bogues et maintenir l'arri√©r√© des probl√®mes. Les employ√©s de Facebook font de m√™me, concentr√© sur les probl√®mes sp√©cifiques √† l'√©chelle de Facebook, et ex√©cutent toutes les publications propos√©es sur l'√©norme suite de test de Facebook avant de les publier.</p>
<p>Nous faisons tous notre partie pour rendre les tests agr√©ables.</p>
<p>Lors du sommet de Jest, nous avons annonc√© le Jest Open Collective. C'est notre fa√ßon d'aider √† soutenir les efforts de la communaut√© Jest open source. <strong>Pour √™tre absolument clair : les employ√©s de Facebook ne peuvent pas b√©n√©ficier du Jest Open Collective.</strong> Le seul but du collectif est de soutenir le c√¥t√© open source de la communaut√© Jest.</p>
<p>Dans ce poste, nous d√©crirons ce qu'est l'Open Collective Jest, la structure et les buts que nous avons.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="the-jest-open-collective">The Jest Open Collective<a href="https://jestjs.io/fr/blog/2018/06/27/supporting-jest-open-source#the-jest-open-collective" class="hash-link" aria-label="Direct link to The Jest Open Collective" title="Direct link to The Jest Open Collective">‚Äã</a></h2>
<p><img loading="lazy" alt="Image de banni√®re pour Jest Open Collective" src="https://jestjs.io/fr/assets/images/collective-fcec198ec20af7c295dbdab660e972b5.png" width="1869" height="800" class="img_SS3x"></p>
<p>Open Collective est une plateforme de gestion de groupes de personnes de mani√®re transparente. Jest rejoint des projets comme <a href="https://opencollective.com/webpack" target="_blank" rel="noopener noreferrer">webpack</a>, <a href="https://opencollective.com/babel" target="_blank" rel="noopener noreferrer">Babel</a>, <a href="https://opencollective.com/mochajs" target="_blank" rel="noopener noreferrer">Mocha</a>, <a href="https://opencollective.com/preact" target="_blank" rel="noopener noreferrer">Preact</a>, <a href="https://opencollective.com/vuejs" target="_blank" rel="noopener noreferrer">Vue</a>, et bien plus encore en soutenant la communaut√© open source √† travers la plateforme Open Collective.</p>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="what-is-the-jest-open-collective">What is the Jest Open Collective<a href="https://jestjs.io/fr/blog/2018/06/27/supporting-jest-open-source#what-is-the-jest-open-collective" class="hash-link" aria-label="Direct link to What is the Jest Open Collective" title="Direct link to What is the Jest Open Collective">‚Äã</a></h3>
<p>Le Jest Open Collective est un groupe de contributeurs open source qui op√®rent en toute transparence √†&nbsp;:</p>
<ul>
<li>Recevoir des fonds des donateurs et des sponsors</li>
<li>Approuver les d√©penses soumises par la communaut√©</li>
<li>Donner √† tout le monde la visibilit√© du budget</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="what-is-the-structure-of-the-collective">What is the structure of the collective<a href="https://jestjs.io/fr/blog/2018/06/27/supporting-jest-open-source#what-is-the-structure-of-the-collective" class="hash-link" aria-label="Direct link to What is the structure of the collective" title="Direct link to What is the structure of the collective">‚Äã</a></h3>
<p>Le Jest Open Collective est actuellement g√©r√© par trois contributeurs principaux non-Facebook de la communaut√© Open Source&nbsp;:</p>
<ul>
<li><a href="https://twitter.com/thymikee" target="_blank" rel="noopener noreferrer">Michal Pierzchala</a></li>
<li><a href="https://github.com/simenb" target="_blank" rel="noopener noreferrer">Simen Bekkhus</a></li>
<li><a href="https://twitter.com/rickhanlonii" target="_blank" rel="noopener noreferrer">Rick Hanlon</a></li>
</ul>
<p>Michal est un contributeur actif de Jest depuis septembre 2016, Simen a rejoint l'√©quipe principale en juin 2017, et Rick a rejoint l'√©quipe en janvier. Ils sont charg√©s de d√©finir le budget, d'approuver les d√©penses et de g√©rer les administrateurs du collectif. Nous avons choisi de conserver <a href="https://twitter.com/cpojer" target="_blank" rel="noopener noreferrer">Christoph Nakazawa</a> en tant que conseiller.</p>
<p>Il y a deux niveaux de soutien pour le collectif&nbsp;: le donateur et le sponsor.</p>
<h4 class="anchor anchorWithStickyNavbar_JmGV" id="backers">Backers<a href="https://jestjs.io/fr/blog/2018/06/27/supporting-jest-open-source#backers" class="hash-link" aria-label="Direct link to Backers" title="Direct link to Backers">‚Äã</a></h4>
<p>Backers of the collective are individuals contributing at least $2/month. Nous inclurons une liste de donateurs sur la page d'accueil de Jest, le README sur la page github/yarn/npm, et la page des contributeurs.</p>
<h4 class="anchor anchorWithStickyNavbar_JmGV" id="sponsors">Sponsors<a href="https://jestjs.io/fr/blog/2018/06/27/supporting-jest-open-source#sponsors" class="hash-link" aria-label="Direct link to Sponsors" title="Direct link to Sponsors">‚Äã</a></h4>
<p>Sponsors of the collective are individuals and organizations contributing at least $100/month. Nous placerons les logos des sponsors avec un lien vers leur site sur la page d'accueil de Jest, le README sur la page github/yarn/npm, et la page des contributeurs.</p>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="what-is-the-goal-of-the-collective">What is the goal of the collective<a href="https://jestjs.io/fr/blog/2018/06/27/supporting-jest-open-source#what-is-the-goal-of-the-collective" class="hash-link" aria-label="Direct link to What is the goal of the collective" title="Direct link to What is the goal of the collective">‚Äã</a></h3>
<p>Le but du collectif est de soutenir le travail des contributeurs open source pour Jest afin de rendre les tests agr√©ables.</p>
<p>Pour atteindre cet objectif, nous utiliserons les fonds pour&nbsp;:</p>
<ul>
<li>Couvrir les frais de d√©placement des conf√©renciers</li>
<li>Organiser des √©v√©nements et des meetups</li>
<li>Imprimer et distribuer des articles promotionnels</li>
<li>D√©velopper et financer un programme de prime aux bogues (TBD)</li>
</ul>
<p>Ce n'est que le d√©but et nous nous engageons √† y rem√©dier. If you have ideas on how else we can support the community, or feedback on the structure of the collective, please reach out to us on <a href="https://twitter.com/jestjs_" target="_blank" rel="noopener noreferrer">twitter</a>!</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="thank-you">Thank You<a href="https://jestjs.io/fr/blog/2018/06/27/supporting-jest-open-source#thank-you" class="hash-link" aria-label="Direct link to Thank You" title="Direct link to Thank You">‚Äã</a></h2>
<p>Enfin, merci √† tous ceux qui contribuent √† la communaut√© Jest et √† l'open source en g√©n√©ral. Nous sommes incroyablement reconnaissants d'avoir la possibilit√© de travailler ensemble √† l'am√©lioration des tests JavaScript.</p>
<p>L'√©quipe principale de Jest aimerait √©galement rendre un remerciement sp√©cial √† Facebook Open Source pour avoir conduit √† la cr√©ation de ce collectif.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest 23¬†: üî• Des tests rapides et agr√©ables]]></title>
            <link>https://jestjs.io/fr/blog/2018/05/29/jest-23-blazing-fast-delightful-testing</link>
            <guid>https://jestjs.io/fr/blog/2018/05/29/jest-23-blazing-fast-delightful-testing</guid>
            <pubDate>Tue, 29 May 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[Aujourd'hui, nous sommes heureux d'annoncer Jest 23, notre plus grande version majeure √† ce jour¬†! Avec plus de 100 contributeurs, nous avons livr√© une tonne de fonctionnalit√©s et de corrections de bugs. Merci √† tous les membres de la communaut√© qui ont contribu√© √† rendre les tests JavaScript agr√©ables.]]></description>
            <content:encoded><![CDATA[<p>Aujourd'hui, nous sommes heureux d'annoncer Jest 23, notre plus grande version majeure √† ce jour&nbsp;! Avec plus de 100 contributeurs, nous avons livr√© une tonne de fonctionnalit√©s et de corrections de bugs. Merci √† tous les membres de la communaut√© qui ont contribu√© √† rendre les tests JavaScript agr√©ables.</p>
<p>We would also like to welcome both <a href="https://babeljs.io/" target="_blank" rel="noopener noreferrer">Babel</a> and <a href="https://webpack.js.org/" target="_blank" rel="noopener noreferrer">webpack</a> to the Jest community! After converting from Mocha to Jest 23 Beta, webpack saw their total test suite time reduced 6x from over 13 minutes to 2 minutes 20 seconds. <a href="https://twitter.com/search?q=%23blazingmeansgood" target="_blank" rel="noopener noreferrer">#blazingmeansgood</a></p>
<p>Voici quelques-uns des points marquants et des changements de rupture de Jest 23.</p>
<p>For a full list see the <a href="https://github.com/jestjs/jest/blob/main/CHANGELOG.md" target="_blank" rel="noopener noreferrer">changelog</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="mode-snapshot-interactif">Mode snapshot interactif<a href="https://jestjs.io/fr/blog/2018/05/29/jest-23-blazing-fast-delightful-testing#mode-snapshot-interactif" class="hash-link" aria-label="Direct link to Mode snapshot interactif" title="Direct link to Mode snapshot interactif">‚Äã</a></h2>
<p>Nous avons ajout√© une nouvelle option au menu de surveillance par d√©faut que nous appelons le mode de snapshot interactif. Ce nouveau mode vous permet de passer en revue chaque snapshot d√©faillant dans chaque suite d√©faillante pour revoir vos snapshots d√©faillants et choisir de les mettre √† jour ou de les ignorer individuellement.</p>
<p><img loading="lazy" alt="Interactive snapshot mode in action" src="https://jestjs.io/fr/assets/images/23-interactive-3b2c2f9ec0fecc4effbc03fbc3ad1963.gif" width="1004" height="732" class="img_SS3x"></p>
<p>See the Interactive Snapshot Mode docs <a href="https://jestjs.io/fr/docs/snapshot-testing#interactive-snapshot-mode">here</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="snapshot-property-matchers">Snapshot Property Matchers<a href="https://jestjs.io/fr/blog/2018/05/29/jest-23-blazing-fast-delightful-testing#snapshot-property-matchers" class="hash-link" aria-label="Direct link to Snapshot Property Matchers" title="Direct link to Snapshot Property Matchers">‚Äã</a></h2>
<p>Often, objects you're snapshotting contain generated values like Dates and IDs. Jest now allows you to pass properties to the snapshot matcher which specify the structure of the data instead of the specific values. These property matchers are then verified before serializing the matcher type (instead of the value), giving you consistent snapshot results across test runs.</p>
<p><img loading="lazy" alt="Snapshot Property Matchers" src="https://jestjs.io/fr/assets/images/23-snapshot-matchers-aa63fd590f453650a67eaa0d99f678e3.png" width="2236" height="1177" class="img_SS3x"></p>
<p>See the updated <code>toMatchSnapshot</code> <a href="https://jestjs.io/fr/docs/expect#tomatchsnapshotpropertymatchers-snapshotname">docs</a> or the Property Matcher <a href="https://jestjs.io/fr/docs/snapshot-testing#property-matchers">guide</a> for more information.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="custom-asynchronous-matchers">Custom Asynchronous matchers<a href="https://jestjs.io/fr/blog/2018/05/29/jest-23-blazing-fast-delightful-testing#custom-asynchronous-matchers" class="hash-link" aria-label="Direct link to Custom Asynchronous matchers" title="Direct link to Custom Asynchronous matchers">‚Äã</a></h2>
<p>We now support asynchronous matchers with <code>expect.extends</code>! Async matchers return a Promise so that you can <code>await</code> for the matcher to resolve. As an example:</p>
<p><img loading="lazy" alt="Custom asynchronous matchers in action" src="https://jestjs.io/fr/assets/images/23-async-matchers-91183e14fbce836540d2079f145dbe97.png" width="2230" height="876" class="img_SS3x"></p>
<p>Docs available <a href="https://jestjs.io/fr/docs/expect#expectextendmatchers">here</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="custom-asymmetric-matchers">Custom Asymmetric Matchers<a href="https://jestjs.io/fr/blog/2018/05/29/jest-23-blazing-fast-delightful-testing#custom-asymmetric-matchers" class="hash-link" aria-label="Direct link to Custom Asymmetric Matchers" title="Direct link to Custom Asymmetric Matchers">‚Äã</a></h2>
<p>Asymmetric matchers are a great tool to use when you only care about asymmetric equality. For example, when the left side is expected to be an object with some subset of properties on the right, instead of an exact match. Jest provides a number of asymmetric matchers out of the box, and in this release we're introducing Custom Asymmetric Matchers.</p>
<p><img loading="lazy" alt="Custom asymmetric matchers in action" src="https://jestjs.io/fr/assets/images/23-asymmetric-matchers-12a593708f9e4cec91225d63c49e959e.png" width="2230" height="1012" class="img_SS3x"></p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="jest-each">Jest Each<a href="https://jestjs.io/fr/blog/2018/05/29/jest-23-blazing-fast-delightful-testing#jest-each" class="hash-link" aria-label="Direct link to Jest Each" title="Direct link to Jest Each">‚Äã</a></h2>
<p><a href="https://twitter.com/mattphillipsio" target="_blank" rel="noopener noreferrer">@mattphillipsio</a> has donated the <code>jest-each</code> package to Jest Core (thanks Matt!). <code>jest-each</code> is a library inspired by <a href="https://yarnpkg.com/en/package/mocha-each" target="_blank" rel="noopener noreferrer"><code>mocha-each</code></a> and <a href="http://spockframework.org/spock/docs/1.1/data_driven_testing.html#data-tables" target="_blank" rel="noopener noreferrer">Spock Data Tables</a> which allows you to define a table of test cases, and then run a test for each row with the specified column values. We support both array types and template literals for all flavors of <code>describe</code> and <code>test</code>. Docs are available <a href="https://jestjs.io/fr/docs/api#testeachtable-name-fn">here</a>, and for those not on Jest 23 yet, we're still publishing <a href="https://yarnpkg.com/en/package/jest-each" target="_blank" rel="noopener noreferrer"><code>jest-each</code></a> separately!</p>
<p><img loading="lazy" alt="jest-each in action" src="https://jestjs.io/fr/assets/images/23-jest-each-3d938745102750ad491139ea700842ab.png" width="2230" height="1304" class="img_SS3x"></p>
<p>Huge shout out to Prettier for <a href="https://github.com/prettier/prettier/pull/4423" target="_blank" rel="noopener noreferrer">fixing</a> the table formatting so quickly (<a href="https://prettier.io/blog/2018/05/23/1.13.0.html#format-new-describeeach-table-in-jest-23-4423-by-ikatyang" target="_blank" rel="noopener noreferrer">see Prettier 1.13</a>)!</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="new-matchers">New Matchers<a href="https://jestjs.io/fr/blog/2018/05/29/jest-23-blazing-fast-delightful-testing#new-matchers" class="hash-link" aria-label="Direct link to New Matchers" title="Direct link to New Matchers">‚Äã</a></h2>
<p>We only add matchers to core if we believe they will be useful to a large amount of people in the Jest community, and leave the majority of matchers to the community (see <a href="https://yarnpkg.com/en/package/jest-extended" target="_blank" rel="noopener noreferrer">jest-extended</a>). Some matchers make the cut into core, and Jest 23 adds:</p>
<ul>
<li>nthCalledWith</li>
<li>toReturn</li>
<li>toReturnTimes</li>
<li>toReturnWith</li>
<li>lastReturnedWith</li>
<li>nthReturnedWith</li>
<li>toStrictEqual</li>
</ul>
<p><img loading="lazy" alt="New matchers in action" src="https://jestjs.io/fr/assets/images/23-new-matchers-8aaaad14f7dc524a46b99503b6ede43b.png" width="2230" height="1276" class="img_SS3x"></p>
<p>See the updated expect docs <a href="https://jestjs.io/fr/docs/expect">here</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="debug-hanging-tests">Debug Hanging Tests<a href="https://jestjs.io/fr/blog/2018/05/29/jest-23-blazing-fast-delightful-testing#debug-hanging-tests" class="hash-link" aria-label="Direct link to Debug Hanging Tests" title="Direct link to Debug Hanging Tests">‚Äã</a></h2>
<p>A common issue we see on the issue tracker relates to ‚ÄúJest‚Äù hanging after a test run. This is usually due to app code leaving handles open, preventing Jest from exiting. In the past, users have resorted to <code>--forceExit</code> to fix (not recommended).</p>
<p>To help debug these issues, we're now detecting when Jest does not exit:</p>
<p><img loading="lazy" alt="Detecting hanging tests" src="https://jestjs.io/fr/assets/images/23-hanging-before-867f8f3cfd6d67bb5ce37bf11f053749.png" width="2236" height="780" class="img_SS3x"></p>
<p>And we offer a new flag <code>--detectOpenHandles</code> to help find the open handles:</p>
<p><img loading="lazy" alt="Running detectOpenHandles" src="https://jestjs.io/fr/assets/images/23-hanging-after-4f446e62ff117f6ae7f669d56057d206.png" width="2236" height="1106" class="img_SS3x"></p>
<p>See the updated CLI docs <a href="https://jestjs.io/fr/docs/cli#detectopenhandles">here</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="watch-mode-plugins">Watch Mode Plugins<a href="https://jestjs.io/fr/blog/2018/05/29/jest-23-blazing-fast-delightful-testing#watch-mode-plugins" class="hash-link" aria-label="Direct link to Watch Mode Plugins" title="Direct link to Watch Mode Plugins">‚Äã</a></h2>
<p>We have completely rewritten the watch mode system to allow adding custom plugins to watch mode. Watch Mode Plugins now make it possible to hook into Jest events and provide custom menu options in the Watch Mode Menu. All of the default Watch Mode prompts are implemented as plugins in this system, and the docs to create your own are available <a href="https://jestjs.io/fr/docs/watch-plugins">here</a>.</p>
<p>With this change, we're also now able to bring back typeahead support as a Watch Mode Plugin via <a href="https://yarnpkg.com/en/package/jest-watch-typeahead" target="_blank" rel="noopener noreferrer">jest-watch-typeahead</a>!</p>
<p><img loading="lazy" alt="Typeahead plugin in action" src="https://jestjs.io/fr/assets/images/23-typeahead-b16e5a1f51f3b3852df9fcc508c920d1.gif" width="1001" height="731" class="img_SS3x"></p>
<p>See <a href="https://github.com/jest-community/jest-watch-typeahead" target="_blank" rel="noopener noreferrer">jest-watch-typeahead</a> for documentation and install instructions. Huge thank you to <a href="https://twitter.com/rogeliog" target="_blank" rel="noopener noreferrer">@rogeliog</a> for the new watch mode plugin system and the jest-watch-typeahead plugin!</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="changements-de-rupture">Changements de rupture<a href="https://jestjs.io/fr/blog/2018/05/29/jest-23-blazing-fast-delightful-testing#changements-de-rupture" class="hash-link" aria-label="Direct link to Changements de rupture" title="Direct link to Changements de rupture">‚Äã</a></h2>
<p>Comme pour chaque version majeure, nous apportons quelques changements de rupture pour rendre possibles des changements plus importants √† l'avenir et pour pousser l'exp√©rience de test √† un nouveau niveau. Here's a list of the biggest changes you may see:</p>
<ul>
<li><strong>Require test descriptions and functions</strong>: We're now failing tests that do not include both a function and a description.</li>
<li><strong>Remove undefined props from React snapshots</strong>: Smaller snapshots and proper React behavior.</li>
<li><strong>Remove deprecations</strong>: We removed mapCoverage since it's no longer needed. Additionally, we removed <code>jest.genMockFunction</code> and <code>jest.genMockFn</code> since these are the same as <code>jest.fn</code>.</li>
<li><strong>Add snapshot names to failures</strong>: We added the snapshot name (if provided) to the snapshot failure message so it's easier to find the snapshot that's failing.</li>
<li><strong>Replace mock timestamps</strong>: We replaced mock timestamps with invocationCallOrder since two or mocks may often have the same timestamp, making it impossible to test the call order.</li>
<li><strong>Add results to mock snapshots</strong>: We added mock function call results to snapshots so that both the calls and the results of the invocation are tracked.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="other-improvements">Other Improvements<a href="https://jestjs.io/fr/blog/2018/05/29/jest-23-blazing-fast-delightful-testing#other-improvements" class="hash-link" aria-label="Direct link to Other Improvements" title="Direct link to Other Improvements">‚Äã</a></h2>
<ul>
<li><strong>Watch mode coverage</strong>: Coverage is now limited to only the files tested in watch mode or when using <code>--onlyChanged</code> and <code>--findRelatedTests</code>.</li>
<li><strong>Version documentation</strong>: We added docs for each minor release back to Jest 22, and have removed all of the ‚ÄúRequires Jest X.X+‚Äù from the docs.</li>
<li><strong>Better snapshot summaries</strong>: We overhauled the Snapshot Summary output to make obsolete snapshots more informative.</li>
<li><strong>Better stack traces</strong>: We added stack traces to asynchronous errors, timeout errors, expect.assertions, and thrown non-errors. We're also indicating the column in the code frame!</li>
<li><strong>Better React 16 support</strong>: Adds snapshot support for <code>React.Fragment</code>, <code>React.forwardRef</code>, and <code>React.createContext</code>.</li>
<li><strong>Track mock return and throw values</strong>: Adds <code>mock.results</code> that contains the return value or thrown value for each mock call.</li>
<li><strong>Blazing üî•</strong>: We've added a blazing badge to the README to indicate that Jest is blazing good.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="jest-summit">Jest Summit<a href="https://jestjs.io/fr/blog/2018/05/29/jest-23-blazing-fast-delightful-testing#jest-summit" class="hash-link" aria-label="Direct link to Jest Summit" title="Direct link to Jest Summit">‚Äã</a></h2>
<p>Last week, the Jest Core Team met for the Jest Summit at Facebook London where worked on and released Jest 23, announced the Jest Open Collective, and gave a number of talks:</p>
<ul>
<li><strong>Christoph Nakazawa</strong> ‚Äì <a href="https://www.youtube.com/watch?v=cAKYQpTC7MA" target="_blank" rel="noopener noreferrer">Intro</a></li>
<li><strong>Aaron Abramov</strong> ‚Äì <a href="https://youtu.be/cAKYQpTC7MA?t=440" target="_blank" rel="noopener noreferrer">Writing Meaningful Tests</a></li>
<li><strong>Rick Hanlon II</strong> ‚Äì <a href="https://youtu.be/cAKYQpTC7MA?t=1881" target="_blank" rel="noopener noreferrer">Blazing Fast Snapshot Testing in Jest 23</a></li>
<li><strong>Simen Bekkhus</strong> ‚Äì <a href="https://youtu.be/cAKYQpTC7MA?t=2990" target="_blank" rel="noopener noreferrer">Jest's Delightful Error Messages</a></li>
<li><strong>Matt Phillips</strong> ‚Äì <a href="https://youtu.be/cAKYQpTC7MA?t=3852" target="_blank" rel="noopener noreferrer">Level up your Jest experience with community packages</a></li>
<li><strong>Michele Bertoli</strong> ‚Äì <a href="https://youtu.be/cAKYQpTC7MA?t=4582" target="_blank" rel="noopener noreferrer">Snapshot all the things</a></li>
<li><strong>Jordan Eldredge</strong> ‚Äì <a href="https://youtu.be/cAKYQpTC7MA?t=5185" target="_blank" rel="noopener noreferrer">Webamp: Learn by imitating</a></li>
</ul>
<p>Full talk is available <a href="https://www.youtube.com/watch?v=cAKYQpTC7MA" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>The turnout was amazing, and we were able to meet a lot of the London-based community in person. Thank you to everyone who joined us and for your continued support! Stay tuned for our next post which will outline the Jest Open Collective and the plans we have for the future.</p>
<p><em>As always, this release couldn't have been possible without you, the JavaScript community. Nous sommes incroyablement reconnaissants d'avoir la possibilit√© de travailler ensemble √† l'am√©lioration des tests JavaScript. If you'd like to contribute to Jest, please don't hesitate to reach out to us on</em> <em><a href="https://github.com/jestjs/jest" target="_blank" rel="noopener noreferrer">GitHub</a> or on</em> <em><a href="https://discord.gg/j6FKKQQrW9" target="_blank" rel="noopener noreferrer">Discord</a>.</em></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest 22¬†: Am√©liorations & ex√©cuteurs personnalis√©s]]></title>
            <link>https://jestjs.io/fr/blog/2017/12/18/jest-22</link>
            <guid>https://jestjs.io/fr/blog/2017/12/18/jest-22</guid>
            <pubDate>Mon, 18 Dec 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[Today we are announcing a new major version of Jest which refines almost all parts of Jest to provide a more solid testing foundation. Together with the Jest community we made a number of changes across the board that will help you get more out of Jest. We are also graduating the custom runners feature out of the experimental stage and added a new package, jest-worker, for parallelizing work across multiple processes. We have compiled a list of highlights below but make sure to check out the (as always) massive changelog.]]></description>
            <content:encoded><![CDATA[<p>Today we are announcing a new major version of Jest which refines almost all parts of Jest to provide a more solid testing foundation. Together with the Jest community we made a number of changes across the board that will help you get more out of Jest. We are also graduating the custom runners feature out of the experimental stage and added a new package, <code>jest-worker</code>, for parallelizing work across multiple processes. We have compiled a list of highlights below but make sure to check out the (as always) <a href="https://github.com/jestjs/jest/blob/main/CHANGELOG.md" target="_blank" rel="noopener noreferrer">massive changelog</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="good-bye-node-4--welcome-jsdom-11">Good bye Node 4 &amp; welcome JSDOM 11<a href="https://jestjs.io/fr/blog/2017/12/18/jest-22#good-bye-node-4--welcome-jsdom-11" class="hash-link" aria-label="Direct link to Good bye Node 4 &amp; welcome JSDOM 11" title="Direct link to Good bye Node 4 &amp; welcome JSDOM 11">‚Äã</a></h2>
<p>With this release we are dropping support for Node 4, mainly because one of our main dependencies, JSDOM, ended their support. Jest now comes out of the box with JSDOM 11 which features better support for SVGs, <code>requestAnimationFrame</code>, <code>URL</code> and <code>URLSearchParams</code> built in, and <a href="https://github.com/jsdom/jsdom/blob/master/Changelog.md" target="_blank" rel="noopener noreferrer">much more</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="custom-runners--easy-parallelization-with-jest-worker">Custom Runners + Easy parallelization with <code>jest-worker</code><a href="https://jestjs.io/fr/blog/2017/12/18/jest-22#custom-runners--easy-parallelization-with-jest-worker" class="hash-link" aria-label="Direct link to custom-runners--easy-parallelization-with-jest-worker" title="Direct link to custom-runners--easy-parallelization-with-jest-worker">‚Äã</a></h2>
<p>In Jest 21 we introduced the concept of custom Jest runners. Since then, Rogelio, one of Jest's core contributors, built a number of useful runners: If you have many existing tests written using another framework but you'd like to immediately benefit from Jest's features, check out <a href="https://yarnpkg.com/en/package/jest-runner-mocha" target="_blank" rel="noopener noreferrer">jest-runner-mocha</a>. If you have a large codebase that needs linting, <a href="https://twitter.com/lencioni/status/907398856756695040" target="_blank" rel="noopener noreferrer">you may get a significant speedup</a> if you run eslint within Jest using <a href="https://yarnpkg.com/en/package/jest-runner-eslint" target="_blank" rel="noopener noreferrer">jest-runner-eslint</a>.</p>
<p>To gain more of fine-grained control over heavy tasks parallelization (e.g. transforming files or crawling the file system), we designed a new library perfectly suited for the job. We developed a modern, Promise-based module with an approachable API, called <code>jest-worker</code>, that allows you to delegate to child processes those intensive functions. As <code>jest-worker</code>, like any other Jest package, is a part of the Jest platform, you can use it however you like even without ever using Jest itself. You'll find more in the documentation <a href="https://yarnpkg.com/en/package/jest-worker" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>To get a better understanding of custom runners and Jest as a platform, make sure to check out Rogelio's talk from Reactive Conf 2017: <a href="https://www.youtube.com/watch?v=NtjyeojAOBs" target="_blank" rel="noopener noreferrer">Jest as a Platform</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="codeframe-in-test-failures">Codeframe in test failures<a href="https://jestjs.io/fr/blog/2017/12/18/jest-22#codeframe-in-test-failures" class="hash-link" aria-label="Direct link to Codeframe in test failures" title="Direct link to Codeframe in test failures">‚Äã</a></h2>
<p>In order to more easily identify which assertion is failing your test, we've added a code frame showing the context where the assertion is in order to focus on your own code. See the following example test:</p>
<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#6b2e85">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'some test'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#888">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#297a29">function</span><span class="token plain"> </span><span class="token function" style="color:#6b2e85">someFunctionWhichShouldThrow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#297a29">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#297a29">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#297a29">new</span><span class="token plain"> </span><span class="token class-name">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#297a29">return</span><span class="token plain"> </span><span class="token string" style="color:#c21325">'success!'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#6b2e85">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">someFunctionWhichShouldThrow</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">toThrow</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In Jest 21, we would display the following error:</p>
<p><img loading="lazy" alt="failure in Jest 21" src="https://jestjs.io/fr/assets/images/22-failure-21-a7eb296a994d13405234955abd946adc.png" width="972" height="650" class="img_SS3x"></p>
<p>In Jest 22, we have added a codeframe, giving more context to the failing assertions. We have also cleaned up the stack trace to remove more clutter than ever.</p>
<p><img loading="lazy" alt="failure in Jest 22" src="https://jestjs.io/fr/assets/images/22-failure-22-2dfad8dd25ea9b4b87a9359658f5eab4.png" width="938" height="744" class="img_SS3x"></p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="easier-testing-of-errors-thrown-in-async-code">Easier testing of errors thrown in async code<a href="https://jestjs.io/fr/blog/2017/12/18/jest-22#easier-testing-of-errors-thrown-in-async-code" class="hash-link" aria-label="Direct link to Easier testing of errors thrown in async code" title="Direct link to Easier testing of errors thrown in async code">‚Äã</a></h2>
<p>You can now use <code>toThrow</code> and <code>toThrowErrorMatchingSnapshot</code> on promise rejections in the same way you can on synchronous errors.</p>
<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#297a29">async</span><span class="token plain"> </span><span class="token keyword" style="color:#297a29">function</span><span class="token plain"> </span><span class="token function" style="color:#6b2e85">throwingFunction</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#297a29">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#297a29">new</span><span class="token plain"> </span><span class="token class-name">Error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'This failed'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#6b2e85">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'asynchronous rejection'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#297a29">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#888">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#297a29">await</span><span class="token plain"> </span><span class="token function" style="color:#6b2e85">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#6b2e85">throwingFunction</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">rejects</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">toThrowErrorMatchingSnapshot</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="asynchronous-test-environments">Asynchronous test environments<a href="https://jestjs.io/fr/blog/2017/12/18/jest-22#asynchronous-test-environments" class="hash-link" aria-label="Direct link to Asynchronous test environments" title="Direct link to Asynchronous test environments">‚Äã</a></h2>
<p>When <a href="https://github.com/GoogleChrome/puppeteer/" target="_blank" rel="noopener noreferrer">Puppeteer</a>, a way of programmatically interacting with a real Chromium Browser, was announced by the Google Chrome team in August, many wanted to be able to use Jest to write their tests running them in Chrome. The community have helped us out making this possible by allowing asynchronous test environments. We are still working on making this experience as good as possible, but please see <a href="https://jestjs.io/fr/docs/puppeteer">this guide</a> for how to use Puppeteer with Jest, starting today.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="experimental-leak-detection">Experimental Leak Detection<a href="https://jestjs.io/fr/blog/2017/12/18/jest-22#experimental-leak-detection" class="hash-link" aria-label="Direct link to Experimental Leak Detection" title="Direct link to Experimental Leak Detection">‚Äã</a></h2>
<p>We added an experimental <code>--detectLeaks</code> setting to Jest that will let you know if your internal environment instance is leaked after a test execution. It will also warn you when your test suite tries to require a file after the test has finished, meaning you forgot to wait for all async operations or left something not properly cleaned. This will however not discover leaks in user land code, only in test land code; although the technology used behind it can help you (see <code>jest-leak-detector</code>). If you are reporting a bug about Jest's memory usage, please provide a repro where <code>--detectLeaks</code> will make the test suite fail. We <a href="https://github.com/jestjs/jest/pull/4970" target="_blank" rel="noopener noreferrer">started building a better sandboxing mechanism</a> for Jest but it's not ready yet to be enabled by default. If you'd like to help, please reach out to us on discord!</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="watch-mode-refinements">Watch Mode Refinements<a href="https://jestjs.io/fr/blog/2017/12/18/jest-22#watch-mode-refinements" class="hash-link" aria-label="Direct link to Watch Mode Refinements" title="Direct link to Watch Mode Refinements">‚Äã</a></h2>
<p>When using watch mode, there is now a way to <a href="https://github.com/jestjs/jest/pull/4886" target="_blank" rel="noopener noreferrer">focus only on tests that previously failed</a>. In this mode, Jest will not re-run previously passing tests which should help you iron out all test failures. Additionally, <a href="https://github.com/jestjs/jest/pull/4841" target="_blank" rel="noopener noreferrer">we added a plugin system to watch mode</a>. By adding modules to <code>watchPlugins</code> in your configuration you can extend the features of the watch mode.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="babel-7-support">Babel 7 support<a href="https://jestjs.io/fr/blog/2017/12/18/jest-22#babel-7-support" class="hash-link" aria-label="Direct link to Babel 7 support" title="Direct link to Babel 7 support">‚Äã</a></h2>
<p>Jest uses Babel under the hood to power code coverage and advanced mocking features. With Jest 22, it also supports the upcoming Babel 7. You'll find more in the documentation <a href="https://jestjs.io/fr/docs/getting-started#using-babel">here</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="mock-function-improvements">Mock function improvements<a href="https://jestjs.io/fr/blog/2017/12/18/jest-22#mock-function-improvements" class="hash-link" aria-label="Direct link to Mock function improvements" title="Direct link to Mock function improvements">‚Äã</a></h2>
<p>There has been a couple of changes to mock functions in Jest 22, making them even easier to use. Firstly, we added a <a href="https://jestjs.io/fr/docs/mock-function-api#mockfnmocknamevalue"><code>mockName</code></a> property allowing you to name your mocks, which is useful in assertion failures. We have also made the Jest mock function serializable in <code>pretty-format</code>, meaning that you can snapshot test mocks. In Jest 21, <code>expect(jest.fn()).toMatchSnapshot()</code> would serialize to <code>[Function]</code>, in Jest 22, you might get something like this:</p>
<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#6b2e85">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'my mocking test'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#888">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#297a29">const</span><span class="token plain"> mock </span><span class="token operator" style="color:#888">=</span><span class="token plain"> jest</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">fn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">mockName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'myMock'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#6b2e85">mock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'hello'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#82772c">foo</span><span class="token operator" style="color:#888">:</span><span class="token plain"> </span><span class="token string" style="color:#c21325">'bar'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#6b2e85">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">mock</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">toMatchSnapshot</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Serializes to:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exports</span><span class="token punctuation" style="color:#393A34">[</span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token template-string string" style="color:#c21325">my mocking test 1</span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#888">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token template-string string" style="color:#c21325"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">[MockFunction myMock] {</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">  "calls": Array [</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">    Array [</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">      "hello",</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">      Object {</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">        "foo": "bar",</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">      },</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">    ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">  ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325"></span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="highlights-from-jest-21">Highlights from Jest 21<a href="https://jestjs.io/fr/blog/2017/12/18/jest-22#highlights-from-jest-21" class="hash-link" aria-label="Direct link to Highlights from Jest 21" title="Direct link to Highlights from Jest 21">‚Äã</a></h2>
<p>Jest 21 was released back in September, and we unfortunately never got around to write a blog post. So here is a quick summary of the main changes in version 21:</p>
<ol>
<li><strong>Use expect and jest-mock in the browser:</strong> <a href="https://github.com/mjackson" target="_blank" rel="noopener noreferrer">Michael Jackson</a> donated his excellent <a href="https://github.com/mjackson/expect" target="_blank" rel="noopener noreferrer"><code>expect</code></a> package to the Jest project. As part of that transition, the Jest core team, with much help from <a href="https://github.com/skovhus/" target="_blank" rel="noopener noreferrer">Kenneth Skovhus</a>, made both <code>jest-matchers</code> (renamed to <code>expect</code>) and <code>jest-mock</code> work in browsers. This means that while you cannot use Jest itself in browsers (<a href="https://github.com/jestjs/jest/issues/848" target="_blank" rel="noopener noreferrer">yet</a>), you can use its awesome assertions and mocks for instance as replacements for Chai and Sinon running in Mocha tests. If you are migrating from earlier <code>expect</code> to the new Jest-powered <code>expect</code>, you can use <a href="https://github.com/skovhus/jest-codemods/" target="_blank" rel="noopener noreferrer"><code>jest-codemods</code></a> to automate the migration.</li>
<li><strong>MIT License:</strong> We changed Jest's license to MIT. <em>Yay!</em></li>
<li><strong>Fail test suites on async errors:</strong> Jest used to have a bug that made it crash when errors were thrown in certain parts of async code. This was fixed by community contributors.</li>
<li><strong>Faster startup:</strong> With Jest 21 we fine tuned Jest's startup to be more than 50% faster. The large overhead of Jest when running it on a small and fast test was always an issue for us and now this shouldn't be a reason to hold you back from using Jest any longer.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="jest-community">Jest Community<a href="https://jestjs.io/fr/blog/2017/12/18/jest-22#jest-community" class="hash-link" aria-label="Direct link to Jest Community" title="Direct link to Jest Community">‚Äã</a></h2>
<p>La communaut√© autour de Jest travaille dur pour rendre l'exp√©rience de test encore plus efficace. These are separate projects from the main Jest project, but we want to highlight some of our personal favorites here.</p>
<ul>
<li><a href="https://github.com/americanexpress/jest-image-snapshot" target="_blank" rel="noopener noreferrer">jest-image-snapshot</a> ‚Äì custom matcher to compare images with snapshots by American Express developers</li>
<li><a href="https://github.com/kulshekhar/ts-jest" target="_blank" rel="noopener noreferrer">ts-jest</a> ‚Äì all you need to successfully run Jest within TypeScript project by <a href="https://github.com/kulshekhar/ts-jest" target="_blank" rel="noopener noreferrer">@kulshekhar</a></li>
<li><a href="https://github.com/skovhus/jest-codemods/" target="_blank" rel="noopener noreferrer">jest-codemods</a> ‚Äì migrate your tests from other frameworks to Jest with ease</li>
<li><a href="https://github.com/negativetwelve/jest-plugins" target="_blank" rel="noopener noreferrer">jest-plugins</a> ‚Äì a new community project oriented around simplifying setting up test environment for specific tools, like React, or providing some handy utilities</li>
</ul>
<p>We'd also like to announce that recently we launched a new place for high quality Jest additions ‚Äì <a href="https://github.com/jest-community" target="_blank" rel="noopener noreferrer">jest-community</a>. It's a new GitHub organization already featuring our favorite projects, like <a href="https://github.com/jest-community/vscode-jest" target="_blank" rel="noopener noreferrer">vscode-jest</a>, <a href="https://github.com/jest-community/jest-extended" target="_blank" rel="noopener noreferrer">jest-extended</a>, to name a few, curated by Jest maintainers and collaborators. We've even migrated our <a href="https://github.com/jest-community/eslint-plugin-jest" target="_blank" rel="noopener noreferrer">eslint-plugin-jest</a> there, and already see some great contributions, which are published independently at a faster pace.</p>
<p><img loading="lazy" alt="Jest Community" src="https://jestjs.io/fr/assets/images/22-community-2b148613668cb789c0215015bfbc10c7.png" width="2004" height="1090" class="img_SS3x"></p>
<p>Community projects under one organisation are also a great way for us to experiment on things like automated releases, which we'd like to explore for Jest as well. They also enable us to share some common things between them, like the shape of the README for example (thanks to the webpack Community for the idea), making it easier to learn and use for all of us.</p>
<p>Si vous avez quelque chose de g√©nial √† partager, n'h√©sitez pas √† nous contacter ! We'd love to share your project here.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest 20¬†: üíñ Tests agr√©ables & üèÉüèΩ ex√©cuteur multi-projets]]></title>
            <link>https://jestjs.io/fr/blog/2017/05/06/jest-20-delightful-testing-multi-project-runner</link>
            <guid>https://jestjs.io/fr/blog/2017/05/06/jest-20-delightful-testing-multi-project-runner</guid>
            <pubDate>Sat, 06 May 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[A few months ago we announced Jest 19 which came with major new features and was the biggest Jest release until today. Jest 20 has twice the amount of changes compared to the previous version, features a complete rewrite of the test runner, adds new testing APIs. The new release enables a new level of customization and configuration for projects all while making it effortless to upgrade. Beyond Painless JavaScript Testing, we believe Jest is now delivering a Delightful JavaScript Testing experience. Let's take a look at the best new features and changes in depth:]]></description>
            <content:encoded><![CDATA[<p>A few months ago we announced <a href="https://jestjs.io/fr/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements">Jest 19</a> which came with major new features and was the biggest Jest release until today. Jest 20 has twice the amount of changes compared to the previous version, features a complete rewrite of the test runner, adds new testing APIs. The new release enables a new level of customization and configuration for projects all while making it effortless to upgrade. Beyond Painless JavaScript Testing, we believe Jest is now delivering a <strong>Delightful JavaScript Testing experience</strong>. Let's take a look at the best new features and changes in depth:</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="multi-project-runner--configuration-overhaul">Multi-Project-Runner &amp; Configuration Overhaul<a href="https://jestjs.io/fr/blog/2017/05/06/jest-20-delightful-testing-multi-project-runner#multi-project-runner--configuration-overhaul" class="hash-link" aria-label="Direct link to Multi-Project-Runner &amp; Configuration Overhaul" title="Direct link to Multi-Project-Runner &amp; Configuration Overhaul">‚Äã</a></h2>
<p>Until now, Jest could only operate in one project at a time. This is often cumbersome if you are working on many smaller projects that each have their own setup and configuration. With Jest 20, we rewrote the test runner completely to run many projects at the same time within a single instance of Jest, for example if you are working on a React frontend and a node.js backend. Here is a video of Jest running tests for <a href="https://github.com/facebook/react" target="_blank" rel="noopener noreferrer">React</a>, <a href="https://github.com/facebook/relay" target="_blank" rel="noopener noreferrer">Relay</a>, <a href="https://github.com/yarnpkg/yarn" target="_blank" rel="noopener noreferrer">Yarn</a> and Jest all at the same time:</p>
<p><img loading="lazy" alt="multi-runner" src="https://jestjs.io/fr/assets/images/20-multi-runner-bca686433b2cb63c147951eedce67538.gif" width="839" height="520" class="img_SS3x"></p>
<p>Jest is now collapsing the usage guide after the first test run to save vertical space in the terminal.</p>
<p>Further, we completely overhauled how the configuration system works inside of Jest. You can now pass any configuration option through the CLI to overwrite the ones specified in your configuration file. Along with that, we changed Jest to look for a <code>jest.config.js</code> file by default which means you are now able to define a Jest configuration using JavaScript as well as being able to configure it through <code>package.json</code> like before. Through the addition of all these new features, you are now able to combine Jest in more powerful ways than ever before. For example, if you would like to find out which tests Jest would run given a set of changed files from a commit across multiple projects in a monorepo, you can combine cli arguments like this now:</p>
<div class="language-bash codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-bash codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token plain">$ jest --projects projectA projectB --listTests --findRelatedTests projectA/banana.js projectB/kiwi.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#c21325">"projectA/banana.test.js"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#c21325">"projectB/kiwi.test.js"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#c21325">"projectB/pineapple.test.js"</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">]</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This is especially useful for continuous integration (CI) systems where you may want to only run a subset of tests for Pull Requests to prevent Jest from running thousands of test files on every small change.</p>
<p>Finally, we are now properly mapping code coverage when using TypeScript and we are running code coverage for untested files in worker processes which yields significant speed ups for this feature.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="new--improved-testing-apis">New &amp; Improved Testing APIs<a href="https://jestjs.io/fr/blog/2017/05/06/jest-20-delightful-testing-multi-project-runner#new--improved-testing-apis" class="hash-link" aria-label="Direct link to New &amp; Improved Testing APIs" title="Direct link to New &amp; Improved Testing APIs">‚Äã</a></h2>
<p>We made a number of additions and improvements to the testing APIs which will help write more effective tests. We'd like to point out that all of these improvements were made entirely by community members!</p>
<ul>
<li><strong>Better async testing:</strong> Added new async/Promise support through resolves/rejects modifiers on expect: <code>expect(Promise(‚Ä¶)).resolves.toEqual(‚Ä¶)</code>. <a href="https://jestjs.io/fr/docs/expect#resolves">See documentation</a>.</li>
<li><strong>Expect <code>n</code> assertions:</strong> Along with the existing <code>expect.assertions(n)</code>, the new <code>expect.hasAssertions()</code> can be used to ensure a test has at least one assertion.</li>
<li><strong>Lint Plugin:</strong> A <code>valid-expect</code> rule was added to <code>eslint-plugin-jest</code> to ensure that an assertion is called after invoking <code>expect</code>. This will prevent mistakes like a stray <code>expect(banana);</code> with a missing assertion call.</li>
<li><strong>Pretty-Format Plugins:</strong> A number of new pretty-format plugins were added to Jest. We now pretty-print <a href="https://github.com/facebook/immutable-js/" target="_blank" rel="noopener noreferrer">Immutable.js</a> data structures and HtmlElements in assertion failures and snapshots.</li>
<li><strong>Custom Environment:</strong> It is now possible to add a <code>@jest-environment node|jsdom</code> annotation to the doc-block comment of a test file to use a test environment different from the default for individual tests.</li>
</ul>
<p>Here is an example of all how all the new APIs together will make testing more delightful:</p>
<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @jest-environment node</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#6b2e85">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'compares apples and bananas'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#297a29">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#888">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  expect</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">hasAssertions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Ensure this test has at least one assertion.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#297a29">await</span><span class="token plain"> </span><span class="token function" style="color:#6b2e85">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token known-class-name class-name">Promise</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">resolve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">Immutable</span><span class="token punctuation" style="color:#393A34">.</span><span class="token known-class-name class-name">Map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#82772c">apples</span><span class="token operator" style="color:#888">:</span><span class="token plain"> </span><span class="token number" style="color:#1373c2">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#82772c">bananas</span><span class="token operator" style="color:#888">:</span><span class="token plain"> </span><span class="token number" style="color:#1373c2">2</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">resolves</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">toEqual</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">Immutable</span><span class="token punctuation" style="color:#393A34">.</span><span class="token known-class-name class-name">Map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#82772c">apples</span><span class="token operator" style="color:#888">:</span><span class="token plain"> </span><span class="token number" style="color:#1373c2">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#82772c">bananas</span><span class="token operator" style="color:#888">:</span><span class="token plain"> </span><span class="token number" style="color:#1373c2">3</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#6b2e85">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'banana'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// valid-expect in eslint-plugin-jest will show an error.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This example will print a test failure similar to this:</p>
<p><img loading="lazy" alt="testing-apis" src="https://jestjs.io/fr/assets/images/20-testing-apis-d1ff5d93e72e0aedc768bd40bd179e96.png" width="2164" height="1638" class="img_SS3x"></p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="changements-de-rupture">Changements de rupture<a href="https://jestjs.io/fr/blog/2017/05/06/jest-20-delightful-testing-multi-project-runner#changements-de-rupture" class="hash-link" aria-label="Direct link to Changements de rupture" title="Direct link to Changements de rupture">‚Äã</a></h2>
<p>Comme pour chaque version majeure, nous apportons un certain nombre de changements de rupture pour rendre possibles des changements plus importants √† l'avenir et pour pousser l'exp√©rience de test √† un nouveau niveau. This time, we tried our best to only break APIs that we don't expect to affect the majority of Jest's users:</p>
<ul>
<li><strong>Fork of Jasmine 2.5:</strong> We finally decided to fork Jasmine itself and take ownership over Jest's own test runner. This will allow us to improve all aspects of the unit testing experience in the future but for now we are focused on incremental rewrites and reducing the API surface. If you see a test breaking as a result of a Jasmine API that is now missing, there should be an equivalent feature on the <code>jest</code> or <code>expect</code> objects. As such, we have removed many Jasmine features that aren't generally used in most codebases.</li>
<li><strong>New Snapshots on CI:</strong> Snapshots must always be committed along with the test and the modules they are testing. We changed Jest to not save new snapshots automatically in Continuous Integration (CI) environments or when the <code>--ci</code> flag is specified. To overwrite this behavior, which is generally not recommended, the <code>--updateSnapshot</code> flag can be used.</li>
<li><strong>Babel-Polyfill:</strong> Jest used to load <code>babel-polyfill</code> automatically when using babel-jest which resulted in memory leaks inside of Jest. In most versions of node, it is not necessary to load <code>babel-polyfill</code> so we removed this auto-inclusion and instead changed Jest to only include <code>regenerator-runtime</code> by default, which is commonly used to support async/await in older versions of Node.js. If you need <code>babel-polyfill</code>, you can manually require it in your setup files.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="other-improvements">Other Improvements<a href="https://jestjs.io/fr/blog/2017/05/06/jest-20-delightful-testing-multi-project-runner#other-improvements" class="hash-link" aria-label="Direct link to Other Improvements" title="Direct link to Other Improvements">‚Äã</a></h2>
<ul>
<li><strong>Documentation:</strong> Documentation is critical to share best practices and teach everyone how to write effective tests which will lead to better software. Over the last few weeks we have also expanded Jest's documentation to include a Snapshot Testing FAQ, a guide with information about how to use Jest with common JavaScript libraries as well as we documented the new features mentioned above.</li>
<li><strong>Translations:</strong> We are now asking for your help to <a href="https://crowdin.com/project/jest-v2" target="_blank" rel="noopener noreferrer">translate the Jest documentation</a> to make it easier for people to learn how to use Jest.</li>
<li><strong>Custom Reporters:</strong> Jest now supports custom test reporters through the <code>reporters</code> configuration option. You can finally customize the output of Jest as well as integrate it with other tools by generating reports in formats such as XML. <a href="https://jestjs.io/fr/docs/configuration#reporters-array-modulename-modulename-options">See documentation</a>.</li>
<li><strong>Codebase Health:</strong> It was only possible iterate so quickly in Jest because we spent a significant amount of time on the health of the codebase. We were one of the early adopters of <a href="https://github.com/prettier/prettier" target="_blank" rel="noopener noreferrer">prettier</a>, we notably increased flow coverage, forked Jasmine to improve our test runner library and we rewrote and refactored significant portions of Jest itself to set up Jest for success in the future.</li>
<li><strong>Bugfixes:</strong> As always, we made plenty of bugfixes in Jest. The full changelog can be found in the <a href="https://github.com/jestjs/jest/blob/main/CHANGELOG.md#jest-2000" target="_blank" rel="noopener noreferrer">Jest repository</a>.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="talks-about-jest">Talks about Jest<a href="https://jestjs.io/fr/blog/2017/05/06/jest-20-delightful-testing-multi-project-runner#talks-about-jest" class="hash-link" aria-label="Direct link to Talks about Jest" title="Direct link to Talks about Jest">‚Äã</a></h2>
<p>Recently the Jest core team and other contributors started to talk more about Jest and the experience of working on Jest at conferences:</p>
<ul>
<li>Rogelio Guzman did a talk about <a href="https://www.youtube.com/watch?time_continue=416&amp;v=HAuXJVI_bUs" target="_blank" rel="noopener noreferrer">Jest Snapshots and Beyond</a> at React Conf.</li>
<li>I spoke about <a href="https://developers.facebook.com/videos/f8-2017/building-high-quality-javascript-tools/" target="_blank" rel="noopener noreferrer">Building High-Quality JavaScript Tools</a> at Facebook's F8 conference.</li>
</ul>
<p><em>As always, this release couldn't have been possible without you, the JavaScript community. Nous sommes incroyablement reconnaissants d'avoir la possibilit√© de travailler ensemble √† l'am√©lioration des tests JavaScript. If you'd like to contribute to Jest, please don't hesitate to reach out to us on <a href="https://github.com/jestjs/jest" target="_blank" rel="noopener noreferrer">GitHub</a> or on <a href="https://discord.gg/j6FKKQQrW9" target="_blank" rel="noopener noreferrer">Discord</a>.</em></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[üÉè Jest 19¬†: Mode de surveillance immersif & am√©liorations de la plateforme de test]]></title>
            <link>https://jestjs.io/fr/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements</link>
            <guid>https://jestjs.io/fr/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements</guid>
            <pubDate>Tue, 21 Feb 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[Today we are pleased to ship version 19 of the Jest testing platform. It's the biggest Jest release we have shipped so far and we are quite excited to show you what we've built over the last two months:]]></description>
            <content:encoded><![CDATA[<p>Today we are pleased to ship version 19 of the Jest testing platform. It's the biggest Jest release we have shipped so far and we are quite excited to show you what we've built over the last two months:</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="immersive-watch-mode">Immersive Watch Mode<a href="https://jestjs.io/fr/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements#immersive-watch-mode" class="hash-link" aria-label="Direct link to Immersive Watch Mode" title="Direct link to Immersive Watch Mode">‚Äã</a></h2>
<p>We <a href="https://github.com/jestjs/jest/pull/2362" target="_blank" rel="noopener noreferrer">completely rewrote the watch mode</a> to make it instant and more extensible. As a result, the experience of using it really is immersive: tests re-run instantly after a file change and we made it easy to select the right tests.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="snapshot-updates">Snapshot Updates<a href="https://jestjs.io/fr/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements#snapshot-updates" class="hash-link" aria-label="Direct link to Snapshot Updates" title="Direct link to Snapshot Updates">‚Äã</a></h2>
<p>We made a couple of changes to the snapshot format. We don't make changes like this often and only consider them if they actually improve how snapshots work. As well as introducing a snapshot version number we accumulated a number of changes we wanted to make to the format for a while:</p>
<ul>
<li>We dropped the ‚Äútest‚Äù prefix in snapshot names from top level <code>test</code> or <code>it</code> calls.</li>
<li>We improved the printing of React elements to cause less changes when the last prop in an element changes.</li>
<li>We improved the character escaping mechanism to be more bulletproof.</li>
</ul>
<p>Avant&nbsp;:</p>
<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token plain">exports</span><span class="token punctuation" style="color:#393A34">[</span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token template-string string" style="color:#c21325">test snap 1</span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#888">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token template-string string" style="color:#c21325"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">&lt;header&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">  &lt;h1&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">    Jest \"19\"</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">  &lt;/h1&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">  &lt;Subtitle</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">    name="Painless JavaScript Testing" /&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">&lt;/header&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325"></span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>After (no ‚Äútest‚Äù prefix, better JSX rendering, version header):</p>
<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Jest Snapshot v1, https://goo.gl/fbAQLP</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">exports</span><span class="token punctuation" style="color:#393A34">[</span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token template-string string" style="color:#c21325">snap 1</span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#888">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token template-string string" style="color:#c21325"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">&lt;header&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">  &lt;h1&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">    Jest "19"</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">  &lt;/h1&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">  &lt;Subtitle</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">    name="Painless JavaScript Testing"</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">  /&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">&lt;/header&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325"></span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>We decided it's a good time to introduce versioned snapshots to ensure all developers are using a compatible version of Jest. Here's how we warn you about the need to update your snapshot:</p>
<p><img loading="lazy" alt="snapshot-version" src="https://jestjs.io/fr/assets/images/19-snapshot-version-457ba31d60bb428bee970eb1ed529408.png" width="1396" height="311" class="img_SS3x"></p>
<p>Please make sure you revert any local changes before updating to make the transition smooth and to ensure you aren't including any unwanted changes from failing tests in your new snapshots.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="improved-printing-of-skipped-tests">Improved printing of skipped tests<a href="https://jestjs.io/fr/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements#improved-printing-of-skipped-tests" class="hash-link" aria-label="Direct link to Improved printing of skipped tests" title="Direct link to Improved printing of skipped tests">‚Äã</a></h2>
<p>Skipped tests are now printed as a single line instead of showing every individual one when testing in verbose mode or a single suite. Hopefully it will let you focus on currently important tests. It also occupies far less space!</p>
<p><img loading="lazy" alt="skipped-tests" src="https://jestjs.io/fr/assets/images/19-skipped-tests-a51df1988c39d164bc52200a71459ec6.png" width="616" height="341" class="img_SS3x"></p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="new-cli-arguments">New CLI arguments<a href="https://jestjs.io/fr/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements#new-cli-arguments" class="hash-link" aria-label="Direct link to New CLI arguments" title="Direct link to New CLI arguments">‚Äã</a></h2>
<p>Jest 19 ships with two new coverage-related arguments which you can run from CLI:</p>
<ul>
<li><code>--collectCoverageFrom</code></li>
<li><code>--coverageDirectory</code></li>
</ul>
<p>We now also error on invalid CLI arguments instead of ignoring them. But we've got your back with helpful error message like the one below, e.g. when you try running <code>jest --watc</code>:</p>
<p><img loading="lazy" alt="cli-error" src="https://jestjs.io/fr/assets/images/19-cli-error-0a7455fcb6a1a01013633cc34575a1b8.png" width="738" height="214" class="img_SS3x"></p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="expect-improvements"><code>expect</code> Improvements<a href="https://jestjs.io/fr/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements#expect-improvements" class="hash-link" aria-label="Direct link to expect-improvements" title="Direct link to expect-improvements">‚Äã</a></h2>
<ul>
<li><a href="https://jestjs.io/fr/docs/expect#expectaddsnapshotserializerserializer"><code>expect.addSnapshotSerializer</code></a></li>
<li><a href="https://jestjs.io/fr/docs/expect#expectstringcontainingstring"><code>expect.stringContaining</code></a></li>
<li><a href="https://jestjs.io/fr/docs/jest-object#jestspyonobject-methodname"><code>jest.spyOn</code></a></li>
</ul>
<p>We're close to almost full feature parity with the <code>expect</code> npm package. <a href="https://twitter.com/mjackson" target="_blank" rel="noopener noreferrer">Michael Jackson</a>, the author of the package, agreed to <a href="https://github.com/jestjs/jest/issues/1679" target="_blank" rel="noopener noreferrer">donate</a> it to the Jest project, which means that <code>jest-matchers</code> will be renamed to <code>expect</code>. Since our version of <code>expect</code> is not intended to be fully compatible, <a href="https://twitter.com/Vjeux" target="_blank" rel="noopener noreferrer">Christopher Chedeau</a> is working on a codemod to make the transition painless. Christopher also worked on a number of improvements to <code>jest-matchers</code> which enables it to be used outside of Jest and even <a href="https://github.com/jestjs/jest/pull/2795" target="_blank" rel="noopener noreferrer">works inside browsers</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="eslint-plugin-jest--our-very-own-eslint-plugin"><a href="https://github.com/jestjs/jest/tree/main/packages/eslint-plugin-jest" target="_blank" rel="noopener noreferrer">eslint-plugin-jest</a> ‚Äì our very own ESLint plugin<a href="https://jestjs.io/fr/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements#eslint-plugin-jest--our-very-own-eslint-plugin" class="hash-link" aria-label="Direct link to eslint-plugin-jest--our-very-own-eslint-plugin" title="Direct link to eslint-plugin-jest--our-very-own-eslint-plugin">‚Äã</a></h2>
<p>Thanks to <a href="https://twitter.com/jonnykim" target="_blank" rel="noopener noreferrer">Jonathan Kim</a> Jest finally has its own official ESLint plugin. It exposes three rules:</p>
<ul>
<li><a href="https://github.com/jestjs/jest/blob/main/packages/eslint-plugin-jest/docs/rules/no-disabled-tests.md" target="_blank" rel="noopener noreferrer">no-disabled-tests</a> - this rule prevents you from accidentally committing disabled tests.</li>
<li><a href="https://github.com/jestjs/jest/blob/main/packages/eslint-plugin-jest/docs/rules/no-focused-tests.md" target="_blank" rel="noopener noreferrer">no-focused-tests</a> - this rule prevents you from committing focused tests which would disable all other tests in the same suite.</li>
<li><a href="https://github.com/jestjs/jest/blob/main/packages/eslint-plugin-jest/docs/rules/no-identical-title.md" target="_blank" rel="noopener noreferrer">no-identical-title</a> - disallows identical titles in test names.</li>
</ul>
<p>You can install it using <code>npm install --save-dev eslint-plugin-jest</code> or <code>yarn add --dev eslint eslint-plugin-jest</code> and it can be enabled by adding <code>{"plugins": ["jest"]}</code> to your eslint configuration.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="new-public-package-jest-validate">New public package: <a href="https://github.com/jestjs/jest/tree/main/packages/jest-validate" target="_blank" rel="noopener noreferrer">jest-validate</a><a href="https://jestjs.io/fr/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements#new-public-package-jest-validate" class="hash-link" aria-label="Direct link to new-public-package-jest-validate" title="Direct link to new-public-package-jest-validate">‚Äã</a></h2>
<p>While we refactored the validation and normalization code for Jest's configuration, we were so happy with the new error messaging that we extracted it to its own module to share it with everyone. With Jest 19 we welcome <code>jest-validate</code> to our self-sustained packages family.</p>
<p><code>jest-validate</code> is a generic configuration validation tool that helps you with warnings, errors and deprecation messages in your JavaScript tool. It's also capable of showing users friendly examples of correct configuration and it comes with a simple but powerful API. We hope it'll make a good addition to your projects!</p>
<p><img loading="lazy" alt="validate" src="https://jestjs.io/fr/assets/images/19-validate-68120eda9a55dbbb0325ea6deea0e973.png" width="1200" height="729" class="img_SS3x"></p>
<p>We're happy to announce that <code>jest-validate</code> is validating config options of <a href="https://github.com/jlongster/prettier" target="_blank" rel="noopener noreferrer">prettier</a> since <a href="https://github.com/jlongster/prettier/blob/main/CHANGELOG.md#0120" target="_blank" rel="noopener noreferrer">v0.12</a>. Feel free to add it to your project, try it, send us feedback and improve it by making pull requests on GitHub.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="improved-asymmetric-matchers">Improved asymmetric matchers<a href="https://jestjs.io/fr/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements#improved-asymmetric-matchers" class="hash-link" aria-label="Direct link to Improved asymmetric matchers" title="Direct link to Improved asymmetric matchers">‚Äã</a></h2>
<p>We moved the asymmetric matchers implementation from Jasmine into Jest, which enabled us to further improve the user experience around them. As a result, asymmetric matchers are now pretty-printed nicely, we added the new <a href="https://jestjs.io/fr/docs/expect#expectstringcontainingstring"><code>expect.stringContaining()</code></a> matcher and we also paired them with <a href="https://jestjs.io/fr/docs/expect#tomatchobjectobject"><code>expect.toMatchObject()</code></a> so you can use the best of both:</p>
<p><img loading="lazy" alt="asymmetric-matchers" src="https://jestjs.io/fr/assets/images/19-asymmetric-matchers-a96ddf170a7a1cdf31a7ffe36374d172.png" width="586" height="222" class="img_SS3x"></p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="better-manual-mocks">Better manual mocks<a href="https://jestjs.io/fr/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements#better-manual-mocks" class="hash-link" aria-label="Direct link to Better manual mocks" title="Direct link to Better manual mocks">‚Äã</a></h2>
<p>With the latest release, manual mocks now finally work with nested folders. For example <code>__mocks__/react-native/Libraries/Text/Text.js</code> will now work as expected and mock the correct module. We also fixed issues with virtual mocks and transitive dependencies and improved <code>moduleNameMapper</code> to not overwrite mocks when many patterns map to the same file.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="changements-de-rupture">Changements de rupture<a href="https://jestjs.io/fr/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements#changements-de-rupture" class="hash-link" aria-label="Direct link to Changements de rupture" title="Direct link to Changements de rupture">‚Äã</a></h2>
<p>As a part of our cleanups and fixes we removed the <code>mocksPattern</code> configuration option which was never officially supported. We also renamed the <code>testPathDirs</code> configuration option to <code>roots</code> which better explains what the option can be used for. The default configuration for <code>roots</code> is <code>["&lt;rootDir&gt;"]</code> and can be customized to include any number of directories. The rootDir configuration option has always been used mostly as a token for other configuration options and this rename should make configuring Jest clearer.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="revamped-documentation">Revamped documentation<a href="https://jestjs.io/fr/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements#revamped-documentation" class="hash-link" aria-label="Direct link to Revamped documentation" title="Direct link to Revamped documentation">‚Äã</a></h2>
<p>As you may have already seen, <a href="https://twitter.com/hectorramos" target="_blank" rel="noopener noreferrer">Hector Ramos</a> and <a href="https://twitter.com/lacker" target="_blank" rel="noopener noreferrer">Kevin Lacker</a> gave Jest's documentation a fresh new look. We changed the way we organize the website and it now features Docs and API as separate pages:</p>
<ul>
<li>Under <a href="https://jestjs.io/fr/docs/getting-started#content">Docs</a> you can find an introduction to Jest, including <a href="https://jestjs.io/fr/docs/getting-started#content">Getting Started</a> or <a href="https://jestjs.io/fr/docs/asynchronous#content">Testing Asynchronous Code</a> and handy guides like <a href="https://jestjs.io/fr/docs/snapshot-testing#content">Snapshot Testing</a>, <a href="https://jestjs.io/fr/docs/tutorial-react-native#content">Testing React Native App</a>, <a href="https://jestjs.io/fr/docs/webpack#content">Using with webpack</a> or <a href="https://jestjs.io/fr/docs/migration-guide#content">Migrating to Jest</a> and many more!</li>
<li>The <a href="https://jestjs.io/fr/docs/api">API</a> section on the other hand lists all available methods exposed by Jest: the <code>expect</code> and <code>jest</code> objects, mock functions, globals, along with configuration options from <em>package.json</em> and from the CLI.</li>
</ul>
<p>The homepage was completely redesigned to be more descriptive of what Jest is about: ‚Äú<em>Zero configuration testing platform</em>‚Äù. We also made sure it reads better on mobile devices. And for those using RSS ‚Äì we finally provide a <a href="https://jestjs.io/blog/feed.xml" target="_blank" rel="noopener noreferrer">feed for our blog</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="community-updates">Community Updates<a href="https://jestjs.io/fr/blog/2017/02/21/jest-19-immersive-watch-mode-test-platform-improvements#community-updates" class="hash-link" aria-label="Direct link to Community Updates" title="Direct link to Community Updates">‚Äã</a></h2>
<ul>
<li>We really loved this talk: ‚Äú<a href="https://www.youtube.com/watch?v=tvy0bSgwtTo" target="_blank" rel="noopener noreferrer">Introduction to Jest</a>‚Äú by Vas Boroviak.</li>
<li>Follow <a href="http://twitter.com/jestjs_" target="_blank" rel="noopener noreferrer">@jestjs_ on Twitter</a>.</li>
<li>The Jest Core team syncs once a week to discuss current and future issues. If you'd like to work on Jest, let us know, submit a few pull requests and join our weekly team meetings.</li>
<li>The awesome engineers at Artsy wrote <a href="http://artsy.github.io/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/" target="_blank" rel="noopener noreferrer">about Jest as part of their 2017 frontend stack</a>.</li>
<li>Stephen Scott wrote a detailed article about <a href="https://medium.freecodecamp.com/the-right-way-to-test-react-components-548a4736ab22" target="_blank" rel="noopener noreferrer">testing React components</a> in which he weighs the pros and cons of different approaches.</li>
<li><a href="https://medium.com/@kentaromiura_the_js_guy/jest-for-all-episode-1-vue-js-d616bccbe186#.r8ryxlw98" target="_blank" rel="noopener noreferrer">Using Jest with vue.js</a> got a lot easier after reading Cristian Carlesso's blog post.</li>
<li><a href="https://twitter.com/cpojer/status/825004258219130880" target="_blank" rel="noopener noreferrer">Michele Bertoli wrote a book about React Design Patterns and Best Practices</a> which features an entire section about Jest.</li>
<li>Improved <code>--notify</code> command that shows an operating system notification which <a href="https://github.com/jestjs/jest/pull/2727" target="_blank" rel="noopener noreferrer">can now also re-run tests from the notification</a>. This is actually a Jest feature and we are just checking if you are still reading this blog post.</li>
<li>Jest is now part of <a href="https://twitter.com/mxstbr/status/820326656439177217" target="_blank" rel="noopener noreferrer">react-boilerplate</a>.</li>
<li>Read about the <a href="https://medium.com/@boriscoder/the-hidden-power-of-jest-matchers-f3d86d8101b0#.pn10z1pzx" target="_blank" rel="noopener noreferrer">hidden powers of Jest's matchers</a>.</li>
</ul>
<p>Finally, we are happy to announce that the <a href="https://github.com/avajs/ava" target="_blank" rel="noopener noreferrer">ava</a> test runner has adopted parts of the Jest platform and is now shipping with basic <a href="https://github.com/avajs/ava#snapshot-testing" target="_blank" rel="noopener noreferrer">snapshot support</a> and is using <a href="https://github.com/jestjs/jest/tree/main/packages/pretty-format" target="_blank" rel="noopener noreferrer">pretty-format</a>. Consolidating test infrastructure makes it easier to learn how to test applications and enables us to share best practices. We are looking forward to see what we can learn from existing test libraries in the future.</p>
<p>The full <a href="https://github.com/jestjs/jest/blob/main/CHANGELOG.md#jest-1900" target="_blank" rel="noopener noreferrer">changelog can be found on GitHub</a>. Jest 19 was a true JavaScript community effort with <a href="https://github.com/jestjs/jest/graphs/contributors?from=2016-12-23&amp;to=2017-02-21&amp;type=c" target="_blank" rel="noopener noreferrer">17 people who contributed</a> to this release. We thank each and every one of you for your help to make this project great.</p>
<p><em>This blog post was written by <a href="https://twitter.com/rogeliog" target="_blank" rel="noopener noreferrer">Rogelio Guzman</a> and <a href="https://twitter.com/thymikee" target="_blank" rel="noopener noreferrer">Micha≈Ç Pierzcha≈Ça</a>.</em></p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Une grande exp√©rience pour les d√©veloppeurs]]></title>
            <link>https://jestjs.io/fr/blog/2017/01/30/a-great-developer-experience</link>
            <guid>https://jestjs.io/fr/blog/2017/01/30/a-great-developer-experience</guid>
            <pubDate>Mon, 30 Jan 2017 00:00:00 GMT</pubDate>
            <description><![CDATA[Nous croyons fermement que la grande documentation est cruciale pour fournir une grande exp√©rience de d√©veloppeur. Les docs doivent √™tre clairs, concis, et utiles pour les nouveaux utilisateurs et les v√©t√©rans. Dans cet esprit, nous avons r√©cemment pris un certain temps pour r√©viser le site Web de Jest.]]></description>
            <content:encoded><![CDATA[<p>Nous croyons fermement que la grande documentation est cruciale pour fournir une grande exp√©rience de d√©veloppeur. Les docs doivent √™tre clairs, concis, et utiles pour les nouveaux utilisateurs et les v√©t√©rans. Dans cet esprit, nous avons r√©cemment pris un certain temps pour r√©viser le site Web de Jest.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="docs-am√©lior√©s">Docs am√©lior√©s<a href="https://jestjs.io/fr/blog/2017/01/30/a-great-developer-experience#docs-am%C3%A9lior%C3%A9s" class="hash-link" aria-label="Direct link to Docs am√©lior√©s" title="Direct link to Docs am√©lior√©s">‚Äã</a></h2>
<p>Une des modifications que vous remarquerez lors de la visite de notre documentation est la barre lat√©rale mise √† jour. La documentation est maintenant divis√©e en trois domaines principaux : une introduction √† Jest, des guides d√©taill√©s sur les fonctionnalit√©s de Jest et une r√©f√©rence compl√®te √† l'API.</p>
<p>La section <strong>Introduction</strong> vous guidera depuis l'installation de Jest et l'√©criture de votre premier cas, jusqu'√† l'utilisation des matchers de Jest et le test du code asynchrone. Si vous √™tes nouveau chez Jest ou si vous avez besoin d'une mise √† jour rapide, ces docs devraient vous aider √† acc√©l√©rer en un rien de temps. Si vous avez d√©j√† utilis√© Jest et que vous n'avez besoin que d'une r√©f√©rence rapide sur la fa√ßon dont il est install√©, vous ne devez pas aller plus loin que le guide <a href="https://jestjs.io/fr/docs/getting-started">Pour commencer</a>.</p>
<p>Une fois que vous vous sentez √† l'aise en utilisant Jest, passez √† la section avanc√©e <strong>Guides</strong>. Le nouveau <a href="https://jestjs.io/fr/docs/snapshot-testing">Guide de test d'instantan√©</a> couvre tout ce que vous devez savoir sur la cr√©ation et la maintenance de cas de tests instantan√©s.</p>
<p>Enfin, nous avons compl√®tement remani√© notre documentation de r√©f√©rence de l'API. Vous pouvez maintenant trouver des informations d√©taill√©es sur tous les <a href="https://jestjs.io/fr/docs/api">Globals</a>de Jest, <a href="https://jestjs.io/fr/docs/expect">correspondants</a>, et <a href="https://jestjs.io/fr/docs/cli">chaque drapeau</a> support√© par <code>jest</code> CLI.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="nouvelles-couleurs--site-web">Nouvelles couleurs &amp; site web<a href="https://jestjs.io/fr/blog/2017/01/30/a-great-developer-experience#nouvelles-couleurs--site-web" class="hash-link" aria-label="Direct link to Nouvelles couleurs &amp; site web" title="Direct link to Nouvelles couleurs &amp; site web">‚Äã</a></h2>
<p>Les couleurs dans le logo Jest et sur le site web se sont senties d√©pass√©es depuis un certain temps. Nous avons modifi√© le sch√©ma de couleurs que nous utilisons pour Jest et modifi√© la page de destination de fa√ßon significative pour √™tre plus invitant. Nous esp√©rons que vous appr√©cierez les nouvelles couleurs et la vitrine des forces de Jest.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="qui-utilise-jest">Qui utilise Jest&nbsp;?<a href="https://jestjs.io/fr/blog/2017/01/30/a-great-developer-experience#qui-utilise-jest" class="hash-link" aria-label="Direct link to Qui utilise Jest&nbsp;?" title="Direct link to Qui utilise Jest&nbsp;?">‚Äã</a></h2>
<p>Nous avons cr√©√© une vitrine <a href="https://jestjs.io/fr/">des utilisateurs</a> pour mettre en √©vidence certaines des entreprises qui utilisent Jest. Nous sommes reconnaissants √† toutes ces entreprises d'avoir utilis√© Jest pour tester leurs sites Web, leurs applications mobiles et leurs API. Si vous utilisez Jest, consultez les directives sur GitHub et envoyez-nous une pull request !</p>
<div class="productShowcaseSection"><div class="logos"><img src="https://jestjs.io/img/logos/twitter.png" title="Twitter"><img src="https://jestjs.io/img/logos/pinterest.png" title="Pinterest"><img src="https://jestjs.io/img/logos/paypal.png" title="PayPal"><img src="https://jestjs.io/img/logos/ibm.png" title="IBM"><img src="https://jestjs.io/img/logos/spotify.png" title="Spotify"></div></div>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="jest-dans-le-navigateur">Jest dans le navigateur<a href="https://jestjs.io/fr/blog/2017/01/30/a-great-developer-experience#jest-dans-le-navigateur" class="hash-link" aria-label="Direct link to Jest dans le navigateur" title="Direct link to Jest dans le navigateur">‚Äã</a></h2>
<p>Comme soulign√© <a href="https://jestjs.io/fr/blog/2016/12/15/2016-in-jest">le mois dernier</a>, il est maintenant possible d'utiliser Jest directement dans le navigateur en utilisant <a href="https://repl.it/languages/jest" target="_blank" rel="noopener noreferrer">repl.it</a>. Si vous voulez essayer Jest avant de l'installer, vous pouvez facilement le faire ci-dessous ou directement √† partir de la page d'accueil de Jest. Allez-y et essayez le !</p>
<div class="jest-repl"><iframe src="https://repl.it/@amasad/try-jest?lite=true"></iframe></div>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="impliquez-vous">Impliquez-vous<a href="https://jestjs.io/fr/blog/2017/01/30/a-great-developer-experience#impliquez-vous" class="hash-link" aria-label="Direct link to Impliquez-vous" title="Direct link to Impliquez-vous">‚Äã</a></h2>
<p>Ce n'est qu'un avant-go√ªt. Allez jeter un coup d'oeil √† la documentation et n'h√©sitez pas √† nous faire part de vos commentaires. If you find a mistake in the docs or you just want to let us know what needs to be documented better, please tweet at us at <a href="https://twitter.com/jestjs_" target="_blank" rel="noopener noreferrer">@jestjs_</a>, <a href="https://github.com/jestjs/jest/issues" target="_blank" rel="noopener noreferrer">open an issue on GitHub</a>, or send us a PR by clicking "Edit on GitHub" at the top of the doc.</p>
<p>Nous sommes vraiment excit√©s pour l'ann√©e √† venir et nous avons h√¢te de recevoir de vos nouvelles!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[2016 dans Jest]]></title>
            <link>https://jestjs.io/fr/blog/2016/12/15/2016-in-jest</link>
            <guid>https://jestjs.io/fr/blog/2016/12/15/2016-in-jest</guid>
            <pubDate>Thu, 15 Dec 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[2016 a √©t√© une grande ann√©e pour les tests JavaScript avec Jest. Au cours des six premiers mois de l'ann√©e, nous avons r√©√©crit Jest et construit une base solide pour am√©liorer de mani√®re significative les performances et l'exp√©rience des d√©veloppeurs lors des tests du code JavaScript. We flow-typed the entire codebase, built a ton of integration tests for Jest itself and adopted lerna to turn Jest from a framework into a Painless JavaScript Testing platform.]]></description>
            <content:encoded><![CDATA[<p>2016 a √©t√© une grande ann√©e pour les tests JavaScript avec Jest. Au cours des six premiers mois de l'ann√©e, nous avons r√©√©crit Jest et construit une base solide pour am√©liorer de mani√®re significative les performances et l'exp√©rience des d√©veloppeurs lors des tests du code JavaScript. We flow-typed the entire codebase, built a ton of integration tests for Jest itself and adopted <a href="https://lernajs.io/" target="_blank" rel="noopener noreferrer">lerna</a> to turn Jest from a framework into a <a href="https://github.com/jestjs/jest/tree/main/packages" target="_blank" rel="noopener noreferrer"><em>Painless JavaScript Testing platform</em></a>.</p>
<p>The newly created <a href="https://yarnpkg.com/en/package/react-test-renderer" target="_blank" rel="noopener noreferrer">react-test-renderer</a> finally enabled testing of react-native components. Through the jest-react-native preset (now merged directly into react-native) Jest now works out of the box for any React project and comes pre-configured in <a href="https://github.com/facebookincubator/create-react-app" target="_blank" rel="noopener noreferrer">create-react-app</a> and <a href="https://github.com/facebook/react-native" target="_blank" rel="noopener noreferrer">react-native</a> projects. We integrated core pieces of Jest into <a href="https://github.com/facebook/react-native/tree/main/packager/react-packager/src" target="_blank" rel="noopener noreferrer">react-native's packager</a> and the completely new snapshot testing feature has since been used outside of Jest: It was integrated with React Storybook as ‚Äú<a href="https://github.com/storybooks/storyshots" target="_blank" rel="noopener noreferrer">storyshots</a>‚Äù and is being adopted by other test runners like <a href="https://github.com/avajs/ava/pull/1113" target="_blank" rel="noopener noreferrer">ava</a>.</p>
<p>The <a href="https://github.com/jestjs/jest/tree/main/packages/pretty-format" target="_blank" rel="noopener noreferrer">pretty-format</a> project was rewritten with performance in mind to drive Jest's snapshot feature, was recently merged into Jest's monorepo and is also helpful in other <a href="https://github.com/avajs/ava/pull/1154" target="_blank" rel="noopener noreferrer">test runners</a>. Nowadays Jest is much more about collecting different ideas and solutions to testing than it is about one specific implementation of a test framework.</p>
<p>I'd like to deeply thank all the people that have <a href="https://github.com/jestjs/jest/graphs/contributors?from=2016-01-01&amp;to=2016-12-14&amp;type=c" target="_blank" rel="noopener noreferrer">contributed to Jest this year</a>, both from the open source community and at Facebook: Dmitrii Abramov, Cristian Carlesso, Dan Abramov, Daniel Lo Nigro, Maxim Derbin, Evan Scott, Forbes Lindesay, Keyan Zhang and 60 more people. We'd also like to welcome <a href="https://twitter.com/thymikee" target="_blank" rel="noopener noreferrer">Micha≈Ç Pierzcha≈Ça (@thymikee)</a> as first official external contributor to Jest. He's been doing a great job managing the issues and PRs on the repo. If you'd like to start contributing to Jest, we have a bunch of <a href="https://github.com/jestjs/jest/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+bug%22" target="_blank" rel="noopener noreferrer">good first tasks</a> and we are always happy to help on our <a href="https://discord.gg/j6FKKQQrW9" target="_blank" rel="noopener noreferrer">discord channel</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="replit-with-jest-integration"><a href="http://repl.it/" target="_blank" rel="noopener noreferrer">repl.it</a> with Jest integration<a href="https://jestjs.io/fr/blog/2016/12/15/2016-in-jest#replit-with-jest-integration" class="hash-link" aria-label="Direct link to replit-with-jest-integration" title="Direct link to replit-with-jest-integration">‚Äã</a></h2>
<p>Amjad Massad <a href="https://repl.it/languages/jest" target="_blank" rel="noopener noreferrer">built a Jest container</a> so you can now try out Jest directly in the browser. You can use it from now on when creating GitHub issues which should help troubleshoot problems more quickly. Amjad and Haya are building <a href="http://repl.it/" target="_blank" rel="noopener noreferrer">repl.it</a> to democratize programming by building powerful yet simple tools and platforms for educators, learners, and developers. They are also <a href="https://repl.it/site/jobs" target="_blank" rel="noopener noreferrer">hiring talented engineers</a>!</p>
<div class="jest-repl"><iframe src="https://repl.it/languages/jest?lite=true"></iframe></div>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="community-update">Community Update<a href="https://jestjs.io/fr/blog/2016/12/15/2016-in-jest#community-update" class="hash-link" aria-label="Direct link to Community Update" title="Direct link to Community Update">‚Äã</a></h2>
<p>We feel incredibly humbled that 100+ companies <a href="https://twitter.com/cpojer/status/803965499407290369" target="_blank" rel="noopener noreferrer">have adopted Jest</a> in the last six months. Companies like Twitter, Pinterest, Paypal, nytimes, IBM (Watson), Spotify, eBay, SoundCloud, Intuit, FormidableLabs, Automattic, Trivago and Microsoft have either fully or partially switched to Jest for their JavaScript testing needs. Thank you very much for giving this project a chance. We would also like to thank everyone who went to conferences and meetups to speak about Jest and to everyone who is writing blog posts about how Jest is or isn't working for them!</p>
<p>Here is what happened in the community in the last two months:</p>
<ul>
<li>Jason Bonta and Dmitrii Abramov <a href="https://twitter.com/abramov_dmitrii/status/805913874704674816" target="_blank" rel="noopener noreferrer">redefined the ‚Äútesting pyramid‚Äù</a> we were talking a lot about at Facebook.</li>
<li><a href="https://github.com/skovhus/jest-codemods#jest-codemods" target="_blank" rel="noopener noreferrer">jest-codemods</a> now allows you to painlessly migrate from Mocha, Tape and Ava to Jest.</li>
<li>The React team announced <a href="https://facebook.github.io/react/blog/2016/11/16/react-v15.4.0.html" target="_blank" rel="noopener noreferrer">improvements to the react-test-renderer</a> in 15.4.0.</li>
<li>Orta Therox build an amazing <a href="https://github.com/orta/vscode-jest#the-aim" target="_blank" rel="noopener noreferrer">vscode-jest integration</a> and donated the code for editor support to Jest.</li>
<li>Pavithra Kodmad is documenting <a href="http://pksjce.github.io/2016/12/08/notes-on-jest" target="_blank" rel="noopener noreferrer">Flipkarts adoption of Jest</a> and shares some getting started tips.</li>
<li>Kent C. Dodds wrote about <a href="https://medium.com/@kentcdodds/migrating-to-jest-881f75366e7e#.ticf0wchu" target="_blank" rel="noopener noreferrer">migrating to Jest at Paypal</a> and Jason Brown <a href="http://browniefed.com/blog/migrating-ava-to-jest/" target="_blank" rel="noopener noreferrer">wrote about migrating to Jest as well</a>.</li>
<li>Ben McCormick wrote about <a href="http://benmccormick.org/2016/12/10/saving-time-with-jest/" target="_blank" rel="noopener noreferrer">saving time with Jest</a>.</li>
<li>Eric Clemmons wrote about <a href="https://medium.com/@ericclemmons/jest-snapshots-for-storybook-5bf36b5e5a3a" target="_blank" rel="noopener noreferrer">snapshots and storybook integration</a>.</li>
<li>Edvin Erikson wrote about <a href="https://medium.com/@edvinerikson/getting-jest-output-in-tap-format-6e07dc2c484c#.1l4edixhl" target="_blank" rel="noopener noreferrer">getting Tap output in Jest</a>.</li>
<li><a href="https://github.com/guigrpa/jest-html#jest-html--" target="_blank" rel="noopener noreferrer">jest-html</a> can bring snapshot diffing to your browser.</li>
<li>There were a few <a href="https://news.ycombinator.com/item?id=13128146" target="_blank" rel="noopener noreferrer">great conversations on hackernews</a> about Jest.</li>
<li>The community started a great discussion about the <a href="https://github.com/airbnb/enzyme/issues/715" target="_blank" rel="noopener noreferrer">future of enzyme</a>.</li>
<li>Ruben Oostinga wrote about <a href="https://medium.com/@RubenOostinga/combining-chai-and-jest-matchers-d12d1ffd0303#.87si0ra2h" target="_blank" rel="noopener noreferrer">combining chai and Jest matchers</a>.</li>
<li>Emil Ong wrote about why <a href="https://engineering.haus.com/why-tdding-your-frontend-feels-pointless-5f710fea7325#.pql79knnm" target="_blank" rel="noopener noreferrer">‚ÄúTDD'ing your frontend seems pointless‚Äù</a>.</li>
<li>Nate Hunzaker wrote about <a href="https://www.viget.com/articles/acceptance-testing-react-apps-with-jest-and-nightmare" target="_blank" rel="noopener noreferrer">end-to-end testing with Jest and Nightmare</a>.</li>
<li><a href="https://medium.com/aya-experience/testing-an-angularjs-app-with-jest-3029a613251#.h9badqevy" target="_blank" rel="noopener noreferrer">Using Jest with Angular just works</a> according to Matthieu Lux.</li>
<li>A fantastic conversation about the <a href="https://github.com/jestjs/jest/issues/2197" target="_blank" rel="noopener noreferrer">purpose of snapshot testing</a> is happening right now.</li>
<li>Dmitrii made a new <a href="https://twitter.com/abramov_dmitrii/status/806613542447157248" target="_blank" rel="noopener noreferrer">music video with his metal band</a>.</li>
<li><a href="https://yarnpkg.com/en/package/lazyspec" target="_blank" rel="noopener noreferrer">lazyspec</a> can help you create smoke tests quickly if you are introducing tests to an existing codebase.</li>
<li>Patrick Stapfer did a lightning talk about <a href="https://twitter.com/ryyppy/status/803871975995277312" target="_blank" rel="noopener noreferrer">vim and Jest</a>.</li>
<li>Mark Dalgleish was <a href="https://twitter.com/markdalgleish/status/806608159527747584" target="_blank" rel="noopener noreferrer">commenting on the value of snapshot testing</a>.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="new-features-changes-and-fixes-in-jest-17--18">New features, changes and fixes in Jest 17 &amp; 18<a href="https://jestjs.io/fr/blog/2016/12/15/2016-in-jest#new-features-changes-and-fixes-in-jest-17--18" class="hash-link" aria-label="Direct link to New features, changes and fixes in Jest 17 &amp; 18" title="Direct link to New features, changes and fixes in Jest 17 &amp; 18">‚Äã</a></h2>
<p>Jest was initially created more than five years ago and as such an old framework it has accumulated some technical debt. C'est pourquoi nous avons tendance √† faire des changements de rupture plus souvent que n√©cessaire&nbsp;: Nous pensons qu'il est important de r√©duire progressivement la dette technique pour s'assurer que Jest en tant que projet reste maintenable √† long terme. We didn't announce Jest 17 in a blog post and if you haven't upgraded to it in the last month you may find the <a href="https://github.com/jestjs/jest/blob/main/CHANGELOG.md" target="_blank" rel="noopener noreferrer">changelog</a> useful.</p>
<ul>
<li><strong>Breaking:</strong> Removed <code>pit</code> in favor of <code>it</code> or <code>test</code> and <code>mockImpl</code> in favor of <code>jest.fn()</code> or <code>mockImplementation</code> .</li>
<li><strong>Breaking:</strong> Renamed <code>--jsonOutputFile</code> to <code>--outputFile</code>.</li>
<li><strong>Breaking:</strong> Updated <code>testRegex</code> to include <code>test.js</code> and <code>spec.js</code> files.</li>
<li><strong>Breaking:</strong> Replaced <code>scriptPreprocessor</code> with the new <code>transform</code> option.</li>
<li><strong>Breaking:</strong> The <code>testResultsProcessor</code> function is now required to return the modified results.</li>
<li><strong>Potentially Breaking:</strong> Properly resolve <code>snapshotSerializers</code>, <code>setupFiles</code>, <code>transform</code>, <code>testRunner</code> and <code>testResultsProcessor</code> with a resolution algorithm instead of using <code>path.resolve</code>. This mainly means that <code>&lt;rootDir&gt;</code> is no longer needed for these options.</li>
<li><strong>Added:</strong> <code>pretty-format</code> and <code>jest-editor-support</code> were merged into Jest.</li>
<li><strong>Added:</strong> <code>expect.any</code>, <code>expect.anything</code>, <code>expect.objectContaining</code>, <code>expect.arrayContaining</code>, <code>expect.stringMatching</code>.</li>
<li><strong>Added:</strong> <code>--testResultsProcessor</code> is now exposed through the cli.</li>
<li><strong>Added:</strong> Implemented file watching in <code>jest-haste-map</code>.</li>
<li><strong>Added:</strong> Usage of Jest in watch mode can be hidden through <code>JEST_HIDE_USAGE</code>.</li>
<li><strong>Added:</strong> <code>expect.assertions(number)</code> which will ensure that a specified amount of assertions is made in one test.</li>
<li><strong>Added:</strong> <code>.toMatchSnapshot(?string)</code> feature to give snapshots a name.</li>
<li><strong>Added:</strong> <code>toMatchObject</code>, <code>toHaveProperty</code> , <code>toHaveLength</code> matchers.</li>
<li><strong>Added:</strong> <code>expect.extend</code>.</li>
<li><strong>Added:</strong> Added support for custom snapshots serializers.</li>
<li><strong>Added:</strong> Big diffs are now collapsed by default in snapshots and assertions. Added <code>--expand</code> (or <code>-e</code>) to show the full diff.</li>
<li><strong>Added:</strong> <code>jest.resetAllMocks</code> which replaces <code>jest.clearAllMocks</code>.</li>
<li><strong>Added:</strong> <code>--json</code> now includes information about individual tests inside a file.</li>
<li><strong>Fixed:</strong> <code>test.concurrent</code> unhandled promise rejections.</li>
<li><strong>Fixed:</strong> <code>babel-plugin-jest-hoist</code> when using <code>jest.mock</code> with three arguments.</li>
<li><strong>Fixed:</strong> The <code>JSON</code> global in <code>jest-environment-node</code> now comes from the vm context instead of the parent context.</li>
<li><strong>Fixed:</strong> Jest does not print stack traces from babel any longer.</li>
<li><strong>Fixed:</strong> Fake timers are reset when <code>FakeTimers.useTimers()</code> is called.</li>
<li><strong>Fixed:</strong> Regular expressions are properly escaped in snapshots.</li>
<li><strong>Fixed:</strong> Improved pretty printing of large objects.</li>
<li><strong>Fixed:</strong> <code>NaN% Failed</code> in the OS notification when using <code>--notify</code>.</li>
<li><strong>Fixed:</strong> The first test run without cached timings will now use separate processes instead of running in band.</li>
<li><strong>Fixed:</strong> <code>Map</code>/<code>Set</code> comparisons.</li>
<li><strong>Fixed:</strong> <code>test.concurrent</code> now works with <code>--testNamePattern</code>.</li>
<li><strong>Fixed:</strong> Improved <code>.toContain</code> matcher.</li>
<li><strong>Fixed:</strong> Properly resolve modules with platform extensions on react-native.</li>
<li><strong>Fixed:</strong> global built in objects in <code>jest-environment-node</code> now work properly.</li>
<li><strong>Fixed:</strong> Create mock objects in the vm context instead of the parent context.</li>
<li><strong>Fixed:</strong> <code>.babelrc</code> is now part of the transform cache key in <code>babel-jest</code>.</li>
<li><strong>Fixed:</strong> docblock parsing with haste modules.</li>
<li><strong>Fixed:</strong> Exit with the proper code when the coverage threshold is not reached.</li>
<li><strong>Fixed:</strong> Jest now clears the entire scrollback in watch mode.</li>
<li><strong>Deprecated:</strong> <code>jest-react-native</code> was deprecated and now forwards <code>react-native</code>.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="plans-for-jest-in-h1-2017">Plans for Jest in H1 2017<a href="https://jestjs.io/fr/blog/2016/12/15/2016-in-jest#plans-for-jest-in-h1-2017" class="hash-link" aria-label="Direct link to Plans for Jest in H1 2017" title="Direct link to Plans for Jest in H1 2017">‚Äã</a></h2>
<p>Six months ago <a href="https://jestjs.io/fr/blog/2016/07/27/jest-14#what-s-next-for-jest">we shared our plans for Jest</a> and we are happy that we were able to execute well on almost all of them. For the next six months, here is what we are planning:</p>
<ul>
<li><strong>Instant feedback:</strong> <a href="https://nuclide.io/" target="_blank" rel="noopener noreferrer">Nuclide</a> integration and an improved and <a href="https://github.com/jestjs/jest/pull/2324#issuecomment-267149669" target="_blank" rel="noopener noreferrer">faster watch mode</a>.</li>
<li><strong>Improved developer experience:</strong> new mocking APIs and improved assertions.</li>
<li><strong>Better performance and memory usage:</strong> analyze Jest and be more conscious about efficiency.</li>
<li><strong>Snapshot Improvements:</strong> snapshot approval mode, syntax highlighting and improved <code>react-test-renderer</code> APIs.</li>
<li><strong>Website:</strong> We'll overhaul the website and documentation and add a Jest cheat sheet.</li>
</ul>
<p>We won't be providing timelines or estimates for these features and we may not actually get to all of these things. If you'd like to help make these things a reality, send us issues and pull requests with your ideas and let's work on improving Jest together in 2017.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest 16.0: Turbocharged CLI & Community Update]]></title>
            <link>https://jestjs.io/fr/blog/2016/10/03/jest-16</link>
            <guid>https://jestjs.io/fr/blog/2016/10/03/jest-16</guid>
            <pubDate>Mon, 03 Oct 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[It's been one month since the last major release and we've made significant improvements to Jest since. In this major release we are updating the snapshot format we are using which will likely require snapshots to be updated when upgrading Jest. We don't make these changes lightly and don't expect this to happen often but we think it is necessary to improve the format from time to time.]]></description>
            <content:encoded><![CDATA[<p>It's been one month since the last major release and we've made significant improvements to Jest since. In this major release we are updating the snapshot format we are using which will likely require snapshots to be updated when upgrading Jest. We don't make these changes lightly and don't expect this to happen often but we think it is necessary to improve the format from time to time.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="upgraded-cli">Upgraded CLI<a href="https://jestjs.io/fr/blog/2016/10/03/jest-16#upgraded-cli" class="hash-link" aria-label="Direct link to Upgraded CLI" title="Direct link to Upgraded CLI">‚Äã</a></h2>
<p><img loading="lazy" alt="reporter" src="https://jestjs.io/fr/assets/images/16-reporter-578f46980efc5766386bed963d75e333.gif" width="858" height="575" class="img_SS3x"></p>
<p>Jest 16 features a new reporter interface that shows running tests as well as a live summary and a progress bar based on the estimated test runtime from previous test runs. We also improved the CLI output to work better with different color schemes. If there were test failures in a previous run, Jest will now always run those tests first to give useful signal to users as quickly as possible.</p>
<p>We also added a lot of new features which you may find useful:</p>
<ul>
<li>New CLI flags were added: A <code>--testNamePattern=pattern</code> or <code>-t &lt;pattern&gt;</code> option was added to filter tests from the command line much like <code>it.only</code> or <code>fit</code> does in tests.</li>
<li>Previously failed tests now always run first.</li>
<li><code>jest &lt;pattern&gt;</code> is now case-insensitive to make it easier to filter test files.</li>
<li>A test run in watch mode can now be interrupted. During a test run, simply press any of the keys used for input during watch mode (<code>a</code>, <code>o</code>, <code>p</code>, <code>q</code> or <code>enter</code>) to abort a test run and start a new one.</li>
<li>The <code>--bail</code> flag now also works in watch mode. Together with running failed tests first, Jest's watch mode will now feel turbocharged!</li>
<li>Jest now automatically considers files and tests with the <code>jsx</code> extension.</li>
<li>Jest warns about duplicate manual mock files and we improved automatically created mocks for ES modules compiled with babel.</li>
<li>A <code>jest.clearAllMocks</code> function was added to clear all mocks in between tests.</li>
<li>We improved module resolution when <code>moduleNameMapper</code> is used.</li>
<li>Finally, a <code>--findRelatedTests &lt;fileA&gt; &lt;fileB&gt;</code> cli option was added to run tests related to the specified files. This is especially helpful as a pre-commit hook if you'd like to run tests only on a specified set of files that have tests associated with them.</li>
</ul>
<p>This is what Jest looks like when a test run is interrupted in watch mode: <img loading="lazy" alt="watch" src="https://jestjs.io/fr/assets/images/16-watch-db5e0e957c19a9b2499e018c81762993.gif" width="858" height="575" class="img_SS3x"></p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="snapshot-updates">Snapshot Updates<a href="https://jestjs.io/fr/blog/2016/10/03/jest-16#snapshot-updates" class="hash-link" aria-label="Direct link to Snapshot Updates" title="Direct link to Snapshot Updates">‚Äã</a></h2>
<p>Jest's snapshot implementation was completely rewritten. The new version of the <code>jest-snapshot</code> package is now structured in a way that allows for easier integration into other test runners and enables more cool integrations like with <a href="https://voice.kadira.io/snapshot-testing-in-react-storybook-43b3b71cec4f#.qh4lzcadb" target="_blank" rel="noopener noreferrer">React Storybook</a>. Jest doesn't mark snapshots as obsolete in a file with skipped or failing tests. We also made a number of changes to the snapshot format:</p>
<ul>
<li>Objects and Arrays are now printed with a trailing comma to minimize future changes to snapshots.</li>
<li>We removed function names from snapshots. They were causing issues with different versions of Node, with code coverage instrumentation and we generally felt like it wasn't useful signal to show to the user that the name of a function has changed.</li>
<li>Snapshots are now sorted using natural sort order within a file.</li>
</ul>
<p>When upgrading to Jest 16, the diff might look similar to this one: <img loading="lazy" alt="snapshots" src="https://jestjs.io/fr/assets/images/16-snapshots-3d7a3fd47cdb15728ac038948a21d2b7.png" width="1924" height="1360" class="img_SS3x"></p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="test-library-updates">Test Library Updates<a href="https://jestjs.io/fr/blog/2016/10/03/jest-16#test-library-updates" class="hash-link" aria-label="Direct link to Test Library Updates" title="Direct link to Test Library Updates">‚Äã</a></h2>
<p>We finished the migration of Jasmine assertions to the new Jest matchers. We added three new matchers: <code>toBeInstanceOf</code>, <code>toContainEqual</code> and <code>toThrowErrorMatchingSnapshot</code> . We have more readable failure messages for the spy/mock matchers <code>toHaveBeenLastCalledWith</code>, <code>toHaveBeenCalledWith</code>, <code>lastCalledWith</code> and <code>toBeCalledWith</code>. Now that we have rewritten all assertions and separated them into their own package, we'll be working on making them standalone so they can be integrated into any test framework if you'd like to use them outside of Jest.</p>
<p>We also added a bunch of aliases that were requested by the community. To make Jest focus on a single test you can now use either <code>it.only</code> or <code>test.only</code> or keep using <code>fit</code>; For skipping a test, <code>it.skip</code> or <code>test.skip</code> are now available alongside of <code>xit</code>; finally to define a test as concurrent you can use <code>test.concurrent</code> which is useful in case your test accesses network resources or databases.</p>
<p>Finally, if you'd like to overwrite the <code>expect</code> global with a different assertion library like <a href="http://chaijs.com/" target="_blank" rel="noopener noreferrer">chai</a>, this can now be done using the <code>setupTestFrameworkScriptFile</code> configuration option.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="community-update">Community Update<a href="https://jestjs.io/fr/blog/2016/10/03/jest-16#community-update" class="hash-link" aria-label="Direct link to Community Update" title="Direct link to Community Update">‚Äã</a></h2>
<p>Over the last month lots of articles were written about Jest's snapshot testing feature, how to migrate to Jest and how to get started writing tests. I also did a few live videos to explain how Jest and snapshot testing works:</p>
<ul>
<li><a href="https://www.facebook.com/react/videos/1035427199869020/" target="_blank" rel="noopener noreferrer">FB Live Video about Snapshot Testing</a>.</li>
<li><a href="https://www.youtube.com/watch?v=i31VtyJSM-I&amp;feature=youtu.be" target="_blank" rel="noopener noreferrer">JavaScript &amp; React Testing with Kent C. Dodds</a>.</li>
</ul>
<p>A number of people wrote articles about snapshot testing. The most opinionated article that resonated with the Jest team was ‚Äú<a href="http://benmccormick.org/2016/09/19/testing-with-jest-snapshots-first-impressions/" target="_blank" rel="noopener noreferrer">Testing with Jest Snapshots: First Impressions</a>‚Äù. Ben makes three great points in his blog post:</p>
<ol>
<li>Snapshot tests are a complement for conventional tests not a replacement.</li>
<li>Snapshot tests are more useful with a healthy code review process.</li>
<li>Snapshot tests work well with auto-mocking.</li>
</ol>
<p>We highly recommend reading the entire blog post. Ben did a fantastic job explaining the reasons why we built snapshot testing. It's important to point out that we didn't introduce snapshot testing to replace all other forms of testing but rather as a way to enable engineers to write tests for code that they otherwise wouldn't write tests for. It works well for things like React components, CLI output, error messages and many others but it doesn't solve all problems. Jest's goal is to provide many different ways to write effective tests without sacrificing performance or the project's maintainability.</p>
<p>Other highlights about snapshot testing:</p>
<ul>
<li>A React Native testing series: <a href="https://blog.callstack.io/unit-testing-react-native-with-the-new-jest-i-snapshots-come-into-play-68ba19b1b9fe" target="_blank" rel="noopener noreferrer">Part 1: Jest ‚Äì Snapshot come into play</a> and <a href="https://blog.callstack.io/unit-testing-react-native-with-the-new-jest-ii-redux-snapshots-for-your-actions-and-reducers-8559f6f8050b#.putt9eipm" target="_blank" rel="noopener noreferrer">Part 2: Jest ‚Äì Redux Snapshots for your Actions and Reducers</a>.</li>
<li><a href="https://blog.grommet.io/post/2016/09/01/how-we-landed-on-jest-snapshot-testing-for-javascript" target="_blank" rel="noopener noreferrer">How we landed on Jest snapshot testing for JavaScript</a>.</li>
<li><a href="http://guigrpa.github.io/2016/09/27/picture-this-snapshot-testing/" target="_blank" rel="noopener noreferrer">Picture This: Snapshot Testing</a>.</li>
<li><a href="https://voice.kadira.io/snapshot-testing-in-react-storybook-43b3b71cec4f" target="_blank" rel="noopener noreferrer">Snapshot testing with React Storybook</a>.</li>
<li><a href="https://medium.com/@ryancollinsio/testing-react-redux-applications-fee79ac0087f#.lyjl7st1n" target="_blank" rel="noopener noreferrer">Testing React and Redux Applications</a>.</li>
<li>If you are using the popular <a href="https://github.com/airbnb/enzyme" target="_blank" rel="noopener noreferrer">enzyme</a> testing utility, there is now a project <a href="https://github.com/trayio/enzyme-to-json" target="_blank" rel="noopener noreferrer">enzyme-to-json</a> which makes it possible to use Jest's snapshot testing feature together with enzyme.</li>
</ul>
<p><a href="https://github.com/reactjs/redux/commit/7296d3cba1f5f899bdee5ef6695a8d21149f8d6c" target="_blank" rel="noopener noreferrer">Redux itself now uses Jest</a> and Max Stoiber wrote a <a href="http://academy.plot.ly/react/6-testing/" target="_blank" rel="noopener noreferrer">tutorial on how to test code written with redux</a>. There is also a great <a href="https://semaphoreci.com/community/tutorials/how-to-test-react-and-mobx-with-jest" target="_blank" rel="noopener noreferrer">guide on how to write tests for MobX</a>. If you are using <a href="https://github.com/facebookincubator/create-react-app" target="_blank" rel="noopener noreferrer">create-react-app</a>, Jest is now included by default. Kent C. Dodds created a ton of <a href="https://egghead.io/lessons/javascript-use-jest-s-snapshot-testing-feature?pl=testing-javascript-with-jest-a36c4074" target="_blank" rel="noopener noreferrer">videos on egghead.io</a> that will help you get started with Jest.</p>
<p>If you are using other test runners, Kenneth Skovhus built an awesome <a href="https://github.com/skovhus/jest-codemods" target="_blank" rel="noopener noreferrer">jest-codemods</a> library that will automate the conversion for you. Codemods are awesome: they'll allow you to quickly evaluate whether Jest will work for you. Give it a try!</p>
<p>The full <a href="https://github.com/jestjs/jest/blob/main/CHANGELOG.md#jest-1600" target="_blank" rel="noopener noreferrer">changelog can be found on GitHub</a>. Jest 16 was a true JavaScript community effort and the project now has more than 220 contributors. We thank each and every one of you for your help to make this project great.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest 15.0¬†: Nouvelles valeurs par d√©faut pour Jest]]></title>
            <link>https://jestjs.io/fr/blog/2016/09/01/jest-15</link>
            <guid>https://jestjs.io/fr/blog/2016/09/01/jest-15</guid>
            <pubDate>Thu, 01 Sep 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[We spent the past year making Jest faster, easier to configure, added tons of features and built snapshot testing. However, there were two areas where we invested very little we can move fast and improve the framework for Facebook and the open source community at light-speed. Jest's goal is to come with batteries included and to require as little configuration as necessary. We recently got a chance to explain our philosophy on a create-react-app issue.]]></description>
            <content:encoded><![CDATA[<p>We spent the past year making Jest <a href="https://jestjs.io/fr/blog/2016/03/11/javascript-unit-testing-performance">faster</a>, <a href="https://jestjs.io/fr/blog/2016/04/12/jest-11">easier to configure</a>, <a href="https://jestjs.io/fr/blog/2016/06/22/jest-13">added tons of features</a> and built <a href="https://jestjs.io/fr/blog/2016/07/27/jest-14">snapshot testing</a>. However, there were two areas where we invested very little: the CLI output and user experience. With Jest 15 we are changing the framework radically to make it easier to use both for beginners and experienced users. We are excited that our investment in Jest is now paying off: we can move fast and improve the framework for Facebook and the open source community at light-speed. Jest's goal is to come with batteries included and to require as little configuration as necessary. We recently got a chance to explain our philosophy on a <a href="https://github.com/facebookincubator/create-react-app/pull/250#issuecomment-237098619" target="_blank" rel="noopener noreferrer">create-react-app issue</a>.</p>
<p>The most important change to talk about is a set of <a href="https://github.com/jestjs/jest/pull/1511" target="_blank" rel="noopener noreferrer">new defaults</a>. If you are an existing Jest user you will very likely need to update your configuration for Jest 15. In most cases it will simplify your setup and Jest will provide useful error messages during the upgrade. All of the new defaults can be disabled to suit your needs, but we still consider the disabled features critical for Jest in certain situations and will continue to use and support them at Facebook long-term. Our <a href="https://jestjs.io/fr/docs/api">API documentation</a> was also completely rewritten to reflect these changes. <a href="https://github.com/facebook/react/pull/7625/files" target="_blank" rel="noopener noreferrer">This pull request for React</a> highlights some of the changes necessary for existing projects.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="new-cli-error-messages-and-summaries">New CLI error messages and summaries<a href="https://jestjs.io/fr/blog/2016/09/01/jest-15#new-cli-error-messages-and-summaries" class="hash-link" aria-label="Direct link to New CLI error messages and summaries" title="Direct link to New CLI error messages and summaries">‚Äã</a></h2>
<p>As part of our effort to remove Jasmine incrementally within Jest, replacing all Jasmine matchers was almost completed. A lot of time was spent tweaking every error message for every matcher to give the best signal to users when a test is failing ‚Äì the time when Jest should provide the most value to you. In addition to printing the expected and received values, a diff is printed for the <code>toBe</code> and <code>toEqual</code> matchers to help spot mistakes. More colors were added and relevant files from stack traces are highlighted more prominently.</p>
<p>Here is a comparison of the before and after on a light terminal: <img loading="lazy" alt="failure1" src="https://jestjs.io/fr/assets/images/15-failure1-18a216b24eb5641ffe2f700795be8738.png" width="2414" height="1422" class="img_SS3x"> It also works well with darker colors: <img loading="lazy" alt="failure2" src="https://jestjs.io/fr/assets/images/15-failure2-0638fb4e0e8ef964763fab8c4bebd23c.png" width="2442" height="850" class="img_SS3x"></p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="new-watch-command">New watch command<a href="https://jestjs.io/fr/blog/2016/09/01/jest-15#new-watch-command" class="hash-link" aria-label="Direct link to New watch command" title="Direct link to New watch command">‚Äã</a></h2>
<p>We completely rewrote <code>jest --watch</code> to be more interactive. It can now switch between running all tests or only test files related to changed files by pressing <code>a</code> or <code>o</code>. By pressing <code>p</code> a prompt appears that allows to specify a test pattern to focus on a specific set of files. Snapshot tests can be updated by pressing <code>u</code>.</p>
<p><img loading="lazy" alt="watch" src="https://jestjs.io/fr/assets/images/15-watch-951ac33b263d3ee8522e35b8836b1f88.gif" width="858" height="575" class="img_SS3x"></p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="jest-react-native-improvements">jest-react-native improvements<a href="https://jestjs.io/fr/blog/2016/09/01/jest-15#jest-react-native-improvements" class="hash-link" aria-label="Direct link to jest-react-native improvements" title="Direct link to jest-react-native improvements">‚Äã</a></h2>
<p>Mocks for <code>ListView</code>, <code>TextInput</code>, <code>ActivityIndicator</code>, <code>ScrollView</code> and more were added. The existing mocks were updated to use the real implementations and existing snapshots likely have to be updated when upgrading to Jest 15. A <code>mockComponent</code> function was added to <code>jest-react-native</code> that can be used to mock native components:</p>
<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token plain">jest</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">mock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'MyNativeComponent'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#888">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#297a29">const</span><span class="token plain"> jestReactNative </span><span class="token operator" style="color:#888">=</span><span class="token plain"> </span><span class="token function" style="color:#6b2e85">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'jest-react-native'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#297a29">return</span><span class="token plain"> jestReactNative</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">mockComponent</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'MyNativeComponent'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>There have also been a number of improvements around mocking images, the fetch module and other native APIs.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="buffered-console-messages">Buffered Console Messages<a href="https://jestjs.io/fr/blog/2016/09/01/jest-15#buffered-console-messages" class="hash-link" aria-label="Direct link to Buffered Console Messages" title="Direct link to Buffered Console Messages">‚Äã</a></h2>
<p>Jest parallelizes test runs across workers to maximize performance. Previously Jest used to forward console messages from workers to the parent and printed them immediately. When running multiple tests in parallel, it was often hard to find out which test and which module was calling a log function. In Jest 15, all console messages are buffered and printed together with individual test results. In addition the file and line number of the log call is printed so the code can easily be inspected.</p>
<p>Compare the output of the previous version of Jest and Jest 15: <img loading="lazy" alt="console" src="https://jestjs.io/fr/assets/images/15-console-5050b2c2d39cedc5bff49baa56bb78a3.png" width="2358" height="1162" class="img_SS3x"></p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="disabled-automocking">Disabled Automocking<a href="https://jestjs.io/fr/blog/2016/09/01/jest-15#disabled-automocking" class="hash-link" aria-label="Direct link to Disabled Automocking" title="Direct link to Disabled Automocking">‚Äã</a></h2>
<p>Automocking is now disabled by default in Jest. This is by far the most confusing feature for new users and in many ways it doesn't make sense for small projects. We introduced automocking at Facebook and it worked great for us when unit testing was adopted in a large existing code base with few existing tests, but over time it felt like people spent more time fighting with mocked/unmocked modules than it would have taken them to write a test normally. We also noticed that library authors often require a huge number of basic modules that always have to be manually unmocked. Even for Jest itself we realized that the majority of tests had automocking disabled manually. We still believe that explicit automocking can be incredibly valuable. This change simply trades implicit mocks for explicit mocks via calls to <code>jest.mock(moduleName)</code>.</p>
<p>If you would still like to use automocking by default, enable the <code>automock</code> setting in your configuration or manually call <code>jest.enableAutomock()</code> in your test or setup file.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="test-file-patterns">Test File Patterns<a href="https://jestjs.io/fr/blog/2016/09/01/jest-15#test-file-patterns" class="hash-link" aria-label="Direct link to Test File Patterns" title="Direct link to Test File Patterns">‚Äã</a></h2>
<p>Not everyone uses the same convention of using a <code>__tests__</code> folder to store tests. Jest 15 also looks for files ending in <code>.spec.js</code> or <code>.test.js</code>, two popular community standards. Jest 15 also removes the <code>testDirectoryName</code> and <code>testFileExtensions</code> configuration options and asks users to switch to the <code>testRegex</code> option when the old configuration options are used.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="module-registry-persistence">Module Registry Persistence<a href="https://jestjs.io/fr/blog/2016/09/01/jest-15#module-registry-persistence" class="hash-link" aria-label="Direct link to Module Registry Persistence" title="Direct link to Module Registry Persistence">‚Äã</a></h2>
<p>Jest used to implicitly reset all modules before each test and we recommended requiring modules in <code>beforeEach</code> or inside of tests. This is useful when modules have local state that shouldn't be shared between tests. However, two big shifts happened: ES modules with the top-level <code>import</code> syntax and a renewed interest in writing stateless functional modules.</p>
<p>This has lead to numerous incompatibilities. We also noticed that at Facebook we weren't even using this implicit reset. Instead we relied on explicit calls to <code>jest.resetModules()</code> which puts engineers in control on when to wipe away all state.</p>
<p>Here is an example:</p>
<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#297a29">const</span><span class="token plain"> </span><span class="token maybe-class-name">React1</span><span class="token plain"> </span><span class="token operator" style="color:#888">=</span><span class="token plain"> </span><span class="token function" style="color:#6b2e85">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'react'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jest</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">resetModules</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#297a29">const</span><span class="token plain"> </span><span class="token maybe-class-name">React2</span><span class="token plain"> </span><span class="token operator" style="color:#888">=</span><span class="token plain"> </span><span class="token function" style="color:#6b2e85">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'react'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token maybe-class-name">React1</span><span class="token plain"> </span><span class="token operator" style="color:#888">!==</span><span class="token plain"> </span><span class="token maybe-class-name">React2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// These two are separate copies of React.</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The call to <code>resetModules</code> wipes away the require cache. A second call to require the same module will result in a new instantiation of the same module and all of its dependencies. This feature is especially useful when dealing with modules that have side effects, like <a href="https://github.com/jestjs/jest/blob/3bbf32a239fc4aad8cc6928a787f235bd86fecac/packages/jest-haste-map/src/__tests__/index-test.js#L64" target="_blank" rel="noopener noreferrer">jest-haste-map</a>.</p>
<p>We believe it is better to put users in control so we disabled the implicit reset. Modules can be reset using <code>jest.resetModules()</code> in code and the <code>resetModules</code> option can be enabled in the configuration to bring back the previous behavior.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="real-vs-fake-timers">Real vs Fake Timers<a href="https://jestjs.io/fr/blog/2016/09/01/jest-15#real-vs-fake-timers" class="hash-link" aria-label="Direct link to Real vs Fake Timers" title="Direct link to Real vs Fake Timers">‚Äã</a></h2>
<p>By default Jest used to mock all timer functions like <code>setTimeout</code> or <code>process.nextTick</code> and provided an API <code>jest.runAllTimers()</code> to advance timers programatically. This is useful when a piece of code sets a long timeout that we don't want to wait for in a test.</p>
<p>However we found that most of the time the use cases are quite isolated. <a href="https://jestjs.io/fr/docs/tutorial-async">Async programming</a> has also become much simpler in our test runner. Jest now uses the real timers by default.</p>
<p>You can still override this by specifying <code>"timers": "fake"</code> in the configuration or by calling <code>jest.useRealTimers()</code> and <code>jest.useFakeTimers()</code> global switches.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="setupenvscriptfile-vs-setupfiles">setupEnvScriptFile vs setupFiles<a href="https://jestjs.io/fr/blog/2016/09/01/jest-15#setupenvscriptfile-vs-setupfiles" class="hash-link" aria-label="Direct link to setupEnvScriptFile vs setupFiles" title="Direct link to setupEnvScriptFile vs setupFiles">‚Äã</a></h2>
<p>The <code>setupEnvScriptFile</code> configuration option has been deprecated for a while. Jest 15 removes it completely and replaces it with <code>setupFiles</code>. This option expects an array of file paths that are loaded in order before a test file is executed.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="rewritten-code-coverage-support">Rewritten Code Coverage Support<a href="https://jestjs.io/fr/blog/2016/09/01/jest-15#rewritten-code-coverage-support" class="hash-link" aria-label="Direct link to Rewritten Code Coverage Support" title="Direct link to Rewritten Code Coverage Support">‚Äã</a></h2>
<p>Code coverage in Jest can be used through <code>jest --coverage</code> and requires no additional packages or configuration. Code coverage support was completely rewritten and a new <code>collectCoverageFrom</code> option was added to collect code coverage information from entire projects, including <strong>untested files</strong>. Note that this option uses globs as we are hoping to further simplify configuration options in the future and provide a simpler alternative to regular expressions. See Jest's <a href="https://github.com/jestjs/jest/blob/9088f6517813f6c089cf52e980d6579511dcde88/package.json#L47" target="_blank" rel="noopener noreferrer">package.json</a> for an example.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="other-improvements">Other Improvements<a href="https://jestjs.io/fr/blog/2016/09/01/jest-15#other-improvements" class="hash-link" aria-label="Direct link to Other Improvements" title="Direct link to Other Improvements">‚Äã</a></h2>
<p>A huge number of other improvements were also made:</p>
<ul>
<li>Improved performance of small test runs.</li>
<li>Jest now uses verbose mode when only a single test file is executed.</li>
<li>Added an <code>--env</code> option to override the configured test environment.</li>
<li><code>moduleNameMapper</code> now uses a resolution algorithm.</li>
<li>Jest now works with paths that have special characters in them, like parenthesis.</li>
<li>Added <code>global.global</code> to the node environment.</li>
<li>Fixed <code>babel-plugin-jest-hoist</code>'s invalid error when a random user function was called <code>mock</code>.</li>
<li>Fix <code>testEnvironment</code> resolution to prefer <code>jest-environment-{name}</code> instead of <code>{name}</code> only. This prevents a module collision when using <code>jsdom</code> as test environment.</li>
<li>Improvements to Jest's own test infra by merging integration and unit tests. Code coverage is now collected for Jest.</li>
</ul>
<p>We are happy when looking back at all the changes we have made together with the help from the community and couldn't be more excited to make Jest even better over the course of the next few months. Please <a href="https://github.com/jestjs/jest/issues" target="_blank" rel="noopener noreferrer">file an issue</a> if something isn't working as expected and send us pull requests.</p>
<p>Next up: <a href="https://github.com/jestjs/jest/pull/1480" target="_blank" rel="noopener noreferrer">Concurrent Reporter</a>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest 14.0¬†: Test de snapshot de l'arborescence React]]></title>
            <link>https://jestjs.io/fr/blog/2016/07/27/jest-14</link>
            <guid>https://jestjs.io/fr/blog/2016/07/27/jest-14</guid>
            <pubDate>Wed, 27 Jul 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[One of Jest's philosophies is to provide an integrated ‚Äúzero-configuration‚Äù experience. We want to make it as frictionless as possible to write good tests that are useful. We observed that when engineers are provided with ready-to-use tools, they end up writing more tests, which in turn results in stable and healthy code bases.]]></description>
            <content:encoded><![CDATA[<p>One of Jest's philosophies is to provide an integrated ‚Äúzero-configuration‚Äù experience. We want to make it as frictionless as possible to write good tests that are useful. We observed that when engineers are provided with ready-to-use tools, they end up writing more tests, which in turn results in stable and healthy code bases.</p>
<p>One of the big open questions was how to write React tests efficiently. There are plenty of tools such as <a href="https://facebook.github.io/react/docs/test-utils.html" target="_blank" rel="noopener noreferrer">ReactTestUtils</a> and <a href="https://enzymejs.github.io/enzyme/" target="_blank" rel="noopener noreferrer">enzyme</a>. Both of these tools are great and are actively being used. However engineers frequently told us that they spend more time writing a test than the component itself. As a result many people stopped writing tests altogether which eventually led to instabilities. Engineers told us all they wanted was to make sure their components don't change unexpectedly.</p>
<p>Together with the React team we created a new test renderer for React and added snapshot testing to Jest. Consider this <a href="https://github.com/jestjs/jest/blob/main/examples/snapshot/__tests__/link.test.js" target="_blank" rel="noopener noreferrer">example test</a> for a simple <a href="https://github.com/jestjs/jest/blob/main/examples/snapshot/Link.js" target="_blank" rel="noopener noreferrer">Link component</a>:</p>
<div class="language-javascript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-javascript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#297a29">import</span><span class="token plain"> </span><span class="token imports">renderer</span><span class="token plain"> </span><span class="token keyword module" style="color:#297a29">from</span><span class="token plain"> </span><span class="token string" style="color:#c21325">'react-test-renderer'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#6b2e85">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'Link renders correctly'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#888">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#297a29">const</span><span class="token plain"> tree </span><span class="token operator" style="color:#888">=</span><span class="token plain"> renderer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#888">&lt;</span><span class="token maybe-class-name">Link</span><span class="token plain"> page</span><span class="token operator" style="color:#888">=</span><span class="token string" style="color:#c21325">"http://www.facebook.com"</span><span class="token operator" style="color:#888">&gt;</span><span class="token maybe-class-name">Facebook</span><span class="token operator" style="color:#888">&lt;</span><span class="token operator" style="color:#888">/</span><span class="token maybe-class-name">Link</span><span class="token operator" style="color:#888">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">toJSON</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#6b2e85">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tree</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">toMatchSnapshot</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The first time this test is run, Jest creates a <a href="https://github.com/jestjs/jest/blob/main/examples/snapshot/__tests__/__snapshots__/link.test.js.snap" target="_blank" rel="noopener noreferrer">snapshot file</a> that looks like this:</p>
<div class="language-javascript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-javascript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token plain">exports</span><span class="token punctuation" style="color:#393A34">[</span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token template-string string" style="color:#c21325">Link renders correctly 1</span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#888">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token template-string string" style="color:#c21325"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">&lt;a</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">  className="normal"</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">  href="http://www.facebook.com"</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">  onMouseEnter={[Function bound _onMouseEnter]}</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">  onMouseLeave={[Function bound _onMouseLeave]}&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">  Facebook</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325">&lt;/a&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string string" style="color:#c21325"></span><span class="token template-string template-punctuation string" style="color:#c21325">`</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The snapshot artifact should be committed alongside code changes. We use <a href="https://github.com/thejameskyle/pretty-format" target="_blank" rel="noopener noreferrer">pretty-format</a> to make snapshots human-readable during code review. On subsequent test runs Jest will simply compare the rendered output with the previous snapshot. S'ils sont identiques, le test est r√©ussi. If they don't match, either the implementation has changed and the snapshot needs to be updated with <code>jest -u</code>, or the test runner found a bug in your code that should be fixed.</p>
<p>If we change the address the Link component in our example is pointing to, Jest will print this output:</p>
<p><img loading="lazy" alt="snapshot-testing" src="https://jestjs.io/fr/assets/images/snapshot-8de6b9bafc9754f21e3c61604fc0623c.png" width="1450" height="546" class="img_SS3x"></p>
<p>Now you know that you either need to accept the changes with <code>jest -u</code>, or fix the component if the changes were unintentional. To try out this functionality, please clone the <a href="https://github.com/jestjs/jest/tree/main/examples/snapshot" target="_blank" rel="noopener noreferrer">snapshot example</a>, modify the Link component and run Jest. We updated the <a href="https://jestjs.io/fr/docs/tutorial-react">React Tutorial</a> with a new guide for snapshot testing.</p>
<p>This feature was built by <a href="https://twitter.com/soprano" target="_blank" rel="noopener noreferrer">Ben Alpert</a> and <a href="https://twitter.com/kentaromiura" target="_blank" rel="noopener noreferrer">Cristian Carlesso</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="experimental-react-native-support">Experimental React Native support<a href="https://jestjs.io/fr/blog/2016/07/27/jest-14#experimental-react-native-support" class="hash-link" aria-label="Direct link to Experimental React Native support" title="Direct link to Experimental React Native support">‚Äã</a></h2>
<p>By building a test renderer that targets no specific platform we are finally able to support a full, unmocked version of React Native. We are excited to launch experimental React Native support for Jest through the <code>jest-react-native</code> package.</p>
<p>You can start using Jest with react-native by running <code>yarn add --dev jest-react-native</code> and by adding the preset to your Jest configuration:</p>
<div class="language-json codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-json codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token property" style="color:#82772c">"jest"</span><span class="token operator" style="color:#888">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token property" style="color:#82772c">"preset"</span><span class="token operator" style="color:#888">:</span><span class="token plain"> </span><span class="token string" style="color:#c21325">"jest-react-native"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li><a href="https://jestjs.io/fr/docs/tutorial-react-native#content">Tutorial and setup guide</a></li>
<li><a href="https://github.com/jestjs/jest/tree/main/examples/react-native" target="_blank" rel="noopener noreferrer">Example project</a></li>
<li><a href="https://github.com/bartonhammond/snowflake/pull/110" target="_blank" rel="noopener noreferrer">Example pull request for <em>snowflake</em></a>, a popular react-native open source library.</li>
</ul>
<div class="theme-admonition theme-admonition-info admonition_WCGJ alert alert--info"><div class="admonitionHeading_GCBg"><span class="admonitionIcon_L39b"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_pbrs"><p>The preset currently only implements the minimal set of configuration necessary to get started with React Native testing. We are hoping for community contributions to improve this project. Please try it and file <a href="https://github.com/jestjs/jest/issues" target="_blank" rel="noopener noreferrer">issues</a> or send pull requests!</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="why-snapshot-testing">Why snapshot testing?<a href="https://jestjs.io/fr/blog/2016/07/27/jest-14#why-snapshot-testing" class="hash-link" aria-label="Direct link to Why snapshot testing?" title="Direct link to Why snapshot testing?">‚Äã</a></h2>
<p>For Facebook's native apps we use a system called ‚Äúsnapshot testing‚Äù: a snapshot test system that renders UI components, takes a screenshot and subsequently compares a recorded screenshot with changes made by an engineer. If the screenshots don't match, there are two possibilities: either the change is unexpected or the screenshot can be updated to the new version of the UI component.</p>
<p>While this was the solution we wanted for the web, we also found many problems with such end-to-end tests that snapshot integration tests solve:</p>
<ul>
<li><strong>No flakiness:</strong> Because tests are run in a command line runner instead of a real browser or on a real phone, the test runner doesn't have to wait for builds, spawn browsers, load a page and drive the UI to get a component into the expected state which tends to be flaky and the test results become noisy.</li>
<li><strong>Fast iteration speed:</strong> Engineers want to get results in less than a second rather than waiting for minutes or even hours. If tests don't run quickly like in most end-to-end frameworks, engineers don't run them at all or don't bother writing them in the first place.</li>
<li><strong>Debugging:</strong> It's easy to step into the code of an integration test in JS instead of trying to recreate the screenshot test scenario and debugging what happened in the visual diff.</li>
</ul>
<p>Because we believe snapshot testing can be useful beyond Jest we split the feature into a <a href="https://github.com/jestjs/jest/tree/main/packages/jest-snapshot" target="_blank" rel="noopener noreferrer">jest-snapshot</a> package. We are happy to work with the community to make it more generic so it can be integrated with other test runners and share concepts and infrastructure with each other.</p>
<p>Finally, here is a quote of a Facebook engineer describing how snapshot testing changed his unit testing experience:</p>
<blockquote>
<p>‚ÄúOne of the most challenging aspects of my project was keeping the input and output files for each test case in sync. Each little change in functionality could cause all the output files to change. With snapshot testing I do not need the output files, the snapshots are generated for free by Jest! I can simply inspect how Jest updates the snapshots rather than making the changes manually.‚Äù ‚Äì <a href="https://github.com/kyldvs" target="_blank" rel="noopener noreferrer">Kyle Davis</a> working on <a href="https://github.com/kyldvs/fjs" target="_blank" rel="noopener noreferrer">fjs</a>.</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="whats-next-for-jest">What's next for Jest<a href="https://jestjs.io/fr/blog/2016/07/27/jest-14#whats-next-for-jest" class="hash-link" aria-label="Direct link to What's next for Jest" title="Direct link to What's next for Jest">‚Äã</a></h2>
<p>Recently <a href="https://twitter.com/aarondjents" target="_blank" rel="noopener noreferrer">Aaron Abramov</a> has joined the Jest team full time to improve our unit and integration test infrastructure for Facebook's ads products. For the next few months the Jest team is planning major improvements in these areas:</p>
<ul>
<li><strong>Replace Jasmine:</strong> Jasmine is slowing us down and is not being very actively developed. We started replacing all the Jasmine matchers and are excited to add new features and drop this dependency.</li>
<li><strong>Code Coverage:</strong> When Jest was originally created, tools such as babel didn't exist. Our code coverage support has a bunch of edge cases and isn't always working properly. We are rewriting it to address all the current problems with coverage.</li>
<li><strong>Developer Experience:</strong> This ranges from improving the setup process, the debugging experience to CLI improvements and more documentation.</li>
<li><strong>Mocking:</strong> The mocking system, especially around manual mocks, is not working well and is confusing. We hope to make it more strict and easier to understand.</li>
<li><strong>Performance:</strong> Further performance improvements especially for really large codebases are being worked on.</li>
</ul>
<p>As always, if you have questions or if you are excited to help out, please reach out to us!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest 13.0: Flow & REPL]]></title>
            <link>https://jestjs.io/fr/blog/2016/06/22/jest-13</link>
            <guid>https://jestjs.io/fr/blog/2016/06/22/jest-13</guid>
            <pubDate>Wed, 22 Jun 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[Today we are happy to announce the next major release of Jest. We have made major changes to Jest which are going to benefit you and all of Facebook's JavaScript test infrastructure. Most importantly, we added static types to all of Jest's code during a recent Jest hackathon at Facebook. Fifteen people worked for a day and night to add Flow types to Jest and to add new features to Jest. The Flow types serve two purposes: First, we believe that code is written to be read. Most of the time, code is written only once but read by dozens of people over the course of years. Adding static types to the project helps document the code and helps explain some of the architecture in Jest. Second, adding static types makes maintenance easier and will allow us to more confidently refactor parts of Jest without fear of breakages.]]></description>
            <content:encoded><![CDATA[<p>Today we are happy to announce the next major release of Jest. We have made major changes to Jest which are going to benefit you and all of Facebook's JavaScript test infrastructure. Most importantly, we added static types to all of Jest's code during a recent Jest hackathon at Facebook. Fifteen people worked for a day and night to add <a href="https://flowtype.org/" target="_blank" rel="noopener noreferrer">Flow</a> types to Jest and to add new features to Jest. The Flow types serve two purposes: First, we believe that code is written to be read. Most of the time, code is written only once but read by dozens of people over the course of years. Adding static types to the project helps document the code and helps explain some of the architecture in Jest. Second, adding static types makes maintenance easier and will allow us to more confidently refactor parts of Jest without fear of breakages.</p>
<p>The Flow project has evolved a lot within Facebook and has been successfully adopted across many of our frameworks and almost all of our product code. Adoption can be parallelized incredibly well ‚Äì it can be done file-by-file until enough of the codebase is well-typed. Then, Flow provides real value and helps guide through large changes. Through this, many small edge cases and bugs were found.</p>
<p>With the help of <a href="https://github.com/lerna/lerna" target="_blank" rel="noopener noreferrer">lerna</a>, we continued to modularize the Jest project. With just a small <a href="https://github.com/lerna/lerna#lernajson" target="_blank" rel="noopener noreferrer">update to the configuration</a>, Flow and lerna now get along well with each other. Splitting up Jest into packages helped us rethink module boundaries and enabled us to ship useful <a href="https://github.com/jestjs/jest/tree/main/packages" target="_blank" rel="noopener noreferrer">packages</a> standalone: The <code>jest-runtime</code> and <code>jest-repl</code> cli tools now allow you to run scripts in a sandboxed Jest environment, enabling you to run and debug your app from the command line. This is especially helpful for projects that use Facebook's <code>@providesModule</code> module convention. To get started, just install <code>jest-repl</code> and run it in the same folder you normally run your tests in! We also published a <code>jest-changed-files</code> package that finds changed files in version control for either git or hg, a common thing in developer tools.</p>
<h2 class="anchor anchorWithStickyNavbar_JmGV" id="new-and-improved-features">New and improved features<a href="https://jestjs.io/fr/blog/2016/06/22/jest-13#new-and-improved-features" class="hash-link" aria-label="Direct link to New and improved features" title="Direct link to New and improved features">‚Äã</a></h2>
<ul>
<li>Added a notification plugin that shows a test run notification when using <code>--notify</code>.</li>
<li>Added a <code>browser</code> config option to properly resolve npm packages with a browser field in <code>package.json</code> if you are writing tests for client side apps.</li>
<li>Improved ‚Äúno tests found message‚Äù which will now report which tests were found and how they were filtered.</li>
<li>Added <code>jest.isMockFunction(jest.fn())</code> to test for mock functions.</li>
<li>Improved test reporter printing and added a test failure summary when running many tests.</li>
<li>Added support for mocking virtual modules through <code>jest.mock('Module', implementation, {virtual: true})</code>.</li>
<li>Removed the <code>.haste_cache</code> folder. Jest now uses the operating system's preferred temporary file location.</li>
<li>Added the duration of individual tests in verbose mode.</li>
<li>Added the ability to record snapshots in Jest. We'll be publishing a separate blog post about this feature soon.</li>
</ul>
<p>Finally, we have received a complete website redesign done by Matthew Johnston and added documentation for using <a href="https://jestjs.io/fr/docs/webpack">Jest with webpack</a>. Happy Jesting&nbsp;!</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Jest 11.0]]></title>
            <link>https://jestjs.io/fr/blog/2016/04/12/jest-11</link>
            <guid>https://jestjs.io/fr/blog/2016/04/12/jest-11</guid>
            <pubDate>Tue, 12 Apr 2016 00:00:00 GMT</pubDate>
            <description><![CDATA[Aujourd'hui, nous annon√ßons un passage √† la version majeure de Jest avec Jest 11.0 comme premi√®re version majeure. Jest a √©t√© utilis√© par les ing√©nieurs de Facebook et sur nos syst√®mes d‚Äôint√©gration continue depuis des ann√©es et nous pensons que Jest a √©t√© bien plus qu‚Äôun ‚Äú1. ¬ª pour une longue p√©riode. Ceci est similaire √† un changement l'√©quipe React a fait.]]></description>
            <content:encoded><![CDATA[<p>Aujourd'hui, nous annon√ßons un passage √† la version majeure de Jest avec Jest 11.0 comme premi√®re version majeure. Jest a √©t√© utilis√© par les ing√©nieurs de Facebook et sur nos syst√®mes d‚Äôint√©gration continue depuis des ann√©es et nous pensons que Jest a √©t√© bien plus qu‚Äôun ‚Äú1. ¬ª pour une longue p√©riode. Ceci est similaire √† un changement <a href="http://facebook.github.io/react/blog/2016/02/19/new-versioning-scheme.html" target="_blank" rel="noopener noreferrer">l'√©quipe React a fait</a>.</p>
<p>Si vous utilisez Jest 0.9 ou Jest 0.10, la mise √† jour devrait √™tre transparente. Tous les changements de ces derniers mois ont √©t√© introduits dans Jest 11.0.</p>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="new-in-jest-110">New in Jest 11.0<a href="https://jestjs.io/fr/blog/2016/04/12/jest-11#new-in-jest-110" class="hash-link" aria-label="Direct link to New in Jest 11.0" title="Direct link to New in Jest 11.0">‚Äã</a></h3>
<h4 class="anchor anchorWithStickyNavbar_JmGV" id="int√©gration-de-babel-et-configuration-simplifi√©e">Int√©gration de Babel et configuration simplifi√©e<a href="https://jestjs.io/fr/blog/2016/04/12/jest-11#int%C3%A9gration-de-babel-et-configuration-simplifi%C3%A9e" class="hash-link" aria-label="Direct link to Int√©gration de Babel et configuration simplifi√©e" title="Direct link to Int√©gration de Babel et configuration simplifi√©e">‚Äã</a></h4>
<p><code>babel-jest</code> was adopted within the newly modularized Jest <a href="https://github.com/jestjs/jest/tree/main/packages" target="_blank" rel="noopener noreferrer">repository</a> and it is now seamlessly integrated into Jest. Si vous effectuez une mise √† jour depuis une ancienne version de Jest ou si vous souhaitez adopter Jest, Nous vous recommandons de lire le <a href="https://jestjs.io/fr/docs/getting-started">guide pour commencer</a>.</p>
<p>Jest a pr√©c√©demment fourni des API telles que <code>jest.dontMock</code> qui d√©moque un module qui est par la suite requis en utilisant la fonction <code>require</code>. Les tests de code ressemblaient g√©n√©ralement √† ceci :</p>
<div class="language-javascript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-javascript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token plain">jest</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">dontMock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'LikeButton'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#297a29">const</span><span class="token plain"> </span><span class="token maybe-class-name">LikeButton</span><span class="token plain"> </span><span class="token operator" style="color:#888">=</span><span class="token plain"> </span><span class="token function" style="color:#6b2e85">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'LikeButton'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// LikeButton est d√©mocked</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Cependant, avec les d√©clarations d'importation ES2015, cela ne fonctionnera plus. Par la sp√©cification <code>import</code>s sont hiss√©s en haut de leur bloc de code. Code √©crit comme ceci :</p>
<div class="language-javascript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-javascript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token plain">jest</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">dontMock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'LikeButton'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">importez le </span><span class="token maybe-class-name">LikeButton</span><span class="token plain"> depuis </span><span class="token string" style="color:#c21325">'LikeButton'</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>lorsqu'il est ex√©cut√©, serait en fait ex√©cut√© dans cet ordre:</p>
<div class="language-javascript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-javascript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#297a29">import</span><span class="token plain"> </span><span class="token maybe-class-name">LikeButton</span><span class="token plain"> depuis </span><span class="token string" style="color:#c21325">'LikeButton'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Cela se produit avant l'appel de dontMock.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jest</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">dontMock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'LikeButton'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Le module LikeButton serait donc bouch√©, m√™me si nous appelons explicitement <code>dontMock</code>.</p>
<p>Quand les derni√®res versions de Jest et babel-jest sont utilis√©es ensemble, appelle aux nouvelles APIs <code>jest. nmock</code>, <code>jest.mock</code>, <code>jest. isableAutomock</code> et <code>jest.enableAutomock</code> sont hiss√©s en haut de leur bloc, avant les instructions d'importation ES2015.</p>
<div class="language-javascript codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-javascript codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token plain">jest</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">dontMock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'LikeButton'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#297a29">const</span><span class="token plain"> </span><span class="token maybe-class-name">LikeButton</span><span class="token plain"> </span><span class="token operator" style="color:#888">=</span><span class="token plain"> </span><span class="token function" style="color:#6b2e85">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'LikeButton'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// LikeButton est d√©mocked!</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_JmGV" id="automocking-am√©liorations">(Auto)Mocking Am√©liorations<a href="https://jestjs.io/fr/blog/2016/04/12/jest-11#automocking-am%C3%A9liorations" class="hash-link" aria-label="Direct link to (Auto)Mocking Am√©liorations" title="Direct link to (Auto)Mocking Am√©liorations">‚Äã</a></h4>
<p>Nous avons apport√© de nombreuses am√©liorations et corrections de bugs √† la fonctionnalit√© d'automocking de Jest, am√©lior√© le support de npm3 et ajout√© de nouvelles API manuelles. De nombreuses personnes ont exprim√© un d√©sir d'utiliser Jest avec la fonction d'automatisation d√©sactiv√©e. Une option de configuration globale <a href="https://jestjs.io/fr/docs/api#automock-boolean"><code>automock</code></a>, qui peut √™tre d√©finie √† <code>false</code>, a √©t√© ajout√©e.</p>
<p>Nous avons √©galement ajout√© deux nouvelles API pour simplifier les bouchons manuels. <code>jest.mock</code> sp√©cifie une usine manuelle de bouchon pour un test sp√©cifique :</p>
<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Impl√©mente un bouchon pour un module hypoth√©tique "sum".</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">jest</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">mock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'sum'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#888">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#297a29">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">a</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#888">=&gt;</span><span class="token plain"> a </span><span class="token operator" style="color:#888">+</span><span class="token plain"> b</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#297a29">const</span><span class="token plain"> sum </span><span class="token operator" style="color:#888">=</span><span class="token plain"> </span><span class="token function" style="color:#6b2e85">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#c21325">'sum'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#6b2e85">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#1373c2">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#1373c2">4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 5</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Et <code>jest.fn</code> a √©t√© ajout√© pour faciliter la cr√©ation de fonctions de bouchon :</p>
<div class="language-js codeBlockContainer_mQmQ theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f6f6"><div class="codeBlockContent_D5yF"><pre tabindex="0" class="prism-code language-js codeBlock_RMoD thin-scrollbar"><code class="codeBlockLines_AclH"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Create a mock function</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#297a29">const</span><span class="token plain"> mockFn </span><span class="token operator" style="color:#888">=</span><span class="token plain"> jest</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">fn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#888">=&gt;</span><span class="token plain"> </span><span class="token number" style="color:#1373c2">42</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#6b2e85">mockFn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 42</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#6b2e85">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">mockFn</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">calls</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#6b2e85">toBe</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#1373c2">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_aaMX"><button type="button" aria-label="Copier le code dans le presse-papiers" title="Copier" class="clean-btn"><span class="copyButtonIcons_z5j7" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_FoOz"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_L0B6"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_JmGV" id="performance">Performance<a href="https://jestjs.io/fr/blog/2016/04/12/jest-11#performance" class="hash-link" aria-label="Direct link to Performance" title="Direct link to Performance">‚Äã</a></h4>
<p>Nous avons r√©cemment √©crit sur quelques <a href="https://jestjs.io/fr/blog/2016/03/11/javascript-unit-testing-performance">am√©liorations de performance</a> que nous avons faites √† Jest. Plus particuli√®rement, le temps de d√©marrage a √©t√© am√©lior√© et nous sommes maintenant dans un endroit confortable en ce qui concerne les performances.</p>
<h4 class="anchor anchorWithStickyNavbar_JmGV" id="am√©liorations-du-jasmine-et-du-test-assertion">Am√©liorations du Jasmine et du Test Assertion<a href="https://jestjs.io/fr/blog/2016/04/12/jest-11#am%C3%A9liorations-du-jasmine-et-du-test-assertion" class="hash-link" aria-label="Direct link to Am√©liorations du Jasmine et du Test Assertion" title="Direct link to Am√©liorations du Jasmine et du Test Assertion">‚Äã</a></h4>
<p>Quand Jest a √©t√© open source, il a √©t√© exp√©di√© avec Jasmine 1. Jest was designed to work with any test assertion library and optional Jasmine 2 support was added through an <a href="https://github.com/jestjs/jest/pull/330" target="_blank" rel="noopener noreferrer">external contribution</a> at the end of last year. Ce changement apporte de meilleures performances et fournit de meilleures APIs par rapport √† la version pr√©c√©dente de Jasmine. Ainsi, nous avons converti tous nos tests JavaScript sur Facebook en Jasmine 2. Avec Jest 11, nous faisons de Jasmine 2 la nouvelle valeur par d√©faut. Jasmine 1 peut √™tre activ√© via l'option de configuration <a href="https://jestjs.io/fr/docs/api#testrunner-string"><code>testRunner</code></a>.</p>
<p>Nous avons √©galement fait de nombreuses mises √† jour autour de Jasmine. Les messages d'√©chec pour les correspondants personnalis√©s fournis pour les fonctions de bouchon de Jest ont √©t√© am√©lior√©s et fonctionneront maintenant aussi pour les espions Jasmine. Les tests ignor√©s, lorsque vous utilisez <code>fit</code> ou <code>fdescribe,</code> sont maintenant correctement signal√©s √† la fin d'une ex√©cution de test.</p>
<h4 class="anchor anchorWithStickyNavbar_JmGV" id="autres-modifications">Autres modifications<a href="https://jestjs.io/fr/blog/2016/04/12/jest-11#autres-modifications" class="hash-link" aria-label="Direct link to Autres modifications" title="Direct link to Autres modifications">‚Äã</a></h4>
<p>La commande <code>jest --watch</code> a √©t√© r√©√©crite et am√©lior√©e. Par d√©faut, il ex√©cute maintenant uniquement les tests li√©s aux fichiers modifi√©s. Si vous voulez ex√©cuter tous les tests √† chaque modification, vous pouvez ex√©cuter <code>jest --watch=all</code>. La sortie du journal d√©taill√© a √©galement √©t√© am√©lior√©e et nous avons ajout√© des avertissements et des messages d'erreur plus utiles. Nous avons ajout√© une option de configuration <a href="https://jestjs.io/fr/docs/api#testenvironment-string"><code>testEnvironment</code></a> pour personnaliser l'environnement de test. Par exemple, lors de la construction d'un service de n≈ìud, un environnement sp√©cial <code>node</code> au lieu de <code>jsdom</code> peut √™tre utilis√©. Enfin, le site web et toute la documentation ont √©t√© enti√®rement r√©√©crits.</p>
<p>All changes from the past few months can be found in the <a href="https://github.com/jestjs/jest/blob/main/CHANGELOG.md" target="_blank" rel="noopener noreferrer">CHANGELOG</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_JmGV" id="contributions-et-avenir-de-jest">Contributions et avenir de Jest<a href="https://jestjs.io/fr/blog/2016/04/12/jest-11#contributions-et-avenir-de-jest" class="hash-link" aria-label="Direct link to Contributions et avenir de Jest" title="Direct link to Contributions et avenir de Jest">‚Äã</a></h3>
<p>Au cours des six derniers mois, Jest a re√ßu des changements significatifs de la part d'un grand nombre de nouveaux contributeurs. J'aimerais remercier tous les contributeurs open source et les employ√©s de Facebook pour leur aide √† rendre Jest meilleur pour tout le monde. Nouveaux contributeurs: Alexander Juarez, Christian Lentfort, Cristian Carlesso, Dan Abramov, Dmitrii Abramov, Evan Jacobs, James Friend, James Ide, Jeff Carpenter, Joe Lencioni, Michael Diolosa, Nik Graf, Pavel Prokopenko, Pavel Volokitin, Sebastian Mayr et ShihChi Huang.</p>
<p>Avec votre soutien, nous sommes impatients de rendre Jest encore meilleur dans les mois √† venir. Nous travaillons actuellement sur l'am√©lioration des tests React (Native), une meilleure prise en charge de la couverture de code et planifie d'ouvrir la source de notre ex√©cuteur de test interne qui permet √† plusieurs projets Jest d'√™tre ex√©cut√©s avec une seule commande d'ex√©cution.</p>]]></content:encoded>
        </item>
    </channel>
</rss>