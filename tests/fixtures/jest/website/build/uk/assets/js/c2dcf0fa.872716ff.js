"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[4298],{652:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>i});var o=c(4246),t=c(1670);const s={id:"mock-functions",title:"\u0424\u0443\u043d\u043a\u0446\u0456\u0457-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0457"},a=void 0,l={unversionedId:"mock-functions",id:"version-29.4/mock-functions",title:"\u0424\u0443\u043d\u043a\u0446\u0456\u0457-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0457",description:"\u0424\u0443\u043d\u043a\u0446\u0456\u0457-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0457 \u0437\u043d\u0430\u0447\u043d\u043e \u0441\u043f\u0440\u043e\u0449\u0443\u044e\u0442\u044c \u0442\u0435\u0441\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043f\u043e\u0432\u2019\u044f\u0437\u0430\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0443, \u043d\u0430\u0434\u0430\u044e\u0447\u0438 \u043c\u043e\u0436\u043b\u0438\u0432\u0456\u0441\u0442\u044c \u0441\u0442\u0438\u0440\u0430\u0442\u0438 \u0441\u043f\u0440\u0430\u0432\u0436\u043d\u044e \u0456\u043c\u043f\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0446\u0456\u044e \u0444\u0443\u043d\u043a\u0446\u0457, \u0437\u0430\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0432\u0438\u043a\u043b\u0438\u043a\u0438 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 (\u0456 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438, \u044f\u043a\u0456 \u0431\u0443\u043b\u0438 \u0457\u0439 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u0456), \u0437\u0430\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0435\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0438, \u044f\u043a\u0456 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 \u0444\u0443\u043d\u043a\u0446\u0456\u044f-\u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440, \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u043d\u0430 \u0437 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 new \u0456 \u0432\u043a\u0430\u0437\u0443\u0432\u0430\u0442\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f, \u044f\u043a\u0456 \u043c\u0430\u0454 \u043f\u043e\u0432\u0435\u0440\u043d\u0443\u0442\u0438 \u0444\u0443\u043d\u043a\u0446\u0456\u044f \u043f\u0456\u0434 \u0447\u0430\u0441 \u0442\u0435\u0441\u0442\u0443\u0432\u0430\u043d\u043d\u044f.",source:"@site/i18n/uk/docusaurus-plugin-content-docs/version-29.4/MockFunctions.md",sourceDirName:".",slug:"/mock-functions",permalink:"/uk/docs/29.4/mock-functions",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/project/jest-v2/uk",tags:[],version:"29.4",frontMatter:{id:"mock-functions",title:"\u0424\u0443\u043d\u043a\u0446\u0456\u0457-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0457"},sidebar:"docs",previous:{title:"\u041f\u0456\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u0442\u0430 \u043e\u0447\u0438\u0441\u0442\u043a\u0430",permalink:"/uk/docs/29.4/setup-teardown"},next:{title:"\u041f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0430 Jest",permalink:"/uk/docs/29.4/jest-platform"}},r={},i=[{value:"\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f \u0444\u0443\u043d\u043a\u0446\u0456\u0439-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0439",id:"\u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f-\u0444\u0443\u043d\u043a\u0446\u0456\u0439-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0439",level:2},{value:"\u0412\u043b\u0430\u0441\u0442\u0438\u0432\u0456\u0441\u0442\u044c <code>.mock</code>",id:"\u0432\u043b\u0430\u0441\u0442\u0438\u0432\u0456\u0441\u0442\u044c-mock",level:2},{value:"\u0406\u043c\u0456\u0442\u0430\u0446\u0456\u044f \u043f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u044c",id:"\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u044f-\u043f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u0438\u0445-\u0437\u043d\u0430\u0447\u0435\u043d\u044c",level:2},{value:"\u0406\u043c\u0456\u0442\u0430\u0446\u0456\u044f \u043c\u043e\u0434\u0443\u043b\u0456\u0432",id:"\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u044f-\u043c\u043e\u0434\u0443\u043b\u0456\u0432",level:2},{value:"\u0427\u0430\u0441\u0442\u043a\u043e\u0432\u0430 \u0456\u043c\u0456\u0442\u0430\u0446\u0456\u044f",id:"\u0447\u0430\u0441\u0442\u043a\u043e\u0432\u0430-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u044f",level:2},{value:"\u0420\u0435\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0457",id:"\u0440\u0435\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0457",level:2},{value:"Mock Names",id:"mock-names",level:2},{value:"\u041a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0446\u044c\u043a\u0456 \u043c\u0430\u0442\u0447\u0435\u0440\u0438",id:"\u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0446\u044c\u043a\u0456-\u043c\u0430\u0442\u0447\u0435\u0440\u0438",level:2}];function d(e){const n=Object.assign({p:"p",code:"code",a:"a",h2:"h2",pre:"pre"},(0,t.ah)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["\u0424\u0443\u043d\u043a\u0446\u0456\u0457-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0457 \u0437\u043d\u0430\u0447\u043d\u043e \u0441\u043f\u0440\u043e\u0449\u0443\u044e\u0442\u044c \u0442\u0435\u0441\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043f\u043e\u0432\u2019\u044f\u0437\u0430\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0443, \u043d\u0430\u0434\u0430\u044e\u0447\u0438 \u043c\u043e\u0436\u043b\u0438\u0432\u0456\u0441\u0442\u044c \u0441\u0442\u0438\u0440\u0430\u0442\u0438 \u0441\u043f\u0440\u0430\u0432\u0436\u043d\u044e \u0456\u043c\u043f\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0446\u0456\u044e \u0444\u0443\u043d\u043a\u0446\u0457, \u0437\u0430\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0432\u0438\u043a\u043b\u0438\u043a\u0438 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 (\u0456 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438, \u044f\u043a\u0456 \u0431\u0443\u043b\u0438 \u0457\u0439 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u0456), \u0437\u0430\u043f\u0438\u0441\u0443\u0432\u0430\u0442\u0438 \u0435\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0438, \u044f\u043a\u0456 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 \u0444\u0443\u043d\u043a\u0446\u0456\u044f-\u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440, \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u043d\u0430 \u0437 \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u043e\u044e \u043e\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u0430 ",(0,o.jsx)(n.code,{children:"new"})," \u0456 \u0432\u043a\u0430\u0437\u0443\u0432\u0430\u0442\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f, \u044f\u043a\u0456 \u043c\u0430\u0454 \u043f\u043e\u0432\u0435\u0440\u043d\u0443\u0442\u0438 \u0444\u0443\u043d\u043a\u0446\u0456\u044f \u043f\u0456\u0434 \u0447\u0430\u0441 \u0442\u0435\u0441\u0442\u0443\u0432\u0430\u043d\u043d\u044f."]}),"\n",(0,o.jsxs)(n.p,{children:["\u0406\u0441\u043d\u0443\u0454 \u0434\u0432\u0430 \u0441\u043f\u043e\u0441\u043e\u0431\u0438 \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u0444\u0443\u043d\u043a\u0446\u0456\u0439-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0439: \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u0432 \u043a\u043e\u0434\u0456 \u0442\u0435\u0441\u0442\u0456\u0432 \u0430\u0431\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044f ",(0,o.jsx)(n.a,{href:"/uk/docs/29.4/manual-mocks",children:(0,o.jsx)(n.code,{children:"\u0440\u0443\u0447\u043d\u043e\u0457 \u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0457"})})," \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0432\u0438\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0437\u0430\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0456 \u043c\u043e\u0434\u0443\u043b\u044f."]}),"\n",(0,o.jsx)(n.h2,{id:"\u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f-\u0444\u0443\u043d\u043a\u0446\u0456\u0439-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0439",children:"\u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f \u0444\u0443\u043d\u043a\u0446\u0456\u0439-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0439"}),"\n",(0,o.jsxs)(n.p,{children:["\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0443\u044f\u0432\u0438\u043c\u043e, \u0449\u043e \u043c\u0438 \u0442\u0435\u0441\u0442\u0443\u0454\u043c\u043e \u0440\u0435\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044e \u0444\u0443\u043d\u043a\u0446\u0456\u0457 ",(0,o.jsx)(n.code,{children:"forEach"}),", \u044f\u043a\u0430 \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u0454 \u043a\u043e\u043b\u043b\u0431\u0435\u043a \u0434\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0433\u043e \u0435\u043b\u0435\u043c\u0435\u043d\u0442\u0443 \u0432 \u043d\u0430\u0434\u0430\u043d\u043e\u043c\u0443 \u043c\u0430\u0441\u0438\u0432\u0456."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="forEach.js"',children:"export function forEach(items, callback) {\n  for (let index = 0; index < items.length; index++) {\n    callback(items[index]);\n  }\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u0429\u043e\u0431 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0443\u0432\u0430\u0442\u0438 \u0446\u044e \u0444\u0443\u043d\u043a\u0446\u0456\u044e, \u043c\u0438 \u043c\u043e\u0436\u0435\u043c\u043e \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 \u0444\u0443\u043d\u043a\u0446\u0456\u044e-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u044e \u0456 \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u0438\u0442\u0438 \u0457\u0457 \u0441\u0442\u0430\u043d, \u0449\u043e\u0431 \u043f\u0435\u0440\u0435\u043a\u043e\u043d\u0430\u0442\u0438\u0441\u044f, \u0449\u043e \u0437\u0432\u043e\u0440\u043e\u0442\u043d\u0456\u0439 \u0432\u0438\u043a\u043b\u0438\u043a \u0431\u0443\u0432 \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u043d\u0438\u0439, \u044f\u043a \u0456 \u043e\u0447\u0456\u043a\u0443\u0432\u0430\u043b\u043e\u0441\u044f."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="forEach.test.js"',children:"const forEach = require('./forEach');\n\nconst mockCallback = jest.fn(x => 42 + x);\n\ntest('forEach mock function', () => {\n  forEach([0, 1], mockCallback);\n\n  // \u0424\u0443\u043d\u043a\u0446\u0456\u044f-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u044f \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u0454\u0442\u044c\u0441\u044f \u0434\u0432\u0456\u0447\u0456\n  expect(mockCallback.mock.calls).toHaveLength(2);\n\n  // \u041f\u0435\u0440\u0448\u0438\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043f\u0435\u0440\u0448\u043e\u0433\u043e \u0432\u0438\u043a\u043b\u0438\u043a\u0443 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u0431\u0443\u0432 0\n  expect(mockCallback.mock.calls[0][0]).toBe(0);\n\n  // \u041f\u0435\u0440\u0448\u0438\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0432\u0438\u043a\u043b\u0438\u043a\u0443 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u0431\u0443\u0432 1\n  expect(mockCallback.mock.calls[1][0]).toBe(1);\n\n  // \u041f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u0435\u0440\u0448\u043e\u0433\u043e \u0432\u0438\u043a\u043b\u0438\u043a\u0443 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u0431\u0443\u043b\u043e 42\n  expect(mockCallback.mock.results[0].value).toBe(42);\n});\n"})}),"\n",(0,o.jsxs)(n.h2,{id:"\u0432\u043b\u0430\u0441\u0442\u0438\u0432\u0456\u0441\u0442\u044c-mock",children:["\u0412\u043b\u0430\u0441\u0442\u0438\u0432\u0456\u0441\u0442\u044c ",(0,o.jsx)(n.code,{children:".mock"})]}),"\n",(0,o.jsxs)(n.p,{children:["\u0412\u0441\u0456 \u0444\u0443\u043d\u043a\u0446\u0456\u0457-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0457 \u043c\u0430\u044e\u0442\u044c \u0441\u043f\u0435\u0446\u0456\u0430\u043b\u044c\u043d\u0443 \u0432\u043b\u0430\u0441\u0442\u0438\u0432\u0456\u0441\u0442\u044c ",(0,o.jsx)(n.code,{children:".mock"}),", \u0434\u0435 \u0437\u0431\u0435\u0440\u0456\u0433\u0430\u0454\u0442\u044c\u0441\u044f \u0456\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0456\u044f \u043f\u0440\u043e \u0442\u0435, \u044f\u043a \u0444\u0443\u043d\u043a\u0446\u0456\u044f \u0431\u0443\u043b\u0430 \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u043d\u0430 \u0456 \u044f\u043a\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0432\u043e\u043d\u0430 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u043b\u0430. \u0412\u043b\u0430\u0441\u0442\u0438\u0432\u0456\u0441\u0442\u044c ",(0,o.jsx)(n.code,{children:".mock"})," \u0442\u0430\u043a\u043e\u0436 \u0432\u0456\u0434\u0441\u0442\u0435\u0436\u0443\u0454 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f ",(0,o.jsx)(n.code,{children:"this"})," \u0434\u043b\u044f \u043a\u043e\u0436\u043d\u043e\u0433\u043e \u0432\u0438\u043a\u043b\u0438\u043a\u0443, \u0449\u043e \u0434\u043e\u0437\u0432\u043e\u043b\u044f\u0454 \u0432\u0438\u0432\u0447\u0430\u0442\u0438 \u0457\u0445 \u043f\u0456\u0437\u043d\u0456\u0448\u0435:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const myMock1 = jest.fn();\nconst a = new myMock1();\nconsole.log(myMock1.mock.instances);\n// > [ <a> ]\n\nconst myMock2 = jest.fn();\nconst b = {};\nconst bound = myMock2.bind(b);\nbound();\nconsole.log(myMock2.mock.contexts);\n// > [ <b> ]\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u041d\u0430\u0441\u0442\u0443\u043f\u043d\u0456 \u0432\u043b\u0430\u0441\u0442\u0438\u0432\u043e\u0441\u0442\u0456 \u0444\u0443\u043d\u043a\u0446\u0456\u0439-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0439 \u0434\u0443\u0436\u0435 \u043a\u043e\u0440\u0438\u0441\u043d\u0456 \u0432 \u0442\u0435\u0441\u0442\u0430\u0445 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0432\u0456\u0440\u043a\u0438 \u0442\u043e\u0433\u043e, \u044f\u043a \u0446\u0456 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u0431\u0443\u043b\u0438 \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u043d\u0456, \u044f\u043a\u0456 \u0435\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0438 \u0431\u0443\u043b\u0438 \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u0456 \u0430\u0431\u043e \u044f\u043a\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0432\u043e\u043d\u0438 \u043f\u043e\u0432\u0435\u0440\u043d\u0443\u043b\u0438:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// \u0424\u0443\u043d\u043a\u0446\u0456\u044f \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u0454\u0442\u044c\u0441\u044f \u0440\u0456\u0432\u043d\u043e \u043e\u0434\u0438\u043d \u0440\u0430\u0437\nexpect(someMockFunction.mock.calls).toHaveLength(1);\n\n// \u041f\u0435\u0440\u0448\u0438\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043f\u0435\u0440\u0448\u043e\u0433\u043e \u0432\u0438\u043a\u043b\u0438\u043a\u0443 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u0431\u0443\u0432 'first arg'\nexpect(someMockFunction.mock.calls[0][0]).toBe('first arg');\n\n// \u0414\u0440\u0443\u0433\u0438\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043f\u0435\u0440\u0448\u043e\u0433\u043e \u0432\u0438\u043a\u043b\u0438\u043a\u0443 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u0431\u0443\u0432 'second arg'\nexpect(someMockFunction.mock.calls[0][1]).toBe('second arg');\n\n// \u041f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u043f\u0435\u0440\u0448\u043e\u0433\u043e \u0432\u0438\u043a\u043b\u0438\u043a\u0443 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u0431\u0443\u043b\u043e 'return value'\nexpect(someMockFunction.mock.results[0].value).toBe('return value');\n\n// \u0424\u0443\u043d\u043a\u0446\u0456\u044f \u0432\u0438\u043a\u043b\u0438\u043a\u0430\u0454\u0442\u044c\u0441\u044f \u0437 \u043f\u0435\u0432\u043d\u0438\u043c \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043e\u043c `this`: \u043e\u0431'\u0454\u043a\u0442 `element`.\nexpect(someMockFunction.mock.contexts[0]).toBe(element);\n\n// \u0415\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0438 \u0446\u0456\u0454\u0457 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0442\u044c\u0441\u044f \u0440\u0456\u0432\u043d\u043e \u0434\u0432\u0456\u0447\u0456\nexpect(someMockFunction.mock.instances.length).toBe(2);\n\n// \u041f\u0435\u0440\u0448\u0438\u0439 \u0435\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 \u043e\u0431'\u0454\u043a\u0442\n// \u0437 \u0432\u043b\u0430\u0441\u0442\u0438\u0432\u0456\u0441\u0442\u044e `name`, \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u044f\u043a\u043e\u0457 'test'\nexpect(someMockFunction.mock.instances[0].name).toBe('test');\n\n// \u041f\u0435\u0440\u0448\u0438\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043e\u0441\u0442\u0430\u043d\u043d\u044c\u043e\u0433\u043e \u0432\u0438\u043a\u043b\u0438\u043a\u0443 \u0444\u0443\u043d\u043a\u0446\u0456\u0457 \u0431\u0443\u0432 'test'\nexpect(someMockFunction.mock.lastCall[0]).toBe('test');\n"})}),"\n",(0,o.jsx)(n.h2,{id:"\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u044f-\u043f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u0438\u0445-\u0437\u043d\u0430\u0447\u0435\u043d\u044c",children:"\u0406\u043c\u0456\u0442\u0430\u0446\u0456\u044f \u043f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u044c"}),"\n",(0,o.jsx)(n.p,{children:"\u0424\u0443\u043d\u043a\u0446\u0456\u0457-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0457 \u0442\u0430\u043a\u043e\u0436 \u043c\u043e\u0436\u0443\u0442\u044c \u0431\u0443\u0442\u0438 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u0456, \u0449\u043e\u0431 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f \u0443 \u0432\u0430\u0448 \u043a\u043e\u0434 \u043f\u0456\u0434 \u0447\u0430\u0441 \u0442\u0435\u0441\u0442\u0443:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const myMock = jest.fn();\nconsole.log(myMock());\n// > undefined\n\nmyMock.mockReturnValueOnce(10).mockReturnValueOnce('x').mockReturnValue(true);\n\nconsole.log(myMock(), myMock(), myMock(), myMock());\n// > 10, 'x', true, true\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u0424\u0443\u043d\u043a\u0446\u0456\u0457-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0457 \u0442\u0430\u043a\u043e\u0436 \u0434\u0443\u0436\u0435 \u0435\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u0456 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0443\u0432\u0430\u043d\u043d\u044f \u043a\u043e\u0434\u0443, \u044f\u043a\u0438\u0439 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454 \u0444\u0443\u043d\u043a\u0446\u0456\u043e\u043d\u0430\u043b\u044c\u043d\u0438\u0439 \u0441\u0442\u0438\u043b\u044c. \u041a\u043e\u0434, \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0439 \u0432 \u0442\u0430\u043a\u043e\u043c\u0443 \u0441\u0442\u0438\u043b\u0456, \u0434\u043e\u0437\u0432\u043e\u043b\u044f\u0454 \u0443\u043d\u0438\u043a\u0430\u0442\u0438 \u0441\u043a\u043b\u0430\u0434\u043d\u043e\u0457 \u043f\u0456\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0438 \u0434\u043b\u044f \u0432\u0456\u0434\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u043f\u043e\u0432\u0435\u0434\u0456\u043d\u043a\u0438 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0443, \u0432 \u044f\u043a\u043e\u043c\u0443 \u0432\u0456\u043d \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454\u0442\u044c\u0441\u044f, \u043d\u0430 \u043a\u043e\u0440\u0438\u0441\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0456 \u0437\u043d\u0430\u0447\u0435\u043d\u044c \u043f\u0440\u044f\u043c\u043e \u0432 \u0442\u0435\u0441\u0442 \u0431\u0435\u0437\u043f\u043e\u0441\u0435\u0440\u0435\u0434\u043d\u044c\u043e \u043f\u0435\u0440\u0435\u0434 \u0442\u0438\u043c, \u044f\u043a \u0432\u043e\u043d\u0438 \u0431\u0443\u0434\u0443\u0442\u044c \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u0456."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const filterTestFn = jest.fn();\n\n// \u041d\u0430\u043b\u0430\u0448\u0442\u043e\u0432\u0443\u0454\u043c\u043e \u0456\u043c\u0456\u0442\u0430\u0446\u0456\u044e \u043d\u0430 \u043f\u043e\u0432\u0435\u0440\u043d\u0435\u043d\u043d\u044f `true` \u043f\u0456\u0441\u043b\u044f \u043f\u0435\u0440\u0448\u043e\u0433\u043e\n// \u0456 `false` \u043f\u0456\u0441\u043b\u044f \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0432\u0438\u043a\u043b\u0438\u043a\u0443\nfilterTestFn.mockReturnValueOnce(true).mockReturnValueOnce(false);\n\nconst result = [11, 12].filter(num => filterTestFn(num));\n\nconsole.log(result);\n// > [11]\nconsole.log(filterTestFn.mock.calls[0][0]); // 11\nconsole.log(filterTestFn.mock.calls[1][0]); // 12\n"})}),"\n",(0,o.jsx)(n.p,{children:"\u0411\u0456\u043b\u044c\u0448\u0456\u0441\u0442\u044c \u043f\u0440\u0438\u043a\u043b\u0430\u0434\u0456\u0432 \u0437 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0436\u0438\u0442\u0442\u044f \u043f\u0435\u0440\u0435\u0434\u0431\u0430\u0447\u0430\u044e\u0442\u044c \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u0444\u0443\u043d\u043a\u0446\u0456\u0439-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0439 \u0432 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430\u0445, \u0432\u0456\u0434 \u044f\u043a\u0438\u0445 \u0437\u0430\u043b\u0435\u0436\u0438\u0442\u044c \u0432\u0430\u0448 \u043a\u043e\u0434, \u0430\u043b\u0435 \u0442\u0435\u0445\u043d\u0456\u043a\u0430 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454\u0442\u044c\u0441\u044f \u0442\u0430 \u0436 \u0441\u0430\u043c\u0430. \u0412 \u0442\u0430\u043a\u043e\u043c\u0443 \u0432\u0438\u043f\u0430\u0434\u043a\u0443 \u043d\u0430\u043c\u0430\u0433\u0430\u0439\u0442\u0435\u0441\u044f \u0443\u043d\u0438\u043a\u0430\u0442\u0438 \u0441\u043f\u043e\u043a\u0443\u0441\u0438 \u0456\u043c\u043f\u043b\u0435\u043c\u0435\u043d\u0442\u0443\u0432\u0430\u0442\u0438 \u043b\u043e\u0433\u0456\u043a\u0443 \u0432\u0441\u0435\u0440\u0435\u0434\u0438\u043d\u0456 \u0431\u0443\u0434\u044c-\u044f\u043a\u043e\u0457 \u0444\u0443\u043d\u043a\u0446\u0456\u0457, \u044f\u043a\u0430 \u0431\u0435\u0437\u043f\u043e\u0441\u0435\u0440\u0435\u0434\u043d\u044c\u043e \u043d\u0435 \u0442\u0435\u0441\u0442\u0443\u0454\u0442\u044c\u0441\u044f."}),"\n",(0,o.jsx)(n.h2,{id:"\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u044f-\u043c\u043e\u0434\u0443\u043b\u0456\u0432",children:"\u0406\u043c\u0456\u0442\u0430\u0446\u0456\u044f \u043c\u043e\u0434\u0443\u043b\u0456\u0432"}),"\n",(0,o.jsxs)(n.p,{children:["\u041f\u0440\u0438\u043f\u0443\u0441\u0442\u0438\u043c\u043e, \u0449\u043e \u0432 \u043d\u0430\u0441 \u0454 \u043a\u043b\u0430\u0441, \u044f\u043a\u0438\u0439 \u043e\u0442\u0440\u0438\u043c\u0443\u0454 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0456\u0432 \u0437 \u043d\u0430\u0448\u043e\u0433\u043e API. \u041a\u043b\u0430\u0441 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0454 ",(0,o.jsx)(n.a,{href:"https://github.com/axios/axios",children:"axios"})," \u0434\u043b\u044f \u0432\u0438\u043a\u043b\u0438\u043a\u0443 API \u0456 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0454 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 ",(0,o.jsx)(n.code,{children:"data"}),", \u044f\u043a\u0438\u0439 \u043c\u0456\u0441\u0442\u0438\u0442\u044c \u0432\u0441\u0456\u0445 \u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0447\u0456\u0432:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="users.js"',children:"import axios from 'axios';\n\nclass Users {\n  static all() {\n    return axios.get('/users.json').then(resp => resp.data);\n  }\n}\n\nexport default Users;\n"})}),"\n",(0,o.jsxs)(n.p,{children:["\u0422\u0435\u043f\u0435\u0440, \u0449\u043e\u0431 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0443\u0432\u0430\u0442\u0438 \u0446\u0435\u0439 \u043c\u0435\u0442\u043e\u0434 \u0431\u0435\u0437 \u0441\u043f\u0440\u0430\u0432\u0436\u043d\u044c\u043e\u0433\u043e API \u0432\u0438\u043a\u043b\u0438\u043a\u0443 (\u0442\u043e\u0431\u0442\u043e \u043d\u0435 \u0441\u0442\u0432\u043e\u0440\u044e\u044e\u0447\u0438 \u043f\u043e\u0432\u0456\u043b\u044c\u043d\u0456 \u0456 \u043a\u0440\u0438\u0445\u043a\u0456 \u0442\u0435\u0441\u0442\u0438), \u043c\u0438 \u043c\u043e\u0436\u0435\u043c\u043e \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442\u0438 ",(0,o.jsx)(n.code,{children:"jest.mock(...)"})," \u0434\u043b\u044f \u0441\u0442\u0432\u043e\u0440\u0435\u043d\u043d\u044f \u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0457 \u0432\u0441\u044c\u043e\u0433\u043e \u043c\u043e\u0434\u0443\u043b\u044f axios."]}),"\n",(0,o.jsxs)(n.p,{children:["\u041f\u0456\u0441\u043b\u044f \u0442\u043e\u0433\u043e, \u044f\u043a \u043c\u0438 \u0441\u0442\u0432\u043e\u0440\u0438\u043c\u043e \u0456\u043c\u0456\u0442\u0430\u0446\u0456\u044e \u043c\u043e\u0434\u0443\u043b\u044f, \u043c\u0438 \u043c\u043e\u0436\u0435\u043c\u043e \u0432\u043a\u0430\u0437\u0430\u0442\u0438 ",(0,o.jsx)(n.code,{children:"mockResolvedValue"})," \u0434\u043b\u044f \u043c\u0435\u0442\u043e\u0434\u0443 ",(0,o.jsx)(n.code,{children:".get"}),", \u044f\u043a\u0438\u0439 \u043f\u043e\u0432\u0435\u0440\u0442\u0430\u0442\u0438\u043c\u0435 \u0434\u0430\u043d\u0456, \u0437 \u044f\u043a\u0438\u043c\u0438 \u043f\u0440\u0430\u0446\u044e\u0432\u0430\u0442\u0438\u043c\u0435 \u043d\u0430\u0448 \u0442\u0435\u0441\u0442. \u0422\u043e\u0431\u0442\u043e \u0444\u0430\u043a\u0442\u0438\u0447\u043d\u043e \u043c\u0438 \u0433\u043e\u0432\u043e\u0440\u0438\u043c\u043e, \u0449\u043e \u0445\u043e\u0447\u0435\u043c\u043e, \u0449\u043e\u0431 ",(0,o.jsx)(n.code,{children:"axios.get('/users.json')"})," \u043f\u043e\u0432\u0435\u0440\u043d\u0443\u0432 \u0444\u0456\u043b\u044c\u0448\u0438\u0432\u0443 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u044c."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="users.test.js"',children:"import axios from 'axios';\nimport Users from './users';\n\njest.mock('axios');\n\ntest('should fetch users', () => {\n  const users = [{name: 'Bob'}];\n  const resp = {data: users};\n  axios.get.mockResolvedValue(resp);\n\n  // \u0430\u0431\u043e \u0432\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0432\u0430\u0442\u0438 \u043d\u0430\u0441\u0442\u0443\u043f\u043d\u0443 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0456\u044e, \u0432 \u0437\u0430\u043b\u0435\u0436\u043d\u043e\u0441\u0442\u0456 \u0432\u0456\u0434 \u0432\u0430\u0448\u0438\u0445 \u043f\u043e\u0442\u0440\u0435\u0431:\n  // axios.get.mockImplementation(() => Promise.resolve(resp))\n\n  return Users.all().then(data => expect(data).toEqual(users));\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"\u0447\u0430\u0441\u0442\u043a\u043e\u0432\u0430-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u044f",children:"\u0427\u0430\u0441\u0442\u043a\u043e\u0432\u0430 \u0456\u043c\u0456\u0442\u0430\u0446\u0456\u044f"}),"\n",(0,o.jsx)(n.p,{children:"\u0406\u0441\u043d\u0443\u0454 \u043c\u043e\u0436\u043b\u0438\u0432\u0456\u0441\u0442\u044c \u0441\u0442\u0432\u043e\u0440\u0438\u0442\u0438 \u0456\u043c\u0456\u0442\u0430\u0446\u0456\u044e \u0442\u0456\u043b\u044c\u043a\u0438 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u0438\u043d\u0438 \u043c\u043e\u0434\u0443\u043b\u044f, \u043a\u043e\u043b\u0438 \u0440\u0435\u0448\u0442\u0430 \u043c\u0435\u0442\u043e\u0434\u0456\u0432 \u0437\u0431\u0435\u0440\u0456\u0433\u0430\u0442\u0438\u043c\u0435 \u0441\u0432\u043e\u044e \u043e\u0440\u0438\u0433\u0456\u043d\u0430\u043b\u044c\u043d\u0443 \u0440\u0435\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044e:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="foo-bar-baz.js"',children:"export const foo = 'foo';\nexport const bar = () => 'bar';\nexport default () => 'baz';\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"//test.js\nimport defaultExport, {bar, foo} from '../foo-bar-baz';\n\njest.mock('../foo-bar-baz', () => {\n  const originalModule = jest.requireActual('../foo-bar-baz');\n\n  // \u0421\u0442\u0432\u043e\u0440\u044e\u0454\u043c\u043e \u0456\u043c\u0456\u0442\u0430\u0446\u0456\u044e \u0435\u0441\u043f\u043e\u0440\u0442\u0443 \u0437\u0430-\u0437\u0430\u043c\u043e\u0432\u0447\u0443\u0432\u0430\u043d\u043d\u044f\u043c \u0456 \u0456\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u043e\u0433\u043e \u0435\u043a\u0441\u043f\u043e\u0440\u0442\u0443 'foo'\n  return {\n    __esModule: true,\n    ...originalModule,\n    default: jest.fn(() => 'mocked baz'),\n    foo: 'mocked foo',\n  };\n});\n\ntest('should do a partial mock', () => {\n  const defaultExportResult = defaultExport();\n  expect(defaultExportResult).toBe('mocked baz');\n  expect(defaultExport).toHaveBeenCalled();\n\n  expect(foo).toBe('mocked foo');\n  expect(bar()).toBe('bar');\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"\u0440\u0435\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0457",children:"\u0420\u0435\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f \u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0457"}),"\n",(0,o.jsxs)(n.p,{children:["Still, there are cases where it's useful to go beyond the ability to specify return values and full-on replace the implementation of a mock function. This can be done with ",(0,o.jsx)(n.code,{children:"jest.fn"})," or the ",(0,o.jsx)(n.code,{children:"mockImplementationOnce"})," method on mock functions."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const myMockFn = jest.fn(cb => cb(null, true));\n\nmyMockFn((err, val) => console.log(val));\n// > true\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"mockImplementation"})," method is useful when you need to define the default implementation of a mock function that is created from another module:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="foo.js"',children:"module.exports = function () {\n  // \u044f\u043a\u0430\u0441\u044c \u0440\u0435\u0430\u043b\u0456\u0437\u0430\u0446\u0456\u044f;\n};\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",metastring:'title="test.js"',children:"jest.mock('../foo'); // \u0446\u0435 \u0432\u0456\u0434\u0431\u0443\u0432\u0430\u0454\u0442\u044c\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u043e, \u043a\u043e\u043b\u0438 \u0443\u0432\u0456\u043c\u043a\u043d\u0435\u043d\u0438\u0439 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u043d\u0438\u0439 \u043c\u043e\u043a\u0456\u043d\u0433\nconst foo = require('../foo');\n\n// foo is a mock function\nfoo.mockImplementation(() => 42);\nfoo();\n// > 42\n"})}),"\n",(0,o.jsxs)(n.p,{children:["When you need to recreate a complex behavior of a mock function such that multiple function calls produce different results, use the ",(0,o.jsx)(n.code,{children:"mockImplementationOnce"})," method:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const myMockFn = jest\n  .fn()\n  .mockImplementationOnce(cb => cb(null, true))\n  .mockImplementationOnce(cb => cb(null, false));\n\nmyMockFn((err, val) => console.log(val));\n// > true\n\nmyMockFn((err, val) => console.log(val));\n// > false\n"})}),"\n",(0,o.jsxs)(n.p,{children:["When the mocked function runs out of implementations defined with ",(0,o.jsx)(n.code,{children:"mockImplementationOnce"}),", it will execute the default implementation set with ",(0,o.jsx)(n.code,{children:"jest.fn"})," (if it is defined):"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const myMockFn = jest\n  .fn(() => 'default')\n  .mockImplementationOnce(() => 'first call')\n  .mockImplementationOnce(() => 'second call');\n\nconsole.log(myMockFn(), myMockFn(), myMockFn(), myMockFn());\n// > 'first call', 'second call', 'default', 'default'\n"})}),"\n",(0,o.jsxs)(n.p,{children:["For cases where we have methods that are typically chained (and thus always need to return ",(0,o.jsx)(n.code,{children:"this"}),"), we have a sugary API to simplify this in the form of a ",(0,o.jsx)(n.code,{children:".mockReturnThis()"})," function that also sits on all mocks:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const myObj = {\n  myMethod: jest.fn().mockReturnThis(),\n};\n\n// is the same as\n\nconst otherObj = {\n  myMethod: jest.fn(function () {\n    return this;\n  }),\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"mock-names",children:"Mock Names"}),"\n",(0,o.jsxs)(n.p,{children:["\u0417\u0430 \u043f\u043e\u0442\u0440\u0435\u0431\u0438, \u0432\u0438 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u043a\u0430\u0437\u0430\u0442\u0438 \u0456\u043c\u0435\u043d\u0430 \u0434\u043b\u044f \u0432\u0430\u0448\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0456\u0439-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u0439, \u044f\u043a\u0456 \u0431\u0443\u0434\u0443\u0442\u044c \u043f\u043e\u043a\u0430\u0437\u0443\u0432\u0430\u0442\u0438\u0441\u044f \u0437\u0430\u043c\u0456\u0441\u0442\u044c ",(0,o.jsx)(n.code,{children:"'jest.fn()'"})," \u0443 \u0432\u0438\u0432\u043e\u0434\u0456 \u043f\u043e\u043c\u0438\u043b\u043e\u043a \u0442\u0435\u0441\u0442\u0456\u0432. \u0412\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u043e\u0432\u0443\u0439\u0442\u0435 ",(0,o.jsx)(n.a,{href:"MockFunctionAPI.md/#mockfnmocknamename",children:(0,o.jsx)(n.code,{children:".mockName()"})}),", \u044f\u043a\u0449\u043e \u0432\u0430\u043c \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0448\u0432\u0438\u0434\u043a\u043e \u0432\u0438\u0437\u043d\u0430\u0447\u0438\u0442\u0438 \u0444\u0443\u043d\u043a\u0446\u0456\u044e-\u0456\u043c\u0456\u0442\u0430\u0446\u0456\u044e, \u0449\u043e \u0437\u0432\u0456\u0442\u0443\u0454 \u043f\u0440\u043e \u043f\u043e\u043c\u0438\u043b\u043a\u0443 \u0443 \u0432\u0438\u0432\u043e\u0434\u0456 \u0442\u0435\u0441\u0442\u0443."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const myMockFn = jest\n  .fn()\n  .mockReturnValue('default')\n  .mockImplementation(scalar => 42 + scalar)\n  .mockName('add42');\n"})}),"\n",(0,o.jsx)(n.h2,{id:"\u043a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0446\u044c\u043a\u0456-\u043c\u0430\u0442\u0447\u0435\u0440\u0438",children:"\u041a\u043e\u0440\u0438\u0441\u0442\u0443\u0432\u0430\u0446\u044c\u043a\u0456 \u043c\u0430\u0442\u0447\u0435\u0440\u0438"}),"\n",(0,o.jsx)(n.p,{children:"Finally, in order to make it less demanding to assert how mock functions have been called, we've added some custom matcher functions for you:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// The mock function was called at least once\nexpect(mockFunc).toHaveBeenCalled();\n\n// The mock function was called at least once with the specified args\nexpect(mockFunc).toHaveBeenCalledWith(arg1, arg2);\n\n// The last call to the mock function was called with the specified args\nexpect(mockFunc).toHaveBeenLastCalledWith(arg1, arg2);\n\n// All calls and the name of the mock is written as a snapshot\nexpect(mockFunc).toMatchSnapshot();\n"})}),"\n",(0,o.jsxs)(n.p,{children:["These matchers are sugar for common forms of inspecting the ",(0,o.jsx)(n.code,{children:".mock"})," property. You can always do this manually yourself if that's more to your taste or if you need to do something more specific:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// The mock function was called at least once\nexpect(mockFunc.mock.calls.length).toBeGreaterThan(0);\n\n// The mock function was called at least once with the specified args\nexpect(mockFunc.mock.calls).toContainEqual([arg1, arg2]);\n\n// The last call to the mock function was called with the specified args\nexpect(mockFunc.mock.calls[mockFunc.mock.calls.length - 1]).toEqual([\n  arg1,\n  arg2,\n]);\n\n// The first arg of the last call to the mock function was `42`\n// (note that there is no sugar helper for this specific of an assertion)\nexpect(mockFunc.mock.calls[mockFunc.mock.calls.length - 1][0]).toBe(42);\n\n// A snapshot will check that a mock was invoked the same number of times,\n// in the same order, with the same arguments. It will also assert on the name.\nexpect(mockFunc.mock.calls).toEqual([[arg1, arg2]]);\nexpect(mockFunc.getMockName()).toBe('a mock name');\n"})}),"\n",(0,o.jsxs)(n.p,{children:["\u0414\u043b\u044f \u043f\u043e\u0432\u043d\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0443 \u043c\u0430\u0442\u0447\u0435\u0440\u0456\u0432 \u0437\u0432\u0435\u0440\u043d\u0456\u0442\u044c\u0441\u044f \u0434\u043e ",(0,o.jsx)(n.a,{href:"/uk/docs/29.4/expect",children:"\u0434\u043e\u0432\u0456\u0434\u043a\u043e\u0432\u043e\u0457 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0456\u0457"}),"."]})]})}const m=function(e={}){const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(d,e)})):d(e)}},1670:(e,n,c)=>{c.d(n,{Zo:()=>l,ah:()=>s});var o=c(7378);const t=o.createContext({});function s(e){const n=o.useContext(t);return o.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const a={};function l({components:e,children:n,disableParentContext:c}){let l;return l=c?"function"==typeof e?e({}):e||a:s(e),o.createElement(t.Provider,{value:l},n)}}}]);