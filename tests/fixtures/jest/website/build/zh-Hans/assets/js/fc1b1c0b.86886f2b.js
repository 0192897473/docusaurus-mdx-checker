"use strict";(self.webpackChunkjest_website=self.webpackChunkjest_website||[]).push([[7462],{6435:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>h,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var n=s(4246),o=s(1670);const a={title:"Jest 14.0: React Tree Snapshot Testing",author:"Christoph Nakazawa",authorURL:"http://twitter.com/cpojer",authorFBID:0x5af311d9a1c8},i=void 0,r={permalink:"/zh-Hans/blog/2016/07/27/jest-14",editUrl:"https://github.com/jestjs/jest/tree/main/website/blog/2016-07-27-jest-14.md",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-blog/2016-07-27-jest-14.md",title:"Jest 14.0: React Tree Snapshot Testing",description:"One of Jest's philosophies is to provide an integrated \u201czero-configuration\u201d experience. We want to make it as frictionless as possible to write good tests that are useful. We observed that when engineers are provided with ready-to-use tools, they end up writing more tests, which in turn results in stable and healthy code bases.",date:"2016-07-27T00:00:00.000Z",formattedDate:"2016\u5e747\u670827\u65e5",tags:[],readingTime:5.38,hasTruncateMarker:!0,authors:[{name:"Christoph Nakazawa",url:"http://twitter.com/cpojer"}],frontMatter:{title:"Jest 14.0: React Tree Snapshot Testing",author:"Christoph Nakazawa",authorURL:"http://twitter.com/cpojer",authorFBID:0x5af311d9a1c8},unlisted:!1,prevItem:{title:"Jest 15.0: New Defaults for Jest",permalink:"/zh-Hans/blog/2016/09/01/jest-15"},nextItem:{title:"Jest 13.0: Flow & REPL",permalink:"/zh-Hans/blog/2016/06/22/jest-13"}},h={authorsImageUrls:[void 0]},c=[];function l(e){const t=Object.assign({p:"p",a:"a"},(0,o.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"One of Jest's philosophies is to provide an integrated \u201czero-configuration\u201d experience. We want to make it as frictionless as possible to write good tests that are useful. We observed that when engineers are provided with ready-to-use tools, they end up writing more tests, which in turn results in stable and healthy code bases."}),"\n",(0,n.jsxs)(t.p,{children:["One of the big open questions was how to write React tests efficiently. There are plenty of tools such as ",(0,n.jsx)(t.a,{href:"https://facebook.github.io/react/docs/test-utils.html",children:"ReactTestUtils"})," and ",(0,n.jsx)(t.a,{href:"https://enzymejs.github.io/enzyme/",children:"enzyme"}),". Both of these tools are great and are actively being used. However engineers frequently told us that they spend more time writing a test than the component itself. As a result many people stopped writing tests altogether which eventually led to instabilities. Engineers told us all they wanted was to make sure their components don't change unexpectedly."]})]})}const u=function(e={}){const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(l,e)})):l(e)}},1670:(e,t,s)=>{s.d(t,{Zo:()=>r,ah:()=>a});var n=s(7378);const o=n.createContext({});function a(e){const t=n.useContext(o);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const i={};function r({components:e,children:t,disableParentContext:s}){let r;return r=s?"function"==typeof e?e({}):e||i:a(e),n.createElement(o.Provider,{value:r},t)}}}]);